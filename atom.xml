<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小跳蛙 的博客</title>
  
  <subtitle>快乐的一只小跳蛙</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xtwnirui.github.io/"/>
  <updated>2019-11-24T11:34:47.393Z</updated>
  <id>http://xtwnirui.github.io/</id>
  
  <author>
    <name>小跳蛙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小跳蛙的友联</title>
    <link href="http://xtwnirui.github.io/2019/11/24/friend/"/>
    <id>http://xtwnirui.github.io/2019/11/24/friend/</id>
    <published>2019-11-24T10:43:22.000Z</published>
    <updated>2019-11-24T11:34:47.393Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一只菜蛙的友联<br><a id="more"></a></p><h2 id="团队"><a href="#团队" class="headerlink" title="团队"></a>团队</h2><p><a href="https://www.luogu.com.cn/team/show?teamid=19227" target="_blank" rel="noopener">七夕节配对</a><br><a href="https://www.luogu.com.cn/team/show?teamid=9809" target="_blank" rel="noopener">三体ETO</a><br><a href="https://www.luogu.com.cn/team/show?teamid=10603" target="_blank" rel="noopener">反chen_zhe大队</a><br><a href="https://www.luogu.com.cn/team/show?teamid=9121" target="_blank" rel="noopener">chen_zhe联盟</a><br><a href="https://www.luogu.com.cn/team/show?teamid=12272" target="_blank" rel="noopener">反⑨baka拖更大队</a><br><a href="https://www.luogu.com.cn/team/show?teamid=19587" target="_blank" rel="noopener">调戏客服大队</a><br><a href="https://www.luogu.com.cn/team/show?teamid=9232" target="_blank" rel="noopener">洛谷Slayone</a><br><a href="https://www.luogu.com.cn/team/show?teamid=19679" target="_blank" rel="noopener">情圣撩妹小课堂</a><br><a href="https://www.luogu.com.cn/team/show?teamid=5631" target="_blank" rel="noopener">MC之家</a><br><a href="https://www.luogu.com.cn/team/show?teamid=20187" target="_blank" rel="noopener">动漫展~</a>  </p><h2 id="巨佬区"><a href="#巨佬区" class="headerlink" title="巨佬区"></a>巨佬区</h2><p><a href="https://www.luogu.com.cn/user/67371" target="_blank" rel="noopener">巨佬hehezhou</a><br><a href="https://www.luogu.com.cn/user/28145" target="_blank" rel="noopener">巨佬qiyang2004</a><br><a href="https://www.luogu.com.cn/user/25512" target="_blank" rel="noopener">巨佬Little_Ming</a><br><a href="https://www.luogu.com.cn/user/53807" target="_blank" rel="noopener">又小又强又假无敌啦的Loveti</a><br><a href="https://www.luogu.com.cn/user/58567" target="_blank" rel="noopener">巨佬x义x</a><br><a href="https://www.luogu.com.cn/user/58567" target="_blank" rel="noopener">巨佬sunyunqi</a><br><a href="https://www.luogu.com.cn/user/148121" target="_blank" rel="noopener">巨佬zzy111</a><br><a href="https://www.luogu.com.cn/user/49458" target="_blank" rel="noopener">巨佬木木！</a><br><a href="https://www.luogu.com.cn/user/98618" target="_blank" rel="noopener">巨佬_DXL_</a><br><a href="https://www.luogu.com.cn/user/24621" target="_blank" rel="noopener">巨佬Remnants</a><br><a href="https://www.luogu.com.cn/user/23170" target="_blank" rel="noopener">巨佬回y青z绝h影</a><br><a href="https://www.luogu.com.cn/user/34217" target="_blank" rel="noopener">巨佬Katsura_Hinagiku</a><br><a href="https://www.luogu.com.cn/user/73362" target="_blank" rel="noopener">巨佬Believe_r_</a><br><a href="https://www.luogu.com.cn/user/29519" target="_blank" rel="noopener">巨佬qianfujia</a><br><a href="https://www.luogu.com.cn/user/51692" target="_blank" rel="noopener">巨佬火车司机</a><br><a href="https://www.luogu.com.cn/user/68030" target="_blank" rel="noopener">巨佬serverkiller</a><br><a href="https://www.luogu.com.cn/user/152684" target="_blank" rel="noopener">巨佬wdk1745</a><br><a href="https://www.luogu.com.cn/user/221311" target="_blank" rel="noopener">巨佬qiqing</a><br><a href="https://www.luogu.com.cn/user/27924" target="_blank" rel="noopener">巨佬xukuan</a><br><a href="https://www.luogu.com.cn/user/31712" target="_blank" rel="noopener">巨佬zrzluck99</a><br><a href="https://www.luogu.com.cn/user/32879" target="_blank" rel="noopener">巨佬huxiaobang</a><br><a href="https://www.luogu.com.cn/user/53058" target="_blank" rel="noopener">巨佬自动AK机</a><br><a href="https://www.luogu.com.cn/user/38276" target="_blank" rel="noopener">巨佬chc_1234567890</a><br><a href="https://www.luogu.com.cn/user/36770" target="_blank" rel="noopener">巨佬realSpongeBob</a><br><a href="https://www.luogu.com.cn/user/37952" target="_blank" rel="noopener">巨佬zyy_123456</a><br><a href="https://www.luogu.com.cn/user/26937" target="_blank" rel="noopener">巨佬_soul_</a><br><a href="https://www.luogu.com.cn/user/67878" target="_blank" rel="noopener">巨佬stepsys</a><br><a href="https://www.luogu.com.cn/user/150190" target="_blank" rel="noopener">与Loveti认识的巨佬花开_心相惜</a><br><a href>蒟蒻小跳蛙</a></p><h2 id="犇友区"><a href="#犇友区" class="headerlink" title="犇友区"></a>犇友区</h2><p><a href="https://www.luogu.com.cn/user/104581" target="_blank" rel="noopener">烤狗</a><br><a href="https://www.luogu.com.cn/user/213346" target="_blank" rel="noopener">小猫</a><br><a href="https://www.luogu.com.cn/user/128141" target="_blank" rel="noopener">大猫</a><br><a href="https://www.luogu.com.cn/user/133509" target="_blank" rel="noopener">HS</a><br><a href="https://www.luogu.com.cn/user/87393" target="_blank" rel="noopener">曾经的AH</a><br><a href="https://www.luogu.com.cn/user/204365" target="_blank" rel="noopener">AH</a><br><a href="https://www.luogu.com.cn/user/201635" target="_blank" rel="noopener">MY</a><br><a href="https://www.luogu.com.cn/user/126504" target="_blank" rel="noopener">赤诚</a><br><a href="https://www.luogu.com.cn/user/66769" target="_blank" rel="noopener">juruoOrz</a><br><a href="https://www.luogu.com.cn/user/116689" target="_blank" rel="noopener">ygg</a><br><a href="https://www.luogu.com.cn/user/124683" target="_blank" rel="noopener">AT</a><br><a href="https://www.luogu.com.cn/user/54047" target="_blank" rel="noopener">KR</a><br><a href="https://www.luogu.com.cn/user/214148" target="_blank" rel="noopener">Mr_zherui</a><br><a href="https://www.luogu.com.cn/user/195331" target="_blank" rel="noopener">MK</a><br><a href="https://www.luogu.com.cn/user/186034" target="_blank" rel="noopener">陈沫</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一只菜蛙的友联&lt;br&gt;
    
    </summary>
    
    
    
      <category term="其他" scheme="http://xtwnirui.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>P4092[HEOI2016/TJOI2016]树（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P4092/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P4092/</id>
    <published>2019-10-15T03:39:03.000Z</published>
    <updated>2019-10-20T07:14:00.994Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P4092-HEOI2016-TJOI2016-树（题解）"><a href="#P4092-HEOI2016-TJOI2016-树（题解）" class="headerlink" title="P4092[HEOI2016/TJOI2016]树（题解）"></a>P4092[HEOI2016/TJOI2016]树（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problemnew/show/P4092" target="_blank" rel="noopener">点我</a></p><h2 id="Ready"><a href="#Ready" class="headerlink" title="Ready."></a>Ready.</h2><p><strong>dfs序：</strong><br>把原树按照dfs的序号编号，先dfs到的节点dfs序小<br>例如下图中就是样例，黑体是dfs序，蓝体是题目给定序（原序）<br><img src="https://cdn.luogu.com.cn/upload/pic/51164.png" alt="出错啦"></p><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention."></a>Attention.</h2><p>dfs序与原序要分清<br>修改时并不能直接赋值，要取最大值。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>先把原数赋予按照dfs序，以及逆dfs序。<br><del>现在经观察得，</del>每一个点的子孙便是【它，它的最右子节点】中所有整数。<br>接下来便可以向线段树思考了，它需要维护区间最大值。<br>支持区间改最大值，查最大值。</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ull unsigned long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> ll Max=<span class="number">100005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">data</span>//线段树节点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll num,flag;</span><br><span class="line">data() &#123;num=<span class="number">1</span>;flag=<span class="number">0</span>;&#125;</span><br><span class="line">data(ll a,ll b):num(a),flag(b) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span>//题目中给的树</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="built_in">vector</span>&lt;ll&gt;b[Max];</span><br><span class="line">ll dfs_xu[Max],ni_dfs_xu[Max],size;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span><span class="comment">//清空</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;Max;i++) b[i].clear();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add_edge</span><span class="params">(ll x,ll y)</span><span class="comment">//加边</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">b[x].push_back(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll now,ll fa)</span><span class="comment">//求dfs序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(now==<span class="number">1</span>) size=<span class="number">0</span>;</span><br><span class="line">size++;</span><br><span class="line">dfs_xu[now]=size;</span><br><span class="line"><span class="keyword">for</span>(ull i=<span class="number">0</span>;i&lt;b[now].size();i++)</span><br><span class="line"><span class="keyword">if</span>(b[now][i]!=fa)</span><br><span class="line">dfs(b[now][i],now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ni_dfs</span><span class="params">()</span><span class="comment">//求逆dfs序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=size;i++) ni_dfs_xu[dfs_xu[i]]=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">rightest</span><span class="params">(ll n)</span><span class="comment">//n是原序,rightest是原序;</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(b[n].size()==<span class="number">0</span>) <span class="keyword">return</span> n;</span><br><span class="line"><span class="keyword">return</span> rightest(b[n][b[n].size()<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">cut_tree</span>//线段树</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">data tre[Max&lt;&lt;<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">down</span><span class="params">(ll rt,ll l,ll r)</span><span class="comment">//下推标记（有点烦）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!tre[rt].flag) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(l==r)</span><br><span class="line">&#123;</span><br><span class="line">tre[rt].num=max(tre[rt].num,tre[rt].flag);<span class="comment">//注意！！！不应该直接赋值</span></span><br><span class="line">tre[rt].flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">tre[rt&lt;&lt;<span class="number">1</span>].flag=max(tre[rt].flag,tre[rt&lt;&lt;<span class="number">1</span>].flag);</span><br><span class="line">tre[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].flag=max(tre[rt].flag,tre[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].flag);</span><br><span class="line">tre[rt].num=max(tre[rt].num,tre[rt].flag);</span><br><span class="line">tre[rt].flag=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">up</span><span class="params">(ll rt,ll l,ll r)</span><span class="comment">//上推数值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">tre[rt].num=max(tre[rt&lt;&lt;<span class="number">1</span>].num,tre[rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">csearch</span><span class="params">(ll rt,ll l,ll r,ll d)</span><span class="comment">//查询</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">down(rt,l,r);</span><br><span class="line"><span class="keyword">if</span>(l==d&amp;&amp;r==d) <span class="keyword">return</span> tre[rt].num;</span><br><span class="line"><span class="keyword">if</span>(d&lt;=(l+r)&gt;&gt;<span class="number">1</span>) <span class="keyword">return</span> csearch(rt&lt;&lt;<span class="number">1</span>,l,(l+r)&gt;&gt;<span class="number">1</span>,d);</span><br><span class="line"><span class="keyword">return</span> csearch(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,((l+r)&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>,r,d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">change</span><span class="params">(ll rt,ll l,ll r,ll dl,ll dr,ll dc)</span><span class="comment">//修改</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&gt;r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(dl&gt;r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(l&gt;dr) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span>(dl&lt;=l&amp;&amp;r&lt;=dr)</span><br><span class="line">&#123;</span><br><span class="line">tre[rt].flag=max(tre[rt].flag,dc);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">change(rt&lt;&lt;<span class="number">1</span>,l,(l+r)&gt;&gt;<span class="number">1</span>,dl,dr,dc);</span><br><span class="line">change(rt&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,((l+r)&gt;&gt;<span class="number">1</span>)+<span class="number">1</span>,r,dl,dr,dc);</span><br><span class="line">up(rt,l,r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">cut_tree tr;</span><br><span class="line">tree a;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,q;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;q);</span><br><span class="line">a.clean();</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll x,y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;x,&amp;y);</span><br><span class="line">a.add_edge(x,y);</span><br><span class="line">&#125;</span><br><span class="line">a.dfs(<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">a.ni_dfs();</span><br><span class="line"><span class="keyword">while</span>(q--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">char</span> c;ll x;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;c;<span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;x);</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'C'</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll y=a.rightest(x);</span><br><span class="line">tr.change(<span class="number">1</span>,<span class="number">1</span>,n,a.dfs_xu[x],a.dfs_xu[y],a.dfs_xu[x]);<span class="comment">//此处要搞清！！！</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'Q'</span>)</span><br><span class="line">&#123;</span><br><span class="line">ll y=tr.csearch(<span class="number">1</span>,<span class="number">1</span>,n,a.dfs_xu[x]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,a.ni_dfs_xu[y]);<span class="comment">//还有此处</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="线段树" scheme="http://xtwnirui.github.io/tags/%E7%BA%BF%E6%AE%B5%E6%A0%91/"/>
    
      <category term="树链剖分" scheme="http://xtwnirui.github.io/tags/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>P1299</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P1299/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P1299/</id>
    <published>2019-10-15T03:30:37.000Z</published>
    <updated>2019-10-20T07:04:01.655Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P1299切孔机（题解）"><a href="#P1299切孔机（题解）" class="headerlink" title="P1299切孔机（题解）"></a>P1299切孔机（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P1299" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS:"></a>PS:</h2><p>人生中的第一道黑题。（可惜现在掉绿了）<br>发一个题解纪念一下。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>首先先把读入的$\texttt{x},\texttt{y}$离散化<br>把所有的切痕记录下来<br>bfs把孔外的格子找出来<br>数有几个格子。（一个图中有几个连通块）</p><h2 id="My-Coding"><a href="#My-Coding" class="headerlink" title="My Coding."></a>My Coding.</h2><ul><li>xx,yy:表示方向。</li><li>point:表示点。<ul><li>number:第几次切</li><li>x,y:切的点的坐标</li></ul></li><li>picture:记录切痕<ul><li>can_go:一个点可以不可以向上下左右走(0:上,1:下,2:左:右)</li><li>visit:一个点是不是孔中的点(0:不是,1:是)</li></ul></li><li>cmpx,cmpy:离散化时用</li><li>cmp:切的次数从小到大，第一个切点尽量左上</li><li>ready:读入</li><li>lisan:离散化</li><li>build_wall:把所有切痕记录下来（2）</li><li>cut_paper:剪纸，把孔外的格子记录下来（3）</li><li>count_hole:数有几个洞（4）<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll xx[<span class="number">4</span>]=&#123;<span class="number">-1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>&#125;,yy[<span class="number">4</span>]=&#123;<span class="number">0</span>,<span class="number">0</span>,<span class="number">-1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ll number,x,y;</span><br><span class="line">point() &#123;&#125;</span><br><span class="line">point(ll a,ll b):x(a),y(b) &#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">picture</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">bool</span> can_go[<span class="number">4</span>],visit;</span><br><span class="line">picture()</span><br><span class="line">&#123;</span><br><span class="line">can_go[<span class="number">0</span>]=can_go[<span class="number">1</span>]=can_go[<span class="number">2</span>]=can_go[<span class="number">3</span>]=<span class="number">1</span>;</span><br><span class="line">visit=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line">ll n;</span><br><span class="line">point a[<span class="number">205</span>];</span><br><span class="line">picture b[<span class="number">205</span>][<span class="number">205</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpx</span><span class="params">(point a,point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmpy</span><span class="params">(point a,point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(point a,point b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a.number!=b.number) <span class="keyword">return</span> a.number&lt;b.number;</span><br><span class="line"><span class="keyword">if</span>(a.x!=b.x) <span class="keyword">return</span> a.x&lt;b.x;</span><br><span class="line"><span class="keyword">return</span> a.y&lt;b.y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i].number=(i+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">lisan</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll now,u;</span><br><span class="line">now=<span class="number">-10000005</span>;</span><br><span class="line">u=<span class="number">0</span>;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n*<span class="number">2</span>+<span class="number">1</span>,cmpx);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].x!=now)</span><br><span class="line">&#123;</span><br><span class="line">now=a[i].x;</span><br><span class="line">u++;</span><br><span class="line">a[i].x=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> a[i].x=u;</span><br><span class="line">&#125;</span><br><span class="line">now=<span class="number">-10000005</span>;</span><br><span class="line">u=<span class="number">0</span>;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n*<span class="number">2</span>+<span class="number">1</span>,cmpy);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n*<span class="number">2</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i].y!=now)</span><br><span class="line">&#123;</span><br><span class="line">now=a[i].y;</span><br><span class="line">u++;</span><br><span class="line">a[i].y=u;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> a[i].y=u;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">build_wall</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sort(a+<span class="number">1</span>,a+n*<span class="number">2</span>+<span class="number">1</span>,cmp);</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">point s=a[i*<span class="number">2</span><span class="number">-1</span>],e=a[i*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">for</span>(ll j=s.x+<span class="number">1</span>;j&lt;=e.x;j++)</span><br><span class="line">&#123;</span><br><span class="line">b[j][s.y].can_go[<span class="number">3</span>]=<span class="number">0</span>;</span><br><span class="line">b[j][s.y+<span class="number">1</span>].can_go[<span class="number">2</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(ll j=s.y+<span class="number">1</span>;j&lt;=e.y;j++)</span><br><span class="line">&#123;</span><br><span class="line">b[s.x][j].can_go[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">b[s.x+<span class="number">1</span>][j].can_go[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">cut_paper</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;point&gt;q;</span><br><span class="line">q.push(point(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">point now=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll x=now.x+xx[i],y=now.y+yy[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>||x&gt;<span class="number">200</span>||y&lt;<span class="number">0</span>||y&gt;<span class="number">200</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!b[x][y].visit) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!b[now.x][now.y].can_go[i]) <span class="keyword">continue</span>;</span><br><span class="line">b[x][y].visit=<span class="number">0</span>;</span><br><span class="line">q.push(point(x,y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">bfs</span><span class="params">(ll dx,ll dy)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">queue</span>&lt;point&gt;q;</span><br><span class="line">b[dx][dy].visit=<span class="number">0</span>;</span><br><span class="line">q.push(point(dx,dy));</span><br><span class="line"><span class="keyword">while</span>(!q.empty())</span><br><span class="line">&#123;</span><br><span class="line">point now=q.front();</span><br><span class="line">q.pop();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">ll x=now.x+xx[i],y=now.y+yy[i];</span><br><span class="line"><span class="keyword">if</span>(x&lt;<span class="number">0</span>||x&gt;<span class="number">200</span>||y&lt;<span class="number">0</span>||y&gt;<span class="number">200</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span>(!b[x][y].visit) <span class="keyword">continue</span>;</span><br><span class="line">b[x][y].visit=<span class="number">0</span>;</span><br><span class="line">q.push(point(x,y));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">count_hole</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(ll i=<span class="number">0</span>;i&lt;=<span class="number">200</span>;i++)</span><br><span class="line"><span class="keyword">for</span>(ll j=<span class="number">0</span>;j&lt;=<span class="number">200</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(!b[i][j].visit) <span class="keyword">continue</span>;</span><br><span class="line">ans++;</span><br><span class="line">bfs(i,j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ready();</span><br><span class="line">lisan();</span><br><span class="line">build_wall();</span><br><span class="line">cut_paper();</span><br><span class="line">ll ans=count_hole();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="离散化" scheme="http://xtwnirui.github.io/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
      <category term="搜索" scheme="http://xtwnirui.github.io/tags/%E6%90%9C%E7%B4%A2/"/>
    
  </entry>
  
  <entry>
    <title>P1485火枪打怪（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P1485/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P1485/</id>
    <published>2019-10-15T03:22:24.000Z</published>
    <updated>2019-10-20T07:14:28.340Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P1485火枪打怪（题解）"><a href="#P1485火枪打怪（题解）" class="headerlink" title="P1485火枪打怪（题解）"></a>P1485火枪打怪（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P1485" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p><strong>此题第一眼就可以看出是二分答案</strong><br><del>我看了标签QwQ</del></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>最难的是二分的$\texttt{check}$函数如何写。<br>首先因为子弹的威力是定值，所以每一个子弹的溅射范围是一样的，事先算出溅射范围。<br>$\texttt{p-(i-j)}\times\texttt{(i-j)}=\texttt{p-i}^\texttt{2}+\texttt{2}\times\texttt{i}\times\texttt{j+j}^\texttt{2}$<br>这个式子中，$\texttt{i}^\texttt{2}$、$\texttt{2}\times\texttt{i}\times\texttt{j}$、$\texttt{j}^\texttt{2}$ 都是可以维护的。<br>于是我们维护$\texttt{i}^\texttt{2}$之和，$\texttt{2}\times\texttt{i}$之和，$\texttt{1}$之和。<br>在加入时可以临时乘上$\texttt{j}$的次方次幂。</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,k,b[<span class="number">500005</span>];</span><br><span class="line">ll a[<span class="number">500005</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check</span><span class="params">(ll p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll _2=<span class="number">0</span>,_1=<span class="number">0</span>,_0=<span class="number">0</span>,s=<span class="built_in">sqrt</span>(p)+<span class="number">1</span>;</span><br><span class="line"><span class="comment">//s表示溅射范围，_2，_1，_0分别表示 i*i ， 2*i ， 1 。</span></span><br><span class="line"><span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//tot表示子弹数。</span></span><br><span class="line"><span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line"><span class="comment">//b表示在这里有无发过子弹。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(i+s&lt;=n&amp;&amp;b[i+s]) _2-=(i+s)*(i+s)*b[i+s],_1-=(i+s)*b[i+s],_0-=b[i+s];</span><br><span class="line"><span class="comment">//溅射结束，去掉影响。</span></span><br><span class="line">ll gone=_0*p-_0*i*i+<span class="number">2</span>*_1*i-_2;</span><br><span class="line"><span class="comment">//gong表示这个怪物由于之前的溅射扣的血量。</span></span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;=gone) b[i]=(a[i]-gone)/p+<span class="number">1</span>,tot+=b[i],_0+=b[i],_1+=b[i]*i,_2+=b[i]*i*i;</span><br><span class="line"><span class="comment">//如果这个怪物没被打死，还需要在开枪。</span></span><br><span class="line"><span class="keyword">if</span>(tot&gt;k) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="comment">//k枪已经打不死全部怪物了。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>,&amp;n,&amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,a+i);</span><br><span class="line">ll l=<span class="number">1</span>,r=<span class="number">1e13</span>,ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(check(mid)) l=mid+<span class="number">1</span>;<span class="keyword">else</span> r=mid<span class="number">-1</span>,ans=mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//二分板子。</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="二分答案" scheme="http://xtwnirui.github.io/tags/%E4%BA%8C%E5%88%86%E7%AD%94%E6%A1%88/"/>
    
  </entry>
  
  <entry>
    <title>P1863独眼兔（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P1863/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P1863/</id>
    <published>2019-10-15T03:15:39.000Z</published>
    <updated>2019-10-20T07:14:47.571Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P1863独眼兔（题解）"><a href="#P1863独眼兔（题解）" class="headerlink" title="P1863独眼兔（题解）"></a>P1863独眼兔（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P1863" target="_blank" rel="noopener">点我]]</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>此题是计算几何的入门好题，但是我却拖了大概两个月才把它搞定。。。<br>心情十分激动，于是来写一篇题解纪念一下QwQ。<br><strong>楼上的那一篇题解都用蒟蒻我看不懂的虚数，所以这篇题解很少用用STL的东西</strong></p><h2 id="Ready"><a href="#Ready" class="headerlink" title="Ready."></a>Ready.</h2><h3 id="1-向量是什么"><a href="#1-向量是什么" class="headerlink" title="1.向量是什么"></a>1.向量是什么</h3><p><img src="https://cdn.luogu.com.cn/upload/pic/65916.png" alt="图炸了，请自行百度百科"></p><h3 id="2-向量怎么表示"><a href="#2-向量怎么表示" class="headerlink" title="2.向量怎么表示"></a>2.向量怎么表示</h3><p><img src="https://cdn.luogu.com.cn/upload/pic/65918.png" alt="图炸了，请自行百度百科"></p><h3 id="3-向量的产生"><a href="#3-向量的产生" class="headerlink" title="3.向量的产生"></a>3.向量的产生</h3><p>设$\texttt{A(x}_\texttt{1}\texttt{,y}_\texttt{1}\texttt{) B(x}_\texttt{2}\texttt{,y}_\texttt{2}\texttt{)}$<br>则$\overrightarrow{\texttt{AB}}=\texttt{(x}_\texttt{2}\texttt{-x}_\texttt{1}\texttt{,y}_\texttt{1}\texttt{-y}_\texttt{2}\texttt{)}$</p><h3 id="4-向量的叉积"><a href="#4-向量的叉积" class="headerlink" title="4.向量的叉积"></a>4.向量的叉积</h3><p>设$\overrightarrow{\texttt{a}}\texttt{=(x}_\texttt{1}\texttt{,y}_\texttt{1}\texttt{)}\overrightarrow{\texttt{b}}\texttt{ =(x}_\texttt{2}\texttt{,y}_\texttt{2}\texttt{)}$<br>$\texttt{|}\overrightarrow{\texttt{a}}\times\overrightarrow{\texttt{b}}\texttt{|=}\sin\texttt{<a,b>}\times\texttt{|a|}\times\texttt{|b|}$<br>$\texttt{=x}_\texttt{\texttt{1}}\texttt{y}_\texttt{2}\texttt{-x}_\texttt{2}\texttt{y}_\texttt{1}$<br>$\boxed{\color{white}\colorbox{red}{注意：向量的叉积是一个向量，但是由于它飞出了平面，我们只考虑它的模长。}}$<br>由于$\texttt{|}\overrightarrow{\texttt{a}}\times\overrightarrow{\texttt{b}}\texttt{|=}\sin\texttt{<a,b>}\times\texttt{|a|}\times\texttt{|b|}$，所以向量的叉积的绝对值可以表示两个向量所夹的三角形面积，向量的叉积的正负可以表示两个向量的旋转的方向。</a,b></a,b></p><h2 id="Example"><a href="#Example" class="headerlink" title="Example."></a>Example.</h2><p><img src="https://cdn.luogu.com.cn/upload/pic/65926.png" alt="图挂了，这里略"></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>总体思路是：</p><ol><li>首先应该先找出最下面的点。</li><li>然后一个一个的去找点，找到最优的点。</li><li>最后输出答案。<br>但是如何去找到最优的点呢？</li><li>首先如果这个点从上一个点来需要向右旋转，那肯定不可能，这里需要用向量叉积的正负性。</li><li>然后用贪心的思想，尽量找到旋转角度最小的点，这里需要用向量叉积的模长。<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF=<span class="number">1000000005</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vec</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">inline</span> vec <span class="keyword">operator</span>+(vec &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> (vec)&#123;x+b.x,y+b.y&#125;;&#125;<span class="comment">//向量加</span></span><br><span class="line"><span class="keyword">inline</span> vec <span class="keyword">operator</span>-(vec &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> (vec)&#123;x-b.x,y-b.y&#125;;&#125;<span class="comment">//向量减</span></span><br><span class="line">&#125;;<span class="comment">//向量结构体</span></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="keyword">operator</span>*(vec a,vec b) &#123;<span class="keyword">return</span> a.x*b.y-a.y*b.x;&#125;<span class="comment">//向量的叉积</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">inline</span> vec <span class="keyword">operator</span>-(point &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> (vec)&#123;x-b.x,y-b.y&#125;;&#125;<span class="comment">//向量产生</span></span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="keyword">operator</span>/(point &amp;b) <span class="keyword">const</span> &#123;<span class="keyword">return</span> <span class="built_in">sqrt</span>((x-b.x)*(x-b.y)+(y-b.y)*(y-b.y));&#125;<span class="comment">//两点之间的距离</span></span><br><span class="line">&#125;a[<span class="number">1005</span>];<span class="comment">//平面上的一个点</span></span><br><span class="line"><span class="keyword">int</span> n,w=<span class="number">0</span>,vis[<span class="number">1005</span>];<span class="comment">//vis表示此处的萝卜是否被吃掉了</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;v;<span class="comment">//v表示答案数组</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n),a[<span class="number">0</span>].x=a[<span class="number">0</span>].y=INF;<span class="comment">//第一个点设置为无穷大，是为了方便下一行处理</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;a[i].x,&amp;a[i].y),w=(a[i].y&lt;a[w].y)?i:w;</span><br><span class="line"><span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">vis[w]=<span class="number">1</span>,v.push_back(w);<span class="comment">//最下面的点入队</span></span><br><span class="line">point lst1=(point)&#123;<span class="number">0</span>,a[w].y&#125;,lst2=a[w];<span class="comment">//lst1表示上一个点，lst2表示前面的第二个点</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,mw=<span class="number">-1</span>;i&lt;n;i++,mw=<span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)</span><br><span class="line"><span class="keyword">if</span>(!vis[j]&amp;&amp;(lst2-lst1)*(a[j]-lst1)&gt;=<span class="number">0</span>)<span class="comment">//这个点没有来过且不需要享有旋转</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(mw==<span class="number">-1</span>) &#123;mw=j;<span class="keyword">continue</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> t=(a[mw]-lst2)*(a[j]-lst2);<span class="comment">//用贪心的思想，要尽量的找到与上一个面积最小</span></span><br><span class="line"><span class="keyword">if</span>(t&lt;<span class="number">0</span>||(t==<span class="number">0</span>&amp;&amp;(a[j]/lst2)&lt;(a[mw]/lst2))) mw=j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mw==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">v.push_back(mw),vis[mw]=<span class="number">1</span>,lst1=lst2,lst2=a[mw];<span class="comment">//加入答案序列，标位已访问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;(<span class="keyword">int</span>)v.size();i++) <span class="built_in">printf</span>(<span class="string">"%d "</span>,v[i]);<span class="comment">//输出</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">""</span>),<span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="计算几何" scheme="http://xtwnirui.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>P4906小奔关闹钟（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P4906/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P4906/</id>
    <published>2019-10-15T03:03:48.000Z</published>
    <updated>2019-10-20T07:03:45.499Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P4906-小奔关闹钟"><a href="#P4906-小奔关闹钟" class="headerlink" title="P4906 小奔关闹钟"></a>P4906 小奔关闹钟</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P4906" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>暂无</p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem."></a>Problem.</h2><ol><li>目标：关闭所有的电灯</li><li>特殊：关了一个点灯之后，会影响其他电灯的开闭，其他点灯的开闭又继续影响</li><li>限制：上面的影响只会持续2轮，<del>不要问我为什么，我是从样例中看出来的QwQ</del><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2>由于题意分析中的第三条，我们可以考虑初始化更改一个点灯的状态后会产生的影响。<br>复杂度是$\texttt{O(n}^\texttt{3}\texttt{)}$，对于$\texttt{1&lt;n&lt;20}$的数据一定能过。<br>然后就可以暴力$\texttt{dfs}$来求答案了。<br>当然，如果两次或多次关同一盏灯，那么开关的效果会被抵消，所以对于每一个点，只有动与不动两种情况。<br>所以$\texttt{dfs}$的复杂度是$\texttt{O(2}^\texttt{n}\texttt{)}$，能过。<h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention."></a>Attention.</h2>由于$\texttt{n&lt;=20}$，$\texttt{2}^\texttt{20}=1048576$，在$\texttt{int}$的数据范围内，所以我们可以考虑状压。<br>由于开灯与关灯具有如下性质：$\texttt{0+0=0,1+1=0,0+1=1,1+0=0}$，所以我们可以把它当成异或操作。<h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2>代码里有解释<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ya(x) (1&lt;&lt;(x))<span class="comment">//状压函数，把一个集合压成一个数字</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> go(x,y) ((x)!=(y)&amp;&amp;a[(x)][(y)])<span class="comment">//判断函数：这里有一个坑点，就是一盏灯自己会指向自己，要加一个特判</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">25</span>,INF=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,ans,cha[N];</span><br><span class="line"><span class="keyword">char</span> a[N][N];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==n+<span class="number">1</span>) &#123;<span class="keyword">if</span>(s==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;<span class="keyword">return</span> INF;&#125;<span class="comment">//递归的边界</span></span><br><span class="line"><span class="keyword">return</span> min(dfs(x+<span class="number">1</span>,s),dfs(x+<span class="number">1</span>,s^cha[x])+<span class="number">1</span>);<span class="comment">//枚举这一盏灯动不动</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span><span class="comment">//读入函数，没什么好解释的把</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>,t,x;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);t--;)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x),a[i][x]=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ready</span><span class="params">()</span><span class="comment">//前面说的预处理部分</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(cha,<span class="number">0</span>,<span class="keyword">sizeof</span>(cha));<span class="comment">//cha代表change，表示动一下这个开关，会产生的影响的状态（已压缩</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">cha[i]^=ya(i<span class="number">-1</span>);<span class="comment">//它本身状态改变</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)<span class="comment">//持续的第一轮</span></span><br><span class="line"><span class="keyword">if</span>(go(i,j))</span><br><span class="line">&#123;</span><br><span class="line">cha[i]^=ya(j<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=n;k++) <span class="keyword">if</span>(go(j,k)) cha[i]^=ya(k<span class="number">-1</span>);<span class="comment">//它持续的第二轮</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans=dfs(<span class="number">1</span>,ya(n)<span class="number">-1</span>);<span class="comment">//找到答案</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> init(),ready(),ans&lt;=INF?<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans):<span class="built_in">puts</span>(<span class="string">"Change an alarm clock，please!"</span>),<span class="number">0</span>;<span class="comment">//一行的主程序完美地结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="动态规划" scheme="http://xtwnirui.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="状态压缩" scheme="http://xtwnirui.github.io/tags/%E7%8A%B6%E6%80%81%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>P4912帕秋莉的魔法（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P4912/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P4912/</id>
    <published>2019-10-15T02:57:18.000Z</published>
    <updated>2019-10-20T07:03:51.225Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P4912帕秋莉的魔法（题解）"><a href="#P4912帕秋莉的魔法（题解）" class="headerlink" title="P4912帕秋莉的魔法（题解）"></a>P4912帕秋莉的魔法（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P4912" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>楼上的题解解释较少，希望这篇题解能帮助到你</p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem."></a>Problem.</h2><p>有$\texttt{n}$个物品，每个物品有一个重量和一个价值，只能从前往后取物品。<br>取了前面的物品之后会对下一个物品有一定的影响，使后一个物品的价值加上一个值。<br>现在，你需要取重量和恰好为$\texttt{n}$的一些物品，使它们的价值和最大。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>首先，每一个物品有两个属性，第一时间想到的应该是背包。<br>所以根据背包常用套路，设$\texttt{dp[x][y]}$表示前$\texttt{x}$个物品中取出重量恰为$\texttt{y}$的最大价值和。<br>所以$\texttt{dp[x][y+a[x]]=max(dp[k][y]+b[x]+w[k][x])}$。</p><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention."></a>Attention.</h2><p>这道题如果这样写的话不会得到全分，<del>具体得分未亲测</del>。<br>因为这题中$\texttt{w}$可能为负数，如果单纯这样写会$\texttt{RE}$或$\texttt{WA}$。<br>所以我们可以给第二位加一个偏移量，相当于程序中的$\texttt{dp[i][j]}$表示我们的$\texttt{dp[i][j-2500]}$。<br>这样就能得全分了QwQ</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><p><del>压行码风勿喷QwQ</del><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">55</span>,V=<span class="number">2500</span>;<span class="comment">//V：注意点重的偏移量</span></span><br><span class="line"><span class="keyword">int</span> n,m,ans,a[N],b[N],w[N][N],dp[N][(V&lt;&lt;<span class="number">1</span>)+<span class="number">5</span>];<span class="comment">//此处解释略</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);<span class="comment">//读入</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,a+i,b+i);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++) <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;w[i][j]);</span><br><span class="line"><span class="built_in">memset</span>(dp,~<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(dp)),dp[<span class="number">0</span>][V]=<span class="number">0</span>;<span class="comment">//初始化为最小值，方便以后处理</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++) <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++) <span class="keyword">for</span>(<span class="keyword">int</span> k=(V&lt;&lt;<span class="number">1</span>);k&gt;=<span class="number">0</span>;k--) <span class="keyword">if</span>(dp[i][k]!=dp[<span class="number">0</span>][<span class="number">0</span>]) dp[j][k+a[j]]=max(dp[j][k+a[j]],dp[i][k]+b[j]+w[i][j]);<span class="comment">//最关键的一行语句，动态规划转移</span></span><br><span class="line">ans=dp[<span class="number">0</span>][<span class="number">0</span>];<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) ans=max(ans,dp[i][m+V]);<span class="comment">//从所有恰好为m条语句中找出答案</span></span><br><span class="line"><span class="keyword">return</span> (ans==dp[<span class="number">0</span>][<span class="number">0</span>]?<span class="built_in">puts</span>(<span class="string">"-1"</span>):<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans)),<span class="number">0</span>;<span class="comment">//完美地一行输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>拒绝抄袭代码，营造良好洛谷</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="动态规划" scheme="http://xtwnirui.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
      <category term="背包" scheme="http://xtwnirui.github.io/tags/%E8%83%8C%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>P4703偷上网（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P4703/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P4703/</id>
    <published>2019-10-15T02:56:07.000Z</published>
    <updated>2019-10-20T07:13:28.908Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P4703偷上网（题解）"><a href="#P4703偷上网（题解）" class="headerlink" title="P4703偷上网（题解）"></a>P4703偷上网（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P4703" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p><del>随机大法好用</del><br>我做这道题，刚开始忘了可能有无解情况，$\texttt{T}$了$\texttt{4}$个点，<del>说明无解的就四个点</del><br>然后，又过了一段时间，终于把代码构对了后，发现随机种子也很重要。<br>刚开始，我用$\texttt{time(0)}$来当随机种子，$\texttt{Wa}$了一个点。<br>后来用其他的一些随机种子，结果都$\texttt{Wa}$了那一个点。<br>一气之下，我翻了一下题解，抄了楼上的$\texttt{19260817}$作为随机种字，莫名其妙就对了。<br>我感到特别玄学</p><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem."></a>Problem.</h2><p>就是给你$\texttt{n}$个圆，然后让你找出一个点，使它没被任何圆覆盖。<br>输出这个点的坐标，没有则输出$\texttt{GG}$。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p><del>没什么好分析的</del><br>直接暴力随机这个点的坐标，然后判断这个点是否在圆内。<br>那么如何判断这个点是否在圆内呢？ <a href="https://www.luogu.org/problem/P1652" target="_blank" rel="noopener">不会的点我</a><br>具体详情请看代码。</p><h3 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span><span class="keyword">double</span> x,y;&#125;a[N];<span class="comment">//点的结构体</span></span><br><span class="line"><span class="keyword">int</span> n,l,m=<span class="number">1e7</span>;<span class="comment">//m表示随机次数</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> point <span class="title">Rand</span><span class="params">()</span><span class="comment">//生成平面上的随机一个点</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> x=rand(),y=rand();</span><br><span class="line"><span class="keyword">while</span>(x&gt;l) x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">while</span>(y&gt;l) y/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">return</span> (point)&#123;x,y&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">double</span> <span class="title">sqr</span><span class="params">(<span class="keyword">double</span> x)</span> </span>&#123;<span class="keyword">return</span> x*x;&#125;<span class="comment">//平方函数</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check</span><span class="params">(point b)</span><span class="comment">//判断这个点是否在一个圆里面</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="keyword">if</span>(sqr(b.x-a[i].x)+sqr(b.y-a[i].y)&lt;sqr(<span class="keyword">double</span>(l)/n))</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.3lf %.3lf\n"</span>,b.x,b.y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">srand(<span class="number">19260817</span>);<span class="comment">//玄学的随机种字</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;l);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">scanf</span>(<span class="string">"%lf%lf"</span>,&amp;a[i].x,&amp;a[i].y);</span><br><span class="line"><span class="keyword">while</span>(check(Rand())&amp;&amp;m--);<span class="comment">//不断随机点，判断</span></span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">-1</span>) <span class="built_in">puts</span>(<span class="string">"GG"</span>);<span class="comment">//判断不可行解</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="计算几何" scheme="http://xtwnirui.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="随机化" scheme="http://xtwnirui.github.io/tags/%E9%9A%8F%E6%9C%BA%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>P1762偶数（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P1762/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P1762/</id>
    <published>2019-10-15T02:48:59.000Z</published>
    <updated>2019-10-30T12:48:39.842Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P1762偶数（题解）"><a href="#P1762偶数（题解）" class="headerlink" title="P1762偶数（题解）"></a>P1762偶数（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P1762" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>此题关于杨辉三角，所以应该是数论。<br>但是像我这种菜鸡，只能暴力打表出奇迹了。<br>然后突然发现，好像自己打出了最短的题解。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><p>首先，对于$\texttt{n}$比较小的数据可以打出一个表。<br>打表辅助程序如下，相当于$\texttt{O(n}^\texttt{2}\texttt{)}$暴力解决<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> lowbit(x) ((x)&amp;(-(x)))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">15</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">10005</span>],ans[<span class="number">10005</span>],tr[<span class="number">10005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a)),tr[<span class="number">0</span>]=tr[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>,tot=<span class="number">0</span>;i&lt;=N;i++,tot=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i&amp;<span class="number">1</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++) a[i&amp;<span class="number">1</span>][j]=a[<span class="number">1</span>-(i&amp;<span class="number">1</span>)][j]+a[<span class="number">1</span>-(i&amp;<span class="number">1</span>)][j<span class="number">-1</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) a[i&amp;<span class="number">1</span>][j]&amp;=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) tot+=<span class="number">1</span>-(a[i&amp;<span class="number">1</span>][j]&amp;<span class="number">1</span>);</span><br><span class="line">tr[i]=tr[i/<span class="number">2</span>]+lowbit(i)/<span class="number">2</span>,ans[i]=tot;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++) <span class="built_in">printf</span>(<span class="string">"%c%c"</span>,a[i&amp;<span class="number">1</span>][j]?<span class="string">'*'</span>:<span class="string">'.'</span>,j==i?<span class="string">'\n'</span>:<span class="string">' '</span>);</span><br><span class="line"><span class="comment">//printf("%d:%d\n",i+1,ans[i]);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>打出来的表如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">*</span><br><span class="line">* *</span><br><span class="line">* . *</span><br><span class="line">* * * *</span><br><span class="line">* . . . *</span><br><span class="line">* * . . * *</span><br><span class="line">* . * . * . *</span><br><span class="line">* * * * * * * *</span><br><span class="line">* . . . . . . . *</span><br><span class="line">* * . . . . . . * *</span><br><span class="line">* . * . . . . . * . *</span><br><span class="line">* * * * . . . . * * * *</span><br><span class="line">* . . . * . . . * . . . *</span><br><span class="line">* * . . * * . . * * . . * *</span><br><span class="line">* . * . * . * . * . * . * . *</span><br><span class="line">* * * * * * * * * * * * * * * *</span><br></pre></td></tr></table></figure></p><p>然后，发现它是一个分形图形，于是我们考虑用递归求解。<br>设我们当前要处理的三角形边长为$\texttt{n}$，答案为$\texttt{f(n)}$，那么</p><script type="math/tex; mode=display">\texttt{f(n)}=\left\{\begin{aligned}\texttt{3}^\texttt{k}\qquad\qquad\quad\qquad\texttt{(n=2}^\texttt{k}\texttt{且k}\in\mathbb{N}\texttt{)}\\\texttt{f(2}^\texttt{k}\texttt{)+f(n-2}^\texttt{k}\texttt{)}\quad\texttt{(2}^\texttt{k}\texttt{<=n<=2}^\texttt{k+1}\texttt{且k}\in\mathbb{N}\texttt{)}\end{aligned}\right.</script><p>于是，这个$\texttt{f(n)}$可以用递归法加上快速幂求解。<br>当然也可以预处理出所有$\texttt{3}^\texttt{k}$。</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> ll QY=<span class="number">1000003</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">lowbit</span><span class="params">(ll x)</span> </span>&#123;<span class="keyword">return</span> x&amp;(-x);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">upbit</span><span class="params">(ll x)</span> </span>&#123;<span class="keyword">for</span>(ll i=<span class="number">1</span>;;i&lt;&lt;=<span class="number">1</span>) <span class="keyword">if</span>(i&gt;=x) <span class="keyword">return</span> i/<span class="number">2</span>;<span class="keyword">return</span> <span class="number">0</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">qpow</span><span class="params">(ll a,ll q)</span> </span>&#123;ll ans=<span class="number">1</span>;<span class="keyword">for</span>(;q;q&gt;&gt;=<span class="number">1</span>,a=a*a%QY) <span class="keyword">if</span>(q&amp;<span class="number">1</span>) ans=ans*a%QY;<span class="keyword">return</span> ans;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">dfs</span><span class="params">(ll x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(lowbit(x)==x) <span class="keyword">return</span> qpow(<span class="number">3</span>,(ll)(<span class="built_in">log</span>(x)/<span class="built_in">log</span>(<span class="number">2</span>)));</span><br><span class="line"><span class="keyword">return</span> (qpow(<span class="number">3</span>,(ll)(<span class="built_in">log</span>(upbit(x))/<span class="built_in">log</span>(<span class="number">2</span>)))+<span class="number">2</span>*dfs(x-upbit(x))%QY)%QY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll n,sum;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n),sum=n%<span class="number">2</span>?(n%QY)*((n+<span class="number">1</span>)/<span class="number">2</span>%QY)%QY:(n/<span class="number">2</span>%QY)*((n+<span class="number">1</span>)%QY)%QY;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,((sum-dfs(n))%QY+QY)%QY);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="数论" scheme="http://xtwnirui.github.io/tags/%E6%95%B0%E8%AE%BA/"/>
    
      <category term="杨辉三角" scheme="http://xtwnirui.github.io/tags/%E6%9D%A8%E8%BE%89%E4%B8%89%E8%A7%92/"/>
    
      <category term="打表" scheme="http://xtwnirui.github.io/tags/%E6%89%93%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>P2250二面体群（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P2250/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P2250/</id>
    <published>2019-10-15T02:45:10.000Z</published>
    <updated>2019-10-20T07:03:27.922Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P2250二面体群（题解）"><a href="#P2250二面体群（题解）" class="headerlink" title="P2250二面体群（题解）"></a>P2250二面体群（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P2250" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>我不知道这道题为什么会是灰的，通过数还这么少。<br>作为第三个$\texttt{A}$了这道题的人，来发一篇题解。<br>这道题读入调了我半天呢。</p><h2 id="problem"><a href="#problem" class="headerlink" title="problem."></a>problem.</h2><p>首先，在一个平面直角坐标系中，有一个单位园，它上面均匀分布了$\texttt{n}$个点。<br>然后有两种操作，可以顺时针旋转$\frac{\texttt{2}\pi}{k}$弧度，也可以把它按照$\texttt{x}$轴对称。<br>求一堆操作的最短等价操作是什么。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><h3 id="Part-1"><a href="#Part-1" class="headerlink" title="Part 1."></a>Part 1.</h3><p>首先，操作二上下轴对称是对点的相对分布是五影响的。<br>所以，操作二与操作一是相对独立的，操作二只与操作一的旋转方向有关。<br>所以可以记录下来操作二的操作次数，然后在执行操作一的时候加入操作二的次数，记录下逆时针旋转了几个单位。<br>然后就记录下来了读入。</p><h3 id="Part-2"><a href="#Part-2" class="headerlink" title="Part 2."></a>Part 2.</h3><p>从第一部分可以知道操作的总体显现情况，具体的说，就是$\texttt{t=}$有没有翻转，$\texttt{x=}$逆时针旋转了几个单位。<br>然后可以从$\texttt{t}$与$\texttt{x}$中推出答案，具体看代码。</p><p><del>可能有一点玄乎，那么上代码吧</del></p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,x,t=<span class="number">1</span>,a=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span><span class="comment">//第一部分 读入</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d\n"</span>,&amp;n),c=getchar();<span class="comment">//读入第一行的数以及第二行的第一个字符。</span></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)<span class="comment">//一直循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span>(c!=<span class="string">'\n'</span>&amp;&amp;c!=EOF&amp;&amp;c!=<span class="string">'r'</span>&amp;&amp;c!=<span class="string">'m'</span>) c=getchar();<span class="comment">//这里有锅，见下一行</span></span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'\n'</span>||c==EOF) <span class="keyword">break</span>;<span class="comment">//数据有锅，如果这里没有EOF的话亲测最后一个点会TLE。</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);<span class="comment">//读入操作数据</span></span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'r'</span>) (a+=t*x%n)%=n;<span class="comment">//旋转操作直接模拟，要加上翻转操作中的顺逆时针，这条语句相当于a=(a+t*x%n)%n;</span></span><br><span class="line"><span class="keyword">if</span>(c==<span class="string">'m'</span>) t=(x&amp;<span class="number">1</span>)?-t:t;<span class="comment">//翻转操作，记录下来有多少次翻转（奇数是-1，偶数是1）</span></span><br><span class="line">c=getchar();<span class="comment">//继续读</span></span><br><span class="line">&#125;</span><br><span class="line">(a+=n)%=n;<span class="comment">//防止a&lt;0</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">out</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n+<span class="number">1</span>-a-t&lt;a) <span class="built_in">printf</span>(<span class="string">"m1 r%d "</span>,n-a),t=-t;<span class="comment">//这个特判也卡了我半天QwQ，特判语句我试了半天</span></span><br><span class="line"><span class="comment">//1-t表示先翻转（可能之后的翻转不需要，或者之后多出来一次翻转），n-a表示翻转之后顺时针旋转。然后t要取反</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(a) <span class="built_in">printf</span>(<span class="string">"r%d "</span>,a);<span class="comment">//如果a=0，就不需要输出了。</span></span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">-1</span>) <span class="built_in">printf</span>(<span class="string">"m1 "</span>);<span class="comment">//如果还有一次</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);<span class="comment">//个人强迫症</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> init(),out(),<span class="number">0</span>;<span class="comment">//完美主程序结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="计算几何" scheme="http://xtwnirui.github.io/tags/%E8%AE%A1%E7%AE%97%E5%87%A0%E4%BD%95/"/>
    
      <category term="标记" scheme="http://xtwnirui.github.io/tags/%E6%A0%87%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>P4862猜数（题解）</title>
    <link href="http://xtwnirui.github.io/2019/10/15/P4862/"/>
    <id>http://xtwnirui.github.io/2019/10/15/P4862/</id>
    <published>2019-10-15T02:41:14.000Z</published>
    <updated>2019-10-20T07:03:41.012Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一篇题解。<br><a id="more"></a></p><h1 id="P4862猜数（题解）"><a href="#P4862猜数（题解）" class="headerlink" title="P4862猜数（题解）"></a>P4862猜数（题解）</h1><h2 id="Link"><a href="#Link" class="headerlink" title="Link."></a>Link.</h2><p><a href="https://www.luogu.org/problem/P4862" target="_blank" rel="noopener">点我</a></p><h2 id="PS"><a href="#PS" class="headerlink" title="PS."></a>PS.</h2><p>讲一下个人对于这道题的心路历程吧。<br>这道题就是一道硬生生把两道题合并成一道的经典例子。<br>首先，看到这道题时，没有看到数据范围，然后这道题就被放置了很久。<br>后来才发现最后几个$\texttt{n}$特别大的测试数据点的$\texttt{a=2}$与$\texttt{b=1}$。<br>然后，即使$\texttt{a=2}$且$\texttt{b=1}$，我仍然不会做 <del>我就是菜</del><br>于是，我想骗一下$\texttt{70}$分的做法，然后想到了递推。<br>然后，过了很久，又想到去把$\texttt{a=2}$与$\texttt{b=1}$去带入递推式，打表找一下规律。<br>突然发现答案有关菲波那切数列，就做出来了。<br><strong><del>借此我想告诉大家，我也不知道为什么答案是这样的</del></strong></p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution."></a>Solution.</h2><h3 id="70-point"><a href="#70-point" class="headerlink" title="70 point"></a>70 point</h3><p>首先，引进一个<del>感性理解</del>定理：<br><strong>在m在S中并且S的元素数目不变的前提下，Iris选择的数m以及S的元素对答案是没有影响的。</strong><br>所以，我们可以设$\texttt{f(n)}$表示在$\texttt{[1,n]}$，问出答案的最优策略花费的金额。</p><script type="math/tex; mode=display">\texttt{f(x)}=\left\{\begin{aligned}\texttt{0}\quad\texttt{(x==1)}\\\texttt{min\{max(f(i)+a,f(x-i)+b)\}}\quad\texttt{(x!=1)}\end{aligned}\right.</script><p>然鹅这个递推式的复杂度是$\texttt{O(n}^\texttt{2}\texttt{)}$，只能骗来$\texttt{70}$分。</p><h3 id="30-point"><a href="#30-point" class="headerlink" title="30 point"></a>30 point</h3><p>但是，我们把$\texttt{a=2}$和$\texttt{b=1}$带入上式，然后打表找一下规律。<br>我打出了这个表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">1 ans=0</span><br><span class="line">2 ans=2</span><br><span class="line">3 ans=3</span><br><span class="line">4 ans=4</span><br><span class="line">5 ans=4</span><br><span class="line">6 ans=5</span><br><span class="line">7 ans=5</span><br><span class="line">8 ans=5</span><br><span class="line">9 ans=6</span><br><span class="line">10 ans=6</span><br><span class="line">11 ans=6</span><br><span class="line">12 ans=6</span><br><span class="line">13 ans=6</span><br><span class="line">14 ans=7</span><br></pre></td></tr></table></figure></p><p>经过整理后是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1-101</span><br><span class="line">2-222</span><br><span class="line">3-333</span><br><span class="line">4-545</span><br><span class="line">6-858</span><br><span class="line">9-13 613</span><br><span class="line">..</span><br><span class="line">..</span><br><span class="line">..</span><br></pre></td></tr></table></figure></p><p>我们发现，最右端是斐波那契数列，然后再打一通表，就发现$\texttt{f(100)&gt;10}^\texttt{18}$。<br>所以复杂度是$\texttt{O(max(100,t))}$，能过。<br>至此，这道题终于做完了。</p><h2 id="Coding"><a href="#Coding" class="headerlink" title="Coding."></a>Coding.</h2><p>有SB特判，有注释版本<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;//我爱用万能头</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2000</span>,M=<span class="number">100</span>;<span class="comment">//N表示前7个点的范围，M表示后3个点的范围</span></span><br><span class="line"><span class="keyword">int</span> a,b,t;ll n,f[N+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">work1</span><span class="params">()</span><span class="comment">//处理前7个点。</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f)),f[<span class="number">1</span>]=<span class="number">0</span>;<span class="comment">//要求最大值的最小值，初始值INF</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">f[i]=min(f[i],max(f[j]+a,f[i-j]+b));<span class="comment">//由上面的递推式得到</span></span><br><span class="line"><span class="keyword">while</span>(t--) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n),<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[n]);<span class="comment">//回答询问</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">work2</span><span class="params">()</span><span class="comment">//处理后3个点。</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>,f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=M;i++) f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];<span class="comment">//预处理斐波那契数列</span></span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>) &#123;<span class="built_in">puts</span>(<span class="string">"0"</span>);<span class="keyword">continue</span>;&#125;<span class="comment">//SB特判</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=M;i++) <span class="keyword">if</span>(n&lt;=f[i]) &#123;<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);<span class="keyword">break</span>;&#125;<span class="comment">//打表找出的规律</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;t);</span><br><span class="line"><span class="keyword">if</span>(a!=<span class="number">2</span>||b!=<span class="number">1</span>) work1();<span class="comment">//处理前7个点</span></span><br><span class="line"><span class="keyword">else</span> work2();<span class="comment">//处理后3个点</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>不用SB特判，无注释版本：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N=<span class="number">2000</span>,M=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> a,b,t;ll n,f[N+<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">work1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="keyword">sizeof</span>(f)),f[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">f[i]=min(f[i],max(f[j]+a,f[i-j]+b));</span><br><span class="line"><span class="keyword">while</span>(t--) <span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n),<span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,f[n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">work2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">f[<span class="number">0</span>]=<span class="number">1</span>,f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=M;i++) f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line"><span class="keyword">while</span>(t--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=M;i++) <span class="keyword">if</span>(n&lt;=f[i]) &#123;<span class="built_in">printf</span>(<span class="string">"%d\n"</span>,i);<span class="keyword">break</span>;&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;t);</span><br><span class="line"><span class="keyword">if</span>(a!=<span class="number">2</span>||b!=<span class="number">1</span>) work1();</span><br><span class="line"><span class="keyword">else</span> work2();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一篇题解。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="打表" scheme="http://xtwnirui.github.io/tags/%E6%89%93%E8%A1%A8/"/>
    
      <category term="斐波那契数列" scheme="http://xtwnirui.github.io/tags/%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97/"/>
    
      <category term="递推" scheme="http://xtwnirui.github.io/tags/%E9%80%92%E6%8E%A8/"/>
    
  </entry>
  
  <entry>
    <title>【原创】Bulfly</title>
    <link href="http://xtwnirui.github.io/2019/10/10/game2/"/>
    <id>http://xtwnirui.github.io/2019/10/10/game2/</id>
    <published>2019-10-10T00:17:37.000Z</published>
    <updated>2019-10-10T00:24:02.987Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一个菜鸡的游戏<br><a id="more"></a><br>版权声明：作者系<a href="https://www.luogu.org/space/show?uid=44805" target="_blank" rel="noopener">小跳蛙</a><br>这个游戏还在调试阶段，如有bug欢迎私信<a href="https://www.luogu.org/space/show?uid=44805" target="_blank" rel="noopener">小跳蛙</a><br><div><div class="fold_hider"><div class="close hider_title">点击显/隐代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_DOWN(VK_NONAME) ((GetAsyncKeyState(VK_NONAME)&amp;0x8000)?1:0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> N=<span class="number">15</span>,Numk=<span class="number">50</span>,Numl=<span class="number">5</span>,Numd=<span class="number">100</span>,Nan=<span class="number">40</span>,Hp=<span class="number">10</span>,Bebc=<span class="number">15</span>,Bebh=<span class="number">16</span>,Bebb=<span class="number">10</span>,squ=<span class="number">3</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,vf,bv;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;x=rand()%N+<span class="number">1</span>,y=rand()%N+<span class="number">1</span>,bv=rand()%<span class="number">3</span>+<span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">()</span> </span>&#123;x++;<span class="keyword">if</span>(x&gt;N) init(),x=<span class="number">1</span>;&#125;</span><br><span class="line">&#125;k[<span class="number">10005</span>],l[<span class="number">10005</span>],d[<span class="number">10005</span>];</span><br><span class="line"><span class="keyword">int</span> x,y,hp,score,mp[<span class="number">25</span>][<span class="number">25</span>],udf,numc,numh,numb,bulc,bulh,bulb,lanf;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> &amp;x,<span class="keyword">int</span> y)</span> </span>&#123;x+=y,x=max(x,<span class="number">1</span>),x=min(x,N);&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),a);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r=<span class="number">0</span>;<span class="keyword">char</span> c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&gt;<span class="string">'9'</span>||c&lt;<span class="string">'0'</span>) c=getchar();</span><br><span class="line"><span class="keyword">while</span>(c&gt;=<span class="string">'0'</span>&amp;&amp;c&lt;=<span class="string">'9'</span>) (r*=<span class="number">10</span>)+=c-<span class="string">'0'</span>,c=getchar();</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="built_in">string</span> s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hOut;COORD pos;</span><br><span class="line">hOut=GetStdHandle(STD_OUTPUT_HANDLE),pos.X=y,pos.Y=x;</span><br><span class="line">SetConsoleCursorPosition(hOut,pos),<span class="built_in">cout</span>&lt;&lt;s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check_press</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++) &#123;<span class="keyword">if</span>(KEY_DOWN(x)) <span class="keyword">return</span> <span class="number">1</span>;Sleep(<span class="number">10</span>);&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">set_windows</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hOut=GetStdHandle(STD_OUTPUT_HANDLE);SMALL_RECT rc;</span><br><span class="line">rc.Left=x1,rc.Top=y1,rc.Right=x2,rc.Bottom=y2;</span><br><span class="line">SetConsoleWindowInfo(hOut, TRUE, &amp;rc);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">disap_mouse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ShowCursor(<span class="literal">false</span>);</span><br><span class="line">HANDLE hOut=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">CONSOLE_CURSOR_INFO cci;</span><br><span class="line">GetConsoleCursorInfo(hOut,&amp;cci);</span><br><span class="line">cci.bVisible=<span class="literal">false</span>;</span><br><span class="line">SetConsoleCursorInfo(hOut,&amp;cci);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check_die</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].x==x&amp;&amp;k[i].y==y) <span class="keyword">return</span> k[i].init(),k[i].x=<span class="number">1</span>,<span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check_luck</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++)</span><br><span class="line"><span class="keyword">if</span>(l[i].x==x&amp;&amp;l[i].y==y)</span><br><span class="line">&#123;</span><br><span class="line">l[i].init(),l[i].x=<span class="number">1</span>;</span><br><span class="line">numc+=(rand()%<span class="number">10</span>+<span class="number">5</span>)*bulc;</span><br><span class="line">numh+=(rand()%<span class="number">5</span>+<span class="number">5</span>)*bulh;</span><br><span class="line">numb+=(rand()%<span class="number">5</span>+<span class="number">5</span>)*bulb;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">check_dowm</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++)</span><br><span class="line"><span class="keyword">if</span>(d[i].x==x&amp;&amp;d[i].y==y)</span><br><span class="line">&#123;</span><br><span class="line">d[i].init(),d[i].x=<span class="number">1</span>;</span><br><span class="line">numc+=(rand()%<span class="number">10</span>+<span class="number">5</span>)*bulc;</span><br><span class="line">numh+=(rand()%<span class="number">5</span>+<span class="number">5</span>)*bulh;</span><br><span class="line">numb+=(rand()%<span class="number">5</span>+<span class="number">5</span>)*bulb;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">move_thi</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].vf==<span class="number">0</span>) k[i].move();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) <span class="keyword">if</span>(l[i].vf==<span class="number">0</span>) l[i].move();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) <span class="keyword">if</span>(d[i].vf==<span class="number">0</span>) d[i].move();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">move_peo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)&amp;&amp;!udf) add(x,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">38</span>)&amp;&amp;!udf) add(x,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">104</span>)&amp;&amp;!udf) add(x,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">104</span>)) color(<span class="number">112</span>),print(<span class="number">11</span>,N+<span class="number">5</span>,<span class="string">"↑"</span>),color(<span class="number">7</span>);<span class="keyword">else</span> print(<span class="number">11</span>,N+<span class="number">5</span>,<span class="string">"↑"</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">83</span>)&amp;&amp;!udf) add(x,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">40</span>)&amp;&amp;!udf) add(x,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">101</span>)&amp;&amp;!udf) add(x,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">101</span>)) color(<span class="number">112</span>),print(<span class="number">15</span>,N+<span class="number">5</span>,<span class="string">"↓"</span>),color(<span class="number">7</span>);<span class="keyword">else</span> print(<span class="number">15</span>,N+<span class="number">5</span>,<span class="string">"↓"</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">65</span>)) add(y,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">37</span>)) add(y,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">100</span>)) add(y,<span class="number">-1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">65</span>)||KEY_DOWN(<span class="number">37</span>)||KEY_DOWN(<span class="number">100</span>)) color(<span class="number">112</span>),print(<span class="number">13</span>,N+<span class="number">3</span>,<span class="string">"←"</span>),color(<span class="number">7</span>);<span class="keyword">else</span> print(<span class="number">13</span>,N+<span class="number">3</span>,<span class="string">"←"</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">68</span>)) add(y,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">39</span>)) add(y,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">102</span>)) add(y,<span class="number">1</span>),c=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">68</span>)||KEY_DOWN(<span class="number">39</span>)||KEY_DOWN(<span class="number">102</span>)) color(<span class="number">112</span>),print(<span class="number">13</span>,N+<span class="number">7</span>,<span class="string">"→"</span>),color(<span class="number">7</span>);<span class="keyword">else</span> print(<span class="number">13</span>,N+<span class="number">7</span>,<span class="string">"→"</span>);</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">die</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>),print(<span class="number">0</span>,<span class="number">0</span>,<span class="string">""</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"YOU DIED!!!\n"</span>),Sleep(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YOU SCORE IS:%d\n\n"</span>,score),Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"你终于知道 死 这个字怎么写了！！！\n"</span>),Sleep(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"你的分数是：%d\n\n"</span>,score),Sleep(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"TRY AGAIN?\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"再来一局？\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">system(<span class="string">"cls"</span>),srand(time(<span class="number">0</span>)),<span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++) <span class="built_in">printf</span>(<span class="string">"~"</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"|"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++) <span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=N;i++) <span class="built_in">printf</span>(<span class="string">"~"</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">""</span>),x=N,y=N/<span class="number">2</span>,hp=Hp,score=<span class="number">0</span>,numc=Bebc*bulc,numh=Bebh*bulh,numb=Bebb*bulb;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) k[i].init(),k[i].y=N+<span class="number">1</span>,k[i].vf=k[i].bv<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) l[i].init(),l[i].y=N+<span class="number">1</span>,l[i].vf=l[i].bv<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) d[i].init(),d[i].y=N+<span class="number">1</span>,d[i].vf=d[i].bv<span class="number">-1</span>;</span><br><span class="line">print(<span class="number">1</span>,N+<span class="number">2</span>,<span class="string">" "</span>),<span class="built_in">printf</span>(<span class="string">"The bloods you still have"</span>);</span><br><span class="line">print(<span class="number">3</span>,N+<span class="number">2</span>,<span class="string">" "</span>),<span class="built_in">printf</span>(<span class="string">"The score you have now is"</span>);</span><br><span class="line">print(<span class="number">5</span>,N+<span class="number">2</span>,<span class="string">" "</span>),<span class="built_in">printf</span>(<span class="string">"The normal bullet you have is"</span>);</span><br><span class="line">print(<span class="number">7</span>,N+<span class="number">2</span>,<span class="string">" "</span>),<span class="built_in">printf</span>(<span class="string">"The high bullet you have is"</span>);</span><br><span class="line">print(<span class="number">9</span>,N+<span class="number">2</span>,<span class="string">" "</span>),<span class="built_in">printf</span>(<span class="string">"The big bullet you have is"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Hp/<span class="number">30</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">16</span>+i,N+<span class="number">2</span>,<span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">30</span>;i++) <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">&#125;</span><br><span class="line">print(<span class="number">17</span>+Hp/<span class="number">30</span>,N+<span class="number">2</span>,<span class="string">"-"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=Hp%<span class="number">30</span>;i++) <span class="built_in">printf</span>(<span class="string">"-"</span>);</span><br><span class="line">print(x,y,<span class="string">"*"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">Begin</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">disap_mouse(),set_windows(<span class="number">10</span>,<span class="number">10</span>,<span class="number">89</span>,<span class="number">55</span>),system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>),<span class="built_in">printf</span>(<span class="string">"WELCOME TO THE GAME:\n"</span>),color(<span class="number">14</span>);</span><br><span class="line"><span class="built_in">printf</span>(</span><br><span class="line"><span class="string">"\n"</span></span><br><span class="line"><span class="string">"BBBBee  U    U  L       FFFFFF  L     Y    Y \n"</span></span><br><span class="line"><span class="string">"B    B  U    U  L       F       L     Y    Y \n"</span></span><br><span class="line"><span class="string">"B    B  U    U  L       F       L      Y  Y \n"</span></span><br><span class="line"><span class="string">"BBBBBB  U    U  L       FFFFFF  L       YY \n"</span></span><br><span class="line"><span class="string">"B    B  U    U  L       F       L       YY \n"</span></span><br><span class="line"><span class="string">"B    B  U    U  L       F       L       YY \n"</span></span><br><span class="line"><span class="string">"BBBB^^   UUUU   LLLLLL  F       LLLLLL  YY \n"</span></span><br><span class="line"><span class="string">"\n"</span></span><br><span class="line">);</span><br><span class="line">color(<span class="number">12</span>),<span class="built_in">printf</span>(<span class="string">"烤蛙出品，侵权必究！QWQ\n\nBelieve_R_ 赞助开发\n\n"</span>);</span><br><span class="line">color(<span class="number">7</span>),Sleep(<span class="number">500</span>),<span class="built_in">puts</span>(<span class="string">"PLEASE PRESS 'Enter' TO CONTINUE"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;<span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)) <span class="keyword">break</span>;&#125;</span><br><span class="line">Sleep(<span class="number">200</span>),system(<span class="string">"cls"</span>),<span class="built_in">puts</span>(<span class="string">"Your Language?/你的语言？"</span>),lanf=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"  中文  "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">"  中文  "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" English "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" English"</span>),color(<span class="number">7</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) lanf=<span class="number">1</span>-lanf;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">Sleep(<span class="number">200</span>),system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Do you know the rule of the game?"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"你知道此游戏的规则吗\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Yes "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Yes "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" No "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" No "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 是 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 是 "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 否 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 否 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Sleep(<span class="number">200</span>),system(<span class="string">"cls"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"Before playing this game please read these carefully:\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n1. You'll be asked to input 7 game parameters before the game starts.\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n2. The symbol '!' is the Upgrade Roadblock. If you didn't shut it off before it get to the botton, your bloods will -1!\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n3. The symbol '&amp;' is the obstacle which means you cannot let '*' touch the '#'.\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n4. The symbol '+' is the midic which means you can recover by touching the '!'.\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n5. At first, you will have some bloods. You must go further before you died!\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n6. If you press 'Q', the bullets will be fired. But the bullets was limited, it only can be increased by touching '+'\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n7. If you press 'Space', the system will give you a sighting telescope. But it can't earse the Roadblock\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n\nHappy Games......  QwQ\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"PLEASE PRESS 'Enter' TO CONTINUE"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"在玩之前，请认真阅读以下提示：\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n1. 你将输入7个游戏参数。\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n2. 符号'!'是恐怖障碍物。如果你没有在它到达底部之前射掉它，你将会扣一滴血！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n3. 符号'&amp;'是障碍物，一旦你自己('*')碰到障碍物，生命值将会掉1个单位！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n4. 符号'+'可以给你补血，每次你自己('*')碰到'!'会恢复1个单位！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n5. 一开始你会有n个单位的生命，你必须在生命值耗完之前获得最高的分数！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n6. 如果你按下'Q'，将会发射子弹。但是子弹的数量是有限的，你有你碰到了'+'才会回血！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n7. 如果你按下'空格'，将会调出瞄准镜。但是瞄准镜并不能清除障碍物！\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"\n\nHappy Games......  QwQ\n"</span>),Sleep(<span class="number">500</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">"请按回车键以继续！"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;<span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)) <span class="keyword">break</span>;&#125;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">choose</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">5</span>;</span><br><span class="line">Sleep(<span class="number">200</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please choose the Difficulty: \n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请选择游戏难度：\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">5</span>) <span class="built_in">puts</span>(<span class="string">" Quick: No bullets "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Quick: No bullets "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">4</span>) <span class="built_in">puts</span>(<span class="string">" Peaceful: Please play within 'int'! "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Peaceful: Please play within 'int'! "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">4</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">3</span>) <span class="built_in">puts</span>(<span class="string">" Easy: Suitable for the Freshmen "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Easy: Suitable for the Freshmen! "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">5</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">" Middle: Time to race! "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Middle: Time to race! "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">6</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Hard: Impossible to get 2500! "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Hard: Impossible to get 2500! "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">7</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" User-Defined "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" User-Defined "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">5</span>) <span class="built_in">puts</span>(<span class="string">" 手速 [没有子弹！] "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 手速 [没有子弹！] "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">4</span>) <span class="built_in">puts</span>(<span class="string">" 和平 [不要把int玩爆呀！] "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 和平 [不要把int玩爆呀！] "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">4</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">3</span>) <span class="built_in">puts</span>(<span class="string">" 简单 [新手建议！] "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 简单 [新手建议！] "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">5</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">" 普通 [是时候比速度了！] "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 普通 [是时候比速度了！] "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">6</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 困难 [2500? 不可能的！] "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 困难 [2500? 不可能的！] "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">7</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t!=<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 用户自定义 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 用户自定义 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">104</span>)) t=(t+<span class="number">1</span>)%<span class="number">6</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">98</span>)) t=(t+<span class="number">5</span>)%<span class="number">6</span>;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">Nan=<span class="number">40</span>;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">5</span>) &#123;N=<span class="number">30</span>,Numk=<span class="number">75</span>,Numl=<span class="number">2</span>,Numd=<span class="number">0</span>,Hp=<span class="number">1</span>,Bebc=Bebh=Bebb=<span class="number">0</span>,bulc=bulh=bulb=<span class="number">0</span>,squ=<span class="number">14</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">4</span>) &#123;N=<span class="number">30</span>,Numk=<span class="number">15</span>,Numl=<span class="number">20</span>,Numd=<span class="number">1</span>,Hp=<span class="number">20</span>,Bebc=<span class="number">500</span>,Bebh=<span class="number">100</span>,Bebb=<span class="number">100</span>,bulc=bulh=bulb=<span class="number">1</span>,squ=<span class="number">10</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">3</span>) &#123;N=<span class="number">30</span>,Numk=<span class="number">25</span>,Numl=<span class="number">10</span>,Numd=<span class="number">1</span>,Hp=<span class="number">15</span>,Bebc=<span class="number">100</span>,Bebh=<span class="number">20</span>,Bebb=<span class="number">20</span>,bulc=bulh=bulb=<span class="number">1</span>,squ=<span class="number">7</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">2</span>) &#123;N=<span class="number">30</span>,Numk=<span class="number">40</span>,Numl=<span class="number">8</span>,Numd=<span class="number">1</span>,Hp=<span class="number">15</span>,Bebc=<span class="number">20</span>,Bebh=<span class="number">4</span>,Bebb=<span class="number">2</span>,bulc=bulh=bulb=<span class="number">1</span>,squ=<span class="number">5</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) &#123;N=<span class="number">30</span>,Numk=<span class="number">40</span>,Numl=<span class="number">5</span>,Numd=<span class="number">2</span>,Hp=<span class="number">20</span>,Bebc=<span class="number">10</span>,Bebh=Bebb=<span class="number">0</span>,bulc=bulh=bulb=<span class="number">1</span>,squ=<span class="number">3</span>;<span class="keyword">return</span>;&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">0</span>,Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Do you want to be able to shoot the bullets?"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请选择你能否发射狙击枪子弹！"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Yes "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Yes "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" No "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" No "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 是 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 是 "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 否 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 否 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">bulc=<span class="number">1</span>-t,t=<span class="number">0</span>,system(<span class="string">"cls"</span>),Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Do you want to be able to shoot the bullets?"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请选择你能否发射高射炮子弹！"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Yes "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Yes "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" No "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" No "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 是 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 是 "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 否 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 否 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">bulh=<span class="number">1</span>-t,t=<span class="number">0</span>,system(<span class="string">"cls"</span>),Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Do you want to be able to shoot the bullets?"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请选择你能否发射大炮子弹！"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Yes "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Yes "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" No "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" No "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 是 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 是 "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 否 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 否 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">bulb=<span class="number">1</span>-t,t=<span class="number">0</span>,system(<span class="string">"cls"</span>),Sleep(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please choose your pattern\nIf you choose Pattern 1, you can go up and down, while Pattern 2 can't!\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请选择你的模式：\n如果你选择了模式1，你可以上下左右移动；而模式2只能左右移动！\n"</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Pattern 1:←↑↓→ "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Pattern 1:←↑↓→ "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">4</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"  Pattern 2:←→  "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">"  Pattern 2:←→  "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">3</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 模式1:←↑↓→ "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 模式1:←↑↓→ "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">4</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"  模式2:←→  "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">"  模式2:←→  "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line">udf=t;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">3</span>||t&gt;<span class="number">35</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Size of the Game(from 3 to 35):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：游戏界面的大小（3 ~ 35）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),N=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||<span class="number">90</span>&lt;t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Number of Bullets(from 1 to 90):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：障碍物的数量（1 ~ 90）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Numk=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||<span class="number">90</span>&lt;t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Number of Backpack(from 1 to 90):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：回血包的数量（1 ~ 90）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Numl=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||<span class="number">90</span>&lt;t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Number of Upgrade Bullets(from 1 to 90):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：恐怖障碍物的数量（1 ~ 90）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Numd=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||t&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Imput an Integer: The Total HP of You(from 1 to 100):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：初始生命值（1 ~ 100）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Hp=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||t&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Bullet You Have at First(from 1 to 100):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：初始狙击枪子弹数（1 ~ 100）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Bebc=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||t&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Bullet You Have at First(from 1 to 100):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：初始高射炮子弹数（1 ~ 100）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Bebh=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">"cls"</span>),t=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span>(t&lt;<span class="number">1</span>||t&gt;<span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">"Please Input an Integer: The Bullet You Have at First(from 1 to 100):\n"</span>);</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">"请输入一个整数：初始大炮子弹数（1 ~ 100）\n"</span>);</span><br><span class="line">print(<span class="number">2</span>,<span class="number">0</span>,<span class="string">" "</span>),t=read(),Bebb=t,system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">choose(),init();</span><br><span class="line"><span class="keyword">int</span> die=<span class="number">1</span>,luck=<span class="number">1</span>,dowm=<span class="number">1</span>,t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) (k[i].vf+=<span class="number">1</span>)%=k[i].bv;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) (l[i].vf+=<span class="number">1</span>)%=l[i].bv;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) (d[i].vf+=<span class="number">1</span>)%=d[i].bv;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].y&lt;=N&amp;&amp;k[i].x&gt;<span class="number">0</span>&amp;&amp;k[i].vf==<span class="number">0</span>) print(k[i].x,k[i].y,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) <span class="keyword">if</span>(l[i].y&lt;=N&amp;&amp;l[i].x&gt;<span class="number">0</span>&amp;&amp;l[i].vf==<span class="number">0</span>) print(l[i].x,l[i].y,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) <span class="keyword">if</span>(d[i].y&lt;=N&amp;&amp;d[i].x&gt;<span class="number">0</span>&amp;&amp;d[i].vf==<span class="number">0</span>) print(d[i].x,d[i].y,<span class="string">" "</span>);t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(!udf&amp;&amp;(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">104</span>))) t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(!udf&amp;&amp;(KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">101</span>))) t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">65</span>)||KEY_DOWN(<span class="number">37</span>)||KEY_DOWN(<span class="number">100</span>)) t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">68</span>)||KEY_DOWN(<span class="number">39</span>)||KEY_DOWN(<span class="number">102</span>)) t=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(t) print(x,y,<span class="string">" "</span>);move_thi(),t=move_peo();<span class="keyword">if</span>(t) print(x,y,<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].y&lt;=N&amp;&amp;k[i].x&gt;<span class="number">0</span>&amp;&amp;k[i].vf==<span class="number">0</span>) color(<span class="number">4</span>),print(k[i].x,k[i].y,<span class="string">"&amp;"</span>),color(<span class="number">7</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) <span class="keyword">if</span>(l[i].y&lt;=N&amp;&amp;l[i].x&gt;<span class="number">0</span>&amp;&amp;l[i].vf==<span class="number">0</span>) color(<span class="number">2</span>),print(l[i].x,l[i].y,<span class="string">"+"</span>),color(<span class="number">7</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) <span class="keyword">if</span>(d[i].y&lt;=N&amp;&amp;d[i].x&gt;<span class="number">0</span>&amp;&amp;d[i].vf==<span class="number">0</span>) color(<span class="number">14</span>),print(d[i].x,d[i].y,<span class="string">"!"</span>),color(<span class="number">7</span>);</span><br><span class="line">die=check_die(),luck=check_luck(),dowm=check_dowm();</span><br><span class="line"><span class="keyword">if</span>(!luck) print(hp/<span class="number">30</span>+<span class="number">17</span>,N+<span class="number">2</span>+hp%<span class="number">30</span>,<span class="string">"-"</span>),hp++,score+=<span class="number">20</span>,(numc+=rand()%<span class="number">10</span>+<span class="number">5</span>)*=bulc,(numh+=rand()%<span class="number">5</span>+<span class="number">5</span>)*=bulh,(numb+=rand()%<span class="number">5</span>)*=bulb;</span><br><span class="line"><span class="keyword">if</span>(!die) print((hp<span class="number">-1</span>)/<span class="number">30</span>+<span class="number">17</span>,N+<span class="number">2</span>+(hp<span class="number">-1</span>)%<span class="number">30</span>,<span class="string">" "</span>),hp--,score+=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">if</span>(!dowm) score+=<span class="number">50</span>;</span><br><span class="line"><span class="keyword">if</span>(!die||!luck||!dowm) print(x,y,<span class="string">"*"</span>);</span><br><span class="line"><span class="keyword">if</span>(hp&lt;=<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> xx=<span class="number">0</span>,xw=<span class="number">1</span>,yy=<span class="number">0</span>,_90=<span class="number">0</span>,_88=<span class="number">0</span>,_67=<span class="number">0</span>,_32=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].y==y&amp;&amp;xx&lt;k[i].x&amp;&amp;k[i].x&lt;x) xx=k[i].x,yy=k[i].y,xw=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) <span class="keyword">if</span>(l[i].y==y&amp;&amp;xx&lt;l[i].x&amp;&amp;l[i].x&lt;x) xx=l[i].x,yy=l[i].y,xw=i+Numk;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) <span class="keyword">if</span>(d[i].y==y&amp;&amp;xx&lt;d[i].x&amp;&amp;d[i].x&lt;x) xx=d[i].x,yy=d[i].y,xw=i+Numk+Numl;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">32</span>)) &#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;xx;i--) print(i,y,<span class="string">"|"</span>);_32=<span class="number">1</span>,color(<span class="number">112</span>),print(<span class="number">15</span>,N+<span class="number">8</span>,<span class="string">" Space "</span>),color(<span class="number">7</span>);&#125;<span class="keyword">else</span> print(<span class="number">15</span>,N+<span class="number">8</span>,<span class="string">" Space "</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">90</span>)&amp;&amp;numc&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">numc--,color(<span class="number">112</span>),print(<span class="number">13</span>,N+<span class="number">9</span>,<span class="string">" Z "</span>),color(<span class="number">7</span>),_90=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(xx!=<span class="number">0</span>&amp;&amp;numc&gt;<span class="number">0</span>) <span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;=xx;i--) print(i,y,<span class="string">"|"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> print(<span class="number">13</span>,N+<span class="number">9</span>,<span class="string">" Z "</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">88</span>)&amp;&amp;numh&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">numh--,color(<span class="number">112</span>),print(<span class="number">13</span>,N+<span class="number">12</span>,<span class="string">" X "</span>),color(<span class="number">9</span>),_88=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(xx!=<span class="number">0</span>&amp;&amp;numc&gt;<span class="number">0</span>) <span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;=<span class="number">1</span>;i--) print(i,y,<span class="string">"|"</span>);</span><br><span class="line">color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> print(<span class="number">13</span>,N+<span class="number">12</span>,<span class="string">" X "</span>);</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">67</span>)&amp;&amp;numb&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">numb--,color(<span class="number">112</span>),print(<span class="number">13</span>,N+<span class="number">15</span>,<span class="string">" C "</span>),color(<span class="number">12</span>),_67=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(xx!=<span class="number">0</span>&amp;&amp;numc&gt;<span class="number">0</span>) <span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;=xx;i--) print(i,y,<span class="string">"|"</span>);</span><br><span class="line">color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> print(<span class="number">13</span>,N+<span class="number">15</span>,<span class="string">" C "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N+<span class="number">28</span>;i&lt;=N+<span class="number">35</span>;i++) print(<span class="number">1</span>,i,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N+<span class="number">28</span>;i&lt;=N+<span class="number">35</span>;i++) print(<span class="number">3</span>,i,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N+<span class="number">33</span>;i&lt;=N+<span class="number">38</span>;i++) print(<span class="number">5</span>,i,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N+<span class="number">31</span>;i&lt;=N+<span class="number">36</span>;i++) print(<span class="number">7</span>,i,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=N+<span class="number">30</span>;i&lt;=N+<span class="number">36</span>;i++) print(<span class="number">9</span>,i,<span class="string">" "</span>);</span><br><span class="line">print(<span class="number">1</span>,N+<span class="number">29</span>,<span class="string">":"</span>),<span class="built_in">printf</span>(<span class="string">"%d"</span>,hp);</span><br><span class="line">print(<span class="number">3</span>,N+<span class="number">29</span>,<span class="string">":"</span>),<span class="built_in">printf</span>(<span class="string">"%d"</span>,score);</span><br><span class="line">print(<span class="number">5</span>,N+<span class="number">33</span>,<span class="string">":"</span>),<span class="built_in">printf</span>(<span class="string">"%d"</span>,numc);</span><br><span class="line">print(<span class="number">7</span>,N+<span class="number">31</span>,<span class="string">":"</span>),<span class="built_in">printf</span>(<span class="string">"%d"</span>,numh);</span><br><span class="line">print(<span class="number">9</span>,N+<span class="number">30</span>,<span class="string">":"</span>),<span class="built_in">printf</span>(<span class="string">"%d"</span>,numb);</span><br><span class="line">Sleep(Nan);</span><br><span class="line"><span class="keyword">if</span>(_32==<span class="number">1</span>) &#123;<span class="keyword">for</span>(<span class="keyword">int</span> i=x<span class="number">-1</span>;i&gt;xx;i--) print(i,y,<span class="string">" "</span>);&#125;</span><br><span class="line"><span class="keyword">if</span>(xx!=<span class="number">0</span>&amp;&amp;_90)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&gt;=xx;i--) print(i,y,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(xw&lt;=Numk) k[xw].init(),k[xw].x=<span class="number">0</span>,score++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(xw&lt;=Numk+Numl) l[xw-Numk].init(),l[xw-Numk].x=<span class="number">0</span>,score+=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">else</span> d[xw-Numk-Numl].init(),d[xw-Numk-Numl].x=<span class="number">0</span>,score++,(numc+=rand()%<span class="number">10</span>+<span class="number">5</span>)*=bulc,(numh+=rand()%<span class="number">5</span>+<span class="number">5</span>)*=bulh,(numb+=rand()%<span class="number">5</span>)*=bulb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(_88)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&gt;=<span class="number">1</span>;i--) print(i,y,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++) <span class="keyword">if</span>(k[i].y==y) k[i].init(),k[i].x=<span class="number">0</span>,score++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++) <span class="keyword">if</span>(l[i].y==y) l[i].init(),l[i].x=<span class="number">0</span>,score+=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++) <span class="keyword">if</span>(d[i].y==y) d[i].init(),d[i].x=<span class="number">0</span>,score++,(numc+=rand()%<span class="number">10</span>+<span class="number">5</span>)*=bulc,(numh+=rand()%<span class="number">5</span>+<span class="number">5</span>)*=bulh,(numb+=rand()%<span class="number">5</span>)*=bulb;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(xx!=<span class="number">0</span>&amp;&amp;_67)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&gt;=<span class="number">1</span>;i--) print(i,y,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numk;i++)</span><br><span class="line"><span class="keyword">if</span>(k[i].y&gt;=yy-squ&amp;&amp;k[i].y&lt;=yy+squ&amp;&amp;k[i].x&gt;=xx-squ&amp;&amp;k[i].x&lt;=xx+squ&amp;&amp;k[i].x&gt;=<span class="number">1</span>&amp;&amp;k[i].y&lt;=N)</span><br><span class="line">print(k[i].x,k[i].y,<span class="string">" "</span>),k[i].init(),k[i].x=<span class="number">0</span>,score++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numl;i++)</span><br><span class="line"><span class="keyword">if</span>(l[i].y&gt;=yy-squ&amp;&amp;l[i].y&lt;=yy+squ&amp;&amp;l[i].x&gt;=xx-squ&amp;&amp;l[i].x&lt;=xx+squ&amp;&amp;l[i].x&gt;=<span class="number">1</span>&amp;&amp;k[i].y&lt;=N)</span><br><span class="line">print(l[i].x,l[i].y,<span class="string">" "</span>),l[i].init(),l[i].x=<span class="number">0</span>,score++;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=Numd;i++)</span><br><span class="line"><span class="keyword">if</span>(d[i].y&gt;=yy-squ&amp;&amp;d[i].y&lt;=yy+squ&amp;&amp;d[i].x&gt;=xx-squ&amp;&amp;d[i].x&lt;=xx+squ&amp;&amp;d[i].x&gt;=<span class="number">1</span>&amp;&amp;k[i].y&lt;=N)</span><br><span class="line">print(d[i].x,d[i].y,<span class="string">" "</span>),d[i].init(),d[i].x=<span class="number">0</span>,score++,(numc+=rand()%<span class="number">10</span>+<span class="number">5</span>)*=bulc,(numh+=rand()%<span class="number">5</span>+<span class="number">5</span>)*=bulh,(numb+=rand()%<span class="number">5</span>)*=bulb;</span><br><span class="line">&#125;</span><br><span class="line">score++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Begin();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">work(),die();<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">5</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" Yes "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" Yes "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">6</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" No "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" No "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(lanf==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">print(<span class="number">5</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">" 是 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 是 "</span>),color(<span class="number">7</span>);</span><br><span class="line">print(<span class="number">6</span>,<span class="number">0</span>,<span class="string">" "</span>);</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">" 否 "</span>);<span class="keyword">else</span> color(<span class="number">112</span>),<span class="built_in">puts</span>(<span class="string">" 否 "</span>),color(<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">13</span>)||KEY_DOWN(<span class="number">108</span>)) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span>(KEY_DOWN(<span class="number">87</span>)||KEY_DOWN(<span class="number">83</span>)||KEY_DOWN(<span class="number">38</span>)||KEY_DOWN(<span class="number">40</span>)||KEY_DOWN(<span class="number">104</span>)||KEY_DOWN(<span class="number">101</span>)) t=<span class="number">1</span>-t;</span><br><span class="line">Sleep(<span class="number">100</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">system(<span class="string">"cls"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一个菜鸡的游戏&lt;br&gt;
    
    </summary>
    
    
    
      <category term="娱乐" scheme="http://xtwnirui.github.io/tags/%E5%A8%B1%E4%B9%90/"/>
    
      <category term="c++小游戏" scheme="http://xtwnirui.github.io/tags/c-%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>【转载】原子战役</title>
    <link href="http://xtwnirui.github.io/2019/10/10/game1/"/>
    <id>http://xtwnirui.github.io/2019/10/10/game1/</id>
    <published>2019-10-10T00:09:44.000Z</published>
    <updated>2019-10-15T02:23:01.040Z</updated>
    
    <content type="html"><![CDATA[<p>这里有神仙的游戏<br><a id="more"></a><br>版权声明：作者系<a href="https://www.luogu.org/blog/user25512/the-war-of-atoms" target="_blank" rel="noopener">Little_Ming</a><br>当然，这是经过<a href="https://www.luogu.org/space/show?uid=44805" target="_blank" rel="noopener">小跳蛙</a>魔改后的版本，增加了几个地图。<br><div><div class="fold_hider"><div class="close hider_title">点击显/隐代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ARROW=<span class="number">0XE0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> LEFT=<span class="number">0X4B</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> RIGHT=<span class="number">0X4D</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> DOWN=<span class="number">0X50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> UP=<span class="number">0X48</span>; </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> ESCAPE=<span class="number">033</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAP_SIZE=<span class="number">9</span>;      <span class="comment">//地图大小</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SCREEN_SIZE=MAP_SIZE/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PEOPLE_NUMBER=<span class="number">8</span>;<span class="comment">//总玩家数</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> HUMAN_NUMBER=<span class="number">1</span>;<span class="comment">//人类玩家数</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">if</span> false</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kbhit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getch</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//void initKeyBoard() &#123;&#125; void closeKeyBoard() &#123;&#125; enum C;OLOR &#123;COLOR_BLACK=0,COLOR_DARK_BLUE=1,COLOR_DARK_GREEN=2,COLOR_DARK_BG=3,COLOR_DARK_RED=4,COLOR_DARK_PURPLE=5,COLOR_DARK_YELLOW=6,COLOR_DARK_WHITE=7,COLOR_GRAY=8,COLOR_BLUE=9,COLOR_GREEN=10,COLOR_BG=11,COLOR_RED=12,COLOR_PURPLE=13,COLOR_YELLOW=14,COLOR_WHITE=15&#125;;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line">COLOR f1,f2;</span><br><span class="line"><span class="keyword">bool</span> bu;</span><br><span class="line"><span class="keyword">bool</span> b1;</span><br><span class="line"><span class="keyword">int</span> cx,cy;</span><br><span class="line"><span class="keyword">int</span> sz;</span><br><span class="line">Printer() &#123;</span><br><span class="line">s=<span class="string">""</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">setColor</span><span class="params">(COLOR fore,COLOR back=COLOR_BLACK,<span class="keyword">bool</span> underline=<span class="literal">false</span>)</span> </span>&#123;</span><br><span class="line">f1=fore;</span><br><span class="line">f2=back;</span><br><span class="line">bu=underline;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">write</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp;str)</span> </span>&#123;</span><br><span class="line">s+=str;</span><br><span class="line"><span class="keyword">return</span> str.size();</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">writeln</span><span class="params">()</span> </span>&#123;</span><br><span class="line">write(<span class="string">"\n"</span>);</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">fresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;s&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">setCursor</span><span class="params">(<span class="keyword">bool</span> show,<span class="keyword">int</span> size=<span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">b1=show;</span><br><span class="line">sz=size;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">cx=x;</span><br><span class="line">cy=y;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">s=<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(<span class="keyword">int</span> tick)</span> </span>&#123;</span><br><span class="line"><span class="comment">//    while(tick--&gt;0) &#123;&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(<span class="keyword">char</span> title[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> cmd[<span class="number">200</span>]=<span class="string">""</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(cmd,<span class="string">"title %s"</span>,title);</span><br><span class="line">system(cmd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> GAME_VERSION[]=<span class="string">"小跳蛙魔改版alpha 0.2.6"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> TITLE_FORMAT[]=<span class="string">"WoA %s (Round %d %s's turn)"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_EMPTY[<span class="number">16</span>]= &#123;<span class="string">"xx"</span>,<span class="string">"^^"</span>,<span class="string">"&lt;&lt;"</span>,<span class="string">"/-"</span>,<span class="string">"vv"</span>,<span class="string">"||"</span>,<span class="string">"\\-"</span>,<span class="string">"|-"</span>,<span class="string">"&gt;&gt;"</span>,<span class="string">"-\\"</span>,<span class="string">"--"</span>,<span class="string">"TT"</span>,<span class="string">"-/"</span>,<span class="string">"-|"</span>,<span class="string">"^_"</span>,<span class="string">"++"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_FULL[<span class="number">16</span>]= &#123;<span class="string">"xx"</span>,<span class="string">"^^"</span>,<span class="string">"&lt;&lt;"</span>,<span class="string">"/="</span>,<span class="string">"vv"</span>,<span class="string">"!!"</span>,<span class="string">"\\="</span>,<span class="string">"|="</span>,<span class="string">"&gt;&gt;"</span>,<span class="string">"=\\"</span>,<span class="string">"=="</span>,<span class="string">"TT"</span>,<span class="string">"=/"</span>,<span class="string">"=|"</span>,<span class="string">"^="</span>,<span class="string">"++"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> LABEL_TITLE[]=<span class="string">"Player Atom  "</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> SPACE[]=<span class="string">"  "</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> GAME_END_FORMAT[<span class="number">2</span>]= &#123;<span class="string">"title WoA %s (Game ended. %s won.)"</span>,<span class="string">"title WoA %s (Game ended. No player won.)"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> ATOMS_CHAR[<span class="number">21</span>]= &#123;SPACE,<span class="string">".1"</span>,<span class="string">".2"</span>,<span class="string">".3"</span>,<span class="string">".4"</span>,<span class="string">".5"</span>,<span class="string">".6"</span>,<span class="string">".7"</span>,<span class="string">".8"</span>,<span class="string">".9"</span>,<span class="string">".A"</span>,<span class="string">".B"</span>,<span class="string">".C"</span>,<span class="string">".D"</span>,<span class="string">".E"</span>,<span class="string">".F"</span>,<span class="string">".G"</span>,<span class="string">".H"</span>,<span class="string">".I"</span>,<span class="string">".J"</span>,<span class="string">".K"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> SPECIAL_CHARS[]= &#123;<span class="string">"()"</span>,<span class="string">"~ "</span>,<span class="string">"/\\"</span>,<span class="string">"[]"</span>,<span class="string">"&lt;&gt;"</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">elif</span> defined(_WIN32)</span></span><br><span class="line"><span class="comment">/* Little_Ming */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initKeyBoard</span><span class="params">()</span> </span>&#123;&#125; <span class="function"><span class="keyword">void</span> <span class="title">closeKeyBoard</span><span class="params">()</span> </span>&#123;&#125; <span class="keyword">enum</span> COLOR &#123;COLOR_BLACK=<span class="number">0</span>,COLOR_DARK_BLUE=<span class="number">1</span>,COLOR_DARK_GREEN=<span class="number">2</span>,COLOR_DARK_BG=<span class="number">3</span>,COLOR_DARK_RED=<span class="number">4</span>,COLOR_DARK_PURPLE=<span class="number">5</span>,COLOR_DARK_YELLOW=<span class="number">6</span>,COLOR_DARK_WHITE=<span class="number">7</span>,COLOR_GRAY=<span class="number">8</span>,COLOR_BLUE=<span class="number">9</span>,COLOR_GREEN=<span class="number">10</span>,COLOR_BG=<span class="number">11</span>,COLOR_RED=<span class="number">12</span>,COLOR_PURPLE=<span class="number">13</span>,COLOR_YELLOW=<span class="number">14</span>,COLOR_WHITE=<span class="number">15</span>&#125;;</span><br><span class="line">HANDLE h1=CreateConsoleScreenBuffer(GENERIC_READ|GENERIC_WRITE,FILE_SHARE_WRITE,<span class="literal">NULL</span>,CONSOLE_TEXTMODE_BUFFER,<span class="literal">NULL</span>);</span><br><span class="line">HANDLE h2=CreateConsoleScreenBuffer(GENERIC_READ|GENERIC_WRITE,FILE_SHARE_WRITE,<span class="literal">NULL</span>,CONSOLE_TEXTMODE_BUFFER,<span class="literal">NULL</span>);</span><br><span class="line">HANDLE*oh[<span class="number">2</span>]= &#123;&amp;h1,&amp;h2&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_H=MAP_SIZE;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_W=MAP_SIZE+<span class="number">55</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_SIZE=CONSOLE_H*CONSOLE_W;</span><br><span class="line">HANDLE h;</span><br><span class="line">SMALL_RECT ALL;</span><br><span class="line">COORD ZERO;</span><br><span class="line">COORD BR;</span><br><span class="line">Printer() &#123;</span><br><span class="line">freopen(<span class="string">"data.txt"</span>,<span class="string">"w"</span>,<span class="built_in">stdout</span>);</span><br><span class="line">h=CreateConsoleScreenBuffer(GENERIC_READ|GENERIC_WRITE,FILE_SHARE_WRITE,<span class="literal">NULL</span>,CONSOLE_TEXTMODE_BUFFER,<span class="literal">NULL</span>);</span><br><span class="line">ALL.Top=ALL.Left=ZERO.X=ZERO.Y=<span class="number">0</span>;</span><br><span class="line">ALL.Bottom=BR.Y=CONSOLE_H;</span><br><span class="line">ALL.Right=BR.X=CONSOLE_W;</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">setColor</span><span class="params">(COLOR fore,COLOR back=COLOR_BLACK,<span class="keyword">bool</span> underline=<span class="literal">false</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> SetConsoleTextAttribute(h,fore|(back&lt;&lt;<span class="number">4</span>)|(underline?COMMON_LVB_UNDERSCORE:<span class="number">0</span>));</span><br><span class="line">&#125; <span class="function"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">write</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp;str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> res;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*s=str.c_str();</span><br><span class="line">WriteConsole(h,s,<span class="built_in">strlen</span>(s),&amp;res,<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">writeln</span><span class="params">()</span> </span>&#123;</span><br><span class="line">write(<span class="string">"\n"</span>);</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">fresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">HANDLE&amp;ph=*(oh[<span class="number">1</span>]);</span><br><span class="line">CONSOLE_CURSOR_INFO CursorInfo;</span><br><span class="line">GetConsoleCursorInfo(h,&amp;CursorInfo);</span><br><span class="line">SetConsoleCursorInfo(ph,&amp;CursorInfo);</span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO bufInfo;</span><br><span class="line">GetConsoleScreenBufferInfo(h,&amp;bufInfo);</span><br><span class="line">SetConsoleCursorPosition(ph,bufInfo.dwCursorPosition);</span><br><span class="line">SMALL_RECT all=ALL;</span><br><span class="line">CHAR_INFO buf[CONSOLE_SIZE];</span><br><span class="line"><span class="keyword">bool</span> succ=ReadConsoleOutput(h,buf,BR,ZERO,&amp;all);</span><br><span class="line">all=ALL;</span><br><span class="line">succ&amp;=WriteConsoleOutput(ph,buf,BR,ZERO,&amp;all);</span><br><span class="line">SetConsoleActiveScreenBuffer(ph);</span><br><span class="line"><span class="built_in">std</span>::swap(oh[<span class="number">0</span>],oh[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">return</span> succ;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">setCursor</span><span class="params">(<span class="keyword">bool</span> show,<span class="keyword">int</span> size=<span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">CONSOLE_CURSOR_INFO CursorInfo;</span><br><span class="line">GetConsoleCursorInfo(h,&amp;CursorInfo);</span><br><span class="line">CursorInfo.dwSize=size;</span><br><span class="line">CursorInfo.bVisible=show;</span><br><span class="line">SetConsoleCursorInfo(h,&amp;CursorInfo);</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">COORD pos;</span><br><span class="line">pos.X=x;</span><br><span class="line">pos.Y=y;</span><br><span class="line">SetConsoleCursorPosition(h,pos);</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">DWORD cCharsWritten;</span><br><span class="line">CONSOLE_SCREEN_BUFFER_INFO csbi;</span><br><span class="line">DWORD dwConSize;</span><br><span class="line">HANDLE hConsole=h;</span><br><span class="line">GetConsoleScreenBufferInfo(hConsole,&amp;csbi);</span><br><span class="line">dwConSize=csbi.dwSize.X*csbi.dwSize.Y;</span><br><span class="line">FillConsoleOutputCharacter(hConsole,TEXT(<span class="string">' '</span>),dwConSize,ZERO,&amp;cCharsWritten);</span><br><span class="line">GetConsoleScreenBufferInfo(hConsole,&amp;csbi);</span><br><span class="line">FillConsoleOutputAttribute(hConsole,csbi.wAttributes,dwConSize,ZERO,&amp;cCharsWritten);</span><br><span class="line">SetConsoleCursorPosition(hConsole,ZERO);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(<span class="keyword">int</span> tick)</span> </span>&#123;</span><br><span class="line"><span class="comment">//  Sleep(tick*20);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(<span class="keyword">char</span> title[])</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> cmd[<span class="number">200</span>]=<span class="string">""</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(cmd,<span class="string">"title %s"</span>,title);</span><br><span class="line">system(cmd);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> GAME_VERSION[]=<span class="string">"小跳蛙魔改版α0.2.6"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> TITLE_FORMAT[]=<span class="string">"原子战役%s (第%d回合 %s行动)"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_EMPTY[<span class="number">16</span>]= &#123;<span class="string">"×"</span>,<span class="string">"↑"</span>,<span class="string">"←"</span>,<span class="string">"╔"</span>,<span class="string">"↓"</span>,<span class="string">"║"</span>,<span class="string">"╚"</span>,<span class="string">"╟"</span>,<span class="string">"→"</span>,<span class="string">"╗"</span>,<span class="string">"═"</span>,<span class="string">"╤"</span>,<span class="string">"╝"</span>,<span class="string">"╢"</span>,<span class="string">"╧"</span>,<span class="string">"╬"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_FULL[<span class="number">16</span>]= &#123;<span class="string">"×"</span>,<span class="string">"↑"</span>,<span class="string">"←"</span>,<span class="string">"┏"</span>,<span class="string">"↓"</span>,<span class="string">"┃"</span>,<span class="string">"┗"</span>,<span class="string">"┠"</span>,<span class="string">"→"</span>,<span class="string">"┓"</span>,<span class="string">"━"</span>,<span class="string">"┯"</span>,<span class="string">"┛"</span>,<span class="string">"┨"</span>,<span class="string">"┷"</span>,<span class="string">"╋"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> LABEL_TITLE[]=<span class="string">"玩家   原子  "</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> SPACE[]=<span class="string">"　"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> GAME_END_FORMAT[<span class="number">2</span>]= &#123;<span class="string">"title 原子战役%s (结束！%s赢了)"</span>,<span class="string">"title 原子战役%s (结束！没有玩家胜利)"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> ATOMS_CHAR[<span class="number">21</span>]= &#123;SPACE,<span class="string">"·"</span>,<span class="string">"‥"</span>,<span class="string">"∴"</span>,<span class="string">"∷"</span>,<span class="string">"⑤"</span>,<span class="string">"⑥"</span>,<span class="string">"⑦"</span>,<span class="string">"⑧"</span>,<span class="string">"⑨"</span>,<span class="string">"⑩"</span>,<span class="string">"⑾"</span>,<span class="string">"⑿"</span>,<span class="string">"⒀"</span>,<span class="string">"⒁"</span>,<span class="string">"⒂"</span>,<span class="string">"⒃"</span>,<span class="string">"⒄"</span>,<span class="string">"⒅"</span>,<span class="string">"⒆"</span>,<span class="string">"⒇"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> SPECIAL_CHARS[]= &#123;<span class="string">"●"</span>,<span class="string">"～"</span>,<span class="string">"△"</span>,<span class="string">"□"</span>,<span class="string">"◆"</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;termios.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;sys/prctl.h&gt;</span></span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span> <span class="title">termios</span> <span class="title">initial_settings</span>,<span class="title">new_settings</span>;</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> peek_character=<span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initKeyBoard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">tcgetattr(<span class="number">0</span>,&amp;initial_settings);</span><br><span class="line">new_settings=initial_settings;</span><br><span class="line">new_settings.c_lflag&amp;=~ICANON;</span><br><span class="line">new_settings.c_lflag&amp;=~ECHO;</span><br><span class="line">new_settings.c_lflag&amp;=~ISIG;</span><br><span class="line">new_settings.c_cc[VMIN]=<span class="number">1</span>;</span><br><span class="line">new_settings.c_cc[VTIME]=<span class="number">0</span>;</span><br><span class="line">tcsetattr(<span class="number">0</span>,TCSANOW,&amp;new_settings);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">closeKeyBoard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">tcsetattr(<span class="number">0</span>,TCSANOW,&amp;initial_settings);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\33[0m"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kbhit</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">int</span> nread;</span><br><span class="line"><span class="keyword">if</span>(peek_character!=<span class="number">-1</span>)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">new_settings.c_cc[VMIN]=<span class="number">0</span>;</span><br><span class="line">tcsetattr(<span class="number">0</span>,TCSANOW,&amp;new_settings);</span><br><span class="line">nread=read(<span class="number">0</span>,&amp;ch,<span class="number">1</span>);</span><br><span class="line">new_settings.c_cc[VMIN]=<span class="number">1</span>;</span><br><span class="line">tcsetattr(<span class="number">0</span>,TCSANOW,&amp;new_settings);</span><br><span class="line"><span class="keyword">if</span>(nread==<span class="number">1</span>) &#123;</span><br><span class="line">peek_character=ch;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">getch</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="keyword">if</span>(peek_character!=<span class="number">-1</span>) &#123;</span><br><span class="line">ch=peek_character;</span><br><span class="line">peek_character=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line">read(<span class="number">0</span>,&amp;ch,<span class="number">1</span>);</span><br><span class="line">if(ch=='\003') &#123;</span><br><span class="line">closeKeyBoard();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">if(ch=='\033') &#123;</span><br><span class="line">getch();</span><br><span class="line"><span class="keyword">char</span> c=getch();</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> res[]= &#123;UP,DOWN,RIGHT,LEFT&#125;;</span><br><span class="line"><span class="keyword">return</span> ARROW*<span class="number">256</span>+res[c-<span class="string">'A'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">enum</span> COLOR &#123;COLOR_BLACK=<span class="number">0</span>,COLOR_DARK_BLUE=<span class="number">024</span>,COLOR_DARK_GREEN=<span class="number">022</span>,COLOR_DARK_BG=<span class="number">026</span>,COLOR_DARK_RED=<span class="number">021</span>,COLOR_DARK_PURPLE=<span class="number">025</span>,COLOR_DARK_YELLOW=<span class="number">023</span>,COLOR_DARK_WHITE=<span class="number">027</span>,COLOR_GRAY=<span class="number">010</span>,COLOR_BLUE=<span class="number">004</span>,COLOR_GREEN=<span class="number">002</span>,COLOR_BG=<span class="number">006</span>,COLOR_RED=<span class="number">001</span>,COLOR_PURPLE=<span class="number">005</span>,COLOR_YELLOW=<span class="number">003</span>,COLOR_WHITE=<span class="number">007</span>&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_H=MAP_SIZE;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_W=MAP_SIZE+<span class="number">55</span>;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">int</span> CONSOLE_SIZE=CONSOLE_H*CONSOLE_W;</span><br><span class="line"><span class="keyword">int</span> cursor_x,cursor_y;</span><br><span class="line"><span class="keyword">int</span> cols,rows;</span><br><span class="line"><span class="keyword">bool</span> cursor_show;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> buf[CONSOLE_H][CONSOLE_W];</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> ctrl[CONSOLE_H][CONSOLE_W];</span><br><span class="line">Printer() &#123;</span><br><span class="line">clear();</span><br><span class="line">cursor_x=cursor_y=<span class="number">-1</span>;</span><br><span class="line">cursor_show=<span class="literal">true</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\033[?25l"</span>);</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">setColor</span><span class="params">(COLOR fore,COLOR back=COLOR_BLACK,<span class="keyword">bool</span> underline=<span class="literal">false</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> tctrl[<span class="number">200</span>];</span><br><span class="line"><span class="keyword">int</span> fc=(fore&amp;<span class="number">7</span>)+(fore&amp;<span class="number">020</span>?<span class="number">30</span>:<span class="number">90</span>);</span><br><span class="line"><span class="keyword">int</span> bc=(back&amp;<span class="number">7</span>)+(back&amp;<span class="number">020</span>?<span class="number">40</span>:<span class="number">100</span>);</span><br><span class="line"><span class="built_in">sprintf</span>(tctrl,<span class="string">"\033[0m\033[%d;%d"</span>,fc,bc);</span><br><span class="line">ctrl[rows][cols]=tctrl;</span><br><span class="line"><span class="keyword">if</span>(underline)ctrl[rows][cols]+=<span class="string">";4"</span>;</span><br><span class="line">ctrl[rows][cols]+=<span class="string">"m"</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">const</span> <span class="built_in">std</span>::<span class="built_in">string</span>&amp;str)</span> </span>&#123;</span><br><span class="line">buf[rows][cols++]=str;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">writeln</span><span class="params">()</span> </span>&#123;</span><br><span class="line">rows++;</span><br><span class="line">cols=<span class="number">0</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">fresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> res=<span class="string">"\033[2J"</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;CONSOLE_H; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;CONSOLE_W; j++) &#123;</span><br><span class="line">res+=ctrl[i][j];</span><br><span class="line"><span class="keyword">if</span>(cursor_show&amp;&amp;i==cursor_y&amp;&amp;j==cursor_x/<span class="number">2</span>) &#123;</span><br><span class="line">res+=<span class="string">"\033[5m\033[7m"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(buf[i][j]==<span class="string">""</span>)<span class="keyword">break</span>;</span><br><span class="line">res+=buf[i][j];</span><br><span class="line">&#125;</span><br><span class="line">res+=<span class="string">"\033[0m\r\n"</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%s"</span>,res.c_str());</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">setCursor</span><span class="params">(<span class="keyword">bool</span> show,<span class="keyword">int</span> size=<span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">cursor_show=show;</span><br><span class="line">assert(size==size);</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">cursor_x=x;</span><br><span class="line">cursor_y=y;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;CONSOLE_H; i++)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;CONSOLE_W; j++) &#123;</span><br><span class="line">buf[i][j].clear();</span><br><span class="line">ctrl[i][j].clear();</span><br><span class="line">&#125;</span><br><span class="line">cols=rows=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">wait</span><span class="params">(<span class="keyword">int</span> tick)</span> </span>&#123;</span><br><span class="line"><span class="comment">//  usleep(tick*20000);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTitle</span><span class="params">(<span class="keyword">char</span> title[])</span> </span>&#123;</span><br><span class="line">prctl(PR_SET_NAME,title,<span class="literal">NULL</span>,<span class="literal">NULL</span>,<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> GAME_VERSION[]=<span class="string">"α0.2.6"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> TITLE_FORMAT[]=<span class="string">"原子战役%s (第%d回合 %s行动)"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_EMPTY[<span class="number">16</span>]= &#123;<span class="string">"× "</span>,<span class="string">"↑ "</span>,<span class="string">"← "</span>,<span class="string">"╔═"</span>,<span class="string">"↓ "</span>,<span class="string">"║ "</span>,<span class="string">"╚═"</span>,<span class="string">"╟═"</span>,<span class="string">"→ "</span>,<span class="string">"╗ "</span>,<span class="string">"══"</span>,<span class="string">"╤═"</span>,<span class="string">"╝ "</span>,<span class="string">"╢ "</span>,<span class="string">"╧═"</span>,<span class="string">"╬═"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> BRIDGE_FULL[<span class="number">16</span>]= &#123;<span class="string">"× "</span>,<span class="string">"↑ "</span>,<span class="string">"←━"</span>,<span class="string">"┏━"</span>,<span class="string">"↓ "</span>,<span class="string">"┃ "</span>,<span class="string">"┗━"</span>,<span class="string">"┠━"</span>,<span class="string">"━→"</span>,<span class="string">"┓ "</span>,<span class="string">"━━"</span>,<span class="string">"┯━"</span>,<span class="string">"┛ "</span>,<span class="string">"┨ "</span>,<span class="string">"┷━"</span>,<span class="string">"╋━"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> LABEL_TITLE[]=<span class="string">"玩家   原子  "</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> SPACE[]=<span class="string">"　"</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> GAME_END_FORMAT[<span class="number">2</span>]= &#123;<span class="string">"title 原子战役%s (结束！%s赢了)"</span>,<span class="string">"title 原子战役%s (结束！没有玩家胜利)"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> ATOMS_CHAR[<span class="number">21</span>]= &#123;SPACE,<span class="string">"· "</span>,<span class="string">"··"</span>,<span class="string">":."</span>,<span class="string">"::"</span>,<span class="string">"*5"</span>,<span class="string">"*6"</span>,<span class="string">"*7"</span>,<span class="string">"*8"</span>,<span class="string">"*9"</span>,<span class="string">"10"</span>,<span class="string">"11"</span>,<span class="string">"12"</span>,<span class="string">"13"</span>,<span class="string">"14"</span>,<span class="string">"15"</span>,<span class="string">"16"</span>,<span class="string">"17"</span>,<span class="string">"18"</span>,<span class="string">"19"</span>,<span class="string">"20"</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*<span class="keyword">const</span> SPECIAL_CHARS[]= &#123;<span class="string">"●"</span>,<span class="string">"～"</span>,<span class="string">"△ "</span>,<span class="string">"□ "</span>,<span class="string">"◆ "</span>&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">enum</span> TERRAIN &#123;TERRAIN_EMPTY,TERRAIN_SEA,TERRAIN_MOUNTAIN&#125;;</span><br><span class="line"><span class="keyword">enum</span> BUILDING &#123;BUILDING_NONE,BUILDING_BRIDGE,BUILDING_PALACE,BUILDING_TOWER&#125;;</span><br><span class="line"><span class="keyword">enum</span> EVENT_TYPE &#123;EVENT_UPDATE,EVENT_CAPETURE,EVENT_GAMEOVER&#125;;</span><br><span class="line"><span class="keyword">enum</span> PLAYER_TYPE &#123;PLAYER_UNKNOWN,PLAYER_AI,PLAYER_HUMAN&#125;;</span><br><span class="line"><span class="keyword">enum</span> MAP_STYLE_TYPE &#123;MAP_STYLE_DEBUG,MAP_STYLE_ARENA,MAP_STYLE_RIVER,MAP_STYLE_HILL,MAP_STYLE_ISLAND,MAP_STYLE_RING,MAP_STYLE_BOB,MAP_STYLE_CLEAN&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> persistence=<span class="number">0.50</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> Number_Of_Octaves=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_PLAYERS=<span class="number">8</span>;</span><br><span class="line"><span class="keyword">const</span> COLOR playerColors[MAX_PLAYERS]= &#123;COLOR_RED,COLOR_BLUE,COLOR_GREEN,COLOR_DARK_PURPLE,COLOR_DARK_YELLOW,COLOR_DARK_GREEN,COLOR_DARK_RED,COLOR_BG&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dx[]= &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> dy[]= &#123;<span class="number">0</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> LOG[<span class="number">16</span>]= &#123;<span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span>,<span class="number">2</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">3</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>,<span class="number">-1</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">bool</span> BRIDGE_IS_CORNER[<span class="number">16</span>]= &#123;<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">true</span>,<span class="literal">false</span>,<span class="literal">false</span>,<span class="literal">false</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SPEED_NONE=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SPEED_NOTICKDELAY=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SPEED_NOTICKPRINT=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SPEED_NOROUNDDELAY=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> SPEED_NOROUNDPRINT=<span class="number">8</span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Noise</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n=x+y*<span class="number">57</span>;</span><br><span class="line">n=(n&lt;&lt;<span class="number">13</span>)^n;</span><br><span class="line"><span class="keyword">return</span>(<span class="number">1.0</span>-((n*(n*n*<span class="number">15731</span>+<span class="number">789221</span>)+<span class="number">1376312589</span>)&amp;<span class="number">0x7fffffff</span>)/<span class="number">1073741824.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">SmoothedNoise</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> corners=(Noise(x<span class="number">-1</span>,y<span class="number">-1</span>)+Noise(x+<span class="number">1</span>,y<span class="number">-1</span>)+Noise(x<span class="number">-1</span>,y+<span class="number">1</span>)+Noise(x+<span class="number">1</span>,y+<span class="number">1</span>))/<span class="number">16</span>;</span><br><span class="line"><span class="keyword">double</span> sides=(Noise(x<span class="number">-1</span>,y)+Noise(x+<span class="number">1</span>,y)+Noise(x,y<span class="number">-1</span>)+Noise(x,y+<span class="number">1</span>))/<span class="number">8</span>;</span><br><span class="line"><span class="keyword">double</span> center=Noise(x,y)/<span class="number">4</span>;</span><br><span class="line"><span class="keyword">return</span> corners+sides+center;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">Cosine_Interpolate</span><span class="params">(<span class="keyword">double</span> a,<span class="keyword">double</span> b,<span class="keyword">double</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> ft=x*<span class="number">3.1415927</span>;</span><br><span class="line"><span class="keyword">double</span> f=(<span class="number">1</span>-<span class="built_in">cos</span>(ft))*<span class="number">0.5</span>;</span><br><span class="line"><span class="keyword">return</span> a*(<span class="number">1</span>-f)+b*f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">InterpolatedNoise</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> integer_X=<span class="keyword">int</span>(x);</span><br><span class="line"><span class="keyword">double</span> fractional_X=x-integer_X;</span><br><span class="line"><span class="keyword">int</span> integer_Y=<span class="keyword">int</span>(y);</span><br><span class="line"><span class="keyword">double</span> fractional_Y=y-integer_Y;</span><br><span class="line"><span class="keyword">double</span> v1=SmoothedNoise(integer_X,integer_Y);</span><br><span class="line"><span class="keyword">double</span> v2=SmoothedNoise(integer_X+<span class="number">1</span>,integer_Y);</span><br><span class="line"><span class="keyword">double</span> v3=SmoothedNoise(integer_X,integer_Y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> v4=SmoothedNoise(integer_X+<span class="number">1</span>,integer_Y+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">double</span> i1=Cosine_Interpolate(v1,v2,fractional_X);</span><br><span class="line"><span class="keyword">double</span> i2=Cosine_Interpolate(v3,v4,fractional_X);</span><br><span class="line"><span class="keyword">return</span> Cosine_Interpolate(i1,i2,fractional_Y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">PerlinNoise</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">double</span> total=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">double</span> p=persistence;</span><br><span class="line"><span class="keyword">int</span> n=Number_Of_Octaves;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">double</span> frequency=<span class="built_in">pow</span>(<span class="number">2</span>,i);</span><br><span class="line"><span class="keyword">double</span> amplitude=<span class="built_in">pow</span>(p,i);</span><br><span class="line">total=total+InterpolatedNoise(x*frequency,y*frequency)*amplitude;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> total;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">rand01</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0</span>*rand()/RAND_MAX;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Map</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">bigChar</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">string</span> s;</span><br><span class="line">bigChar() &#123;</span><br><span class="line">s=<span class="string">""</span>;</span><br><span class="line">&#125; bigChar(<span class="keyword">const</span> <span class="keyword">char</span>*str) &#123;</span><br><span class="line">s=<span class="built_in">std</span>::<span class="built_in">string</span>(str);</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">cover</span><span class="params">(bigChar x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x.s!=<span class="string">""</span>)s=x.s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Event</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,t,data;</span><br><span class="line">EVENT_TYPE type;</span><br><span class="line">Event(<span class="keyword">int</span> _x,<span class="keyword">int</span> _y,<span class="keyword">int</span> <span class="keyword">_t</span>,EVENT_TYPE _type,<span class="keyword">int</span> _data) &#123;</span><br><span class="line">x=_x;</span><br><span class="line">y=_y;</span><br><span class="line">t=<span class="keyword">_t</span>;</span><br><span class="line">type=_type;</span><br><span class="line">data=_data;</span><br><span class="line">&#125; <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> Event e)<span class="keyword">const</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(t!=e.t)<span class="keyword">return</span> t&gt;e.t;</span><br><span class="line"><span class="keyword">if</span>(x!=e.x)<span class="keyword">return</span> x&gt;e.x;</span><br><span class="line"><span class="keyword">if</span>(y!=e.y)<span class="keyword">return</span> y&gt;e.y;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Map</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Printer*p;</span><br><span class="line">TERRAIN ter[MAP_SIZE][MAP_SIZE];</span><br><span class="line">BUILDING building[MAP_SIZE][MAP_SIZE];</span><br><span class="line"><span class="keyword">int</span> data[MAP_SIZE][MAP_SIZE];</span><br><span class="line"><span class="keyword">int</span> atoms[MAP_SIZE][MAP_SIZE];</span><br><span class="line"><span class="keyword">int</span> atomFlags[MAP_SIZE][MAP_SIZE][<span class="number">4</span>];</span><br><span class="line"><span class="keyword">int</span> owner[MAP_SIZE][MAP_SIZE];</span><br><span class="line"><span class="keyword">bool</span> alive[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> palacesx[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> palacesy[MAX_PLAYERS];</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;towersx,towersy;</span><br><span class="line">PLAYER_TYPE playerType[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*playerNames[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> atomsCount[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> landCount[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> size;</span><br><span class="line"><span class="keyword">int</span> cx,cy;</span><br><span class="line"><span class="keyword">int</span> speed;</span><br><span class="line"><span class="keyword">int</span> playerCount;</span><br><span class="line">priority_queue&lt;Event&gt;eventQueue;</span><br><span class="line"><span class="keyword">int</span> tick;</span><br><span class="line">Map(<span class="keyword">int</span> _size) &#123;</span><br><span class="line">size=_size;</span><br><span class="line">cx=cy=size/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line">building[x][y]=BUILDING_NONE;</span><br><span class="line">data[x][y]=<span class="number">0</span>;</span><br><span class="line">atoms[x][y]=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> der=<span class="number">0</span>; der&lt;<span class="number">4</span>; der++)atomFlags[x][y][der]=<span class="number">0</span>;</span><br><span class="line">owner[x][y]=<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">towersx.clear();</span><br><span class="line">towersy.clear();</span><br><span class="line">speed=<span class="number">0</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">const</span> bigChar <span class="title">getTerChars</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">const</span> bigChar <span class="title">getBuildingChars</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isUnderline</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function">COLOR <span class="title">getForeColor</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function">COLOR <span class="title">getBackColor</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">atomAccessable</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> der)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">atomLimit</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">hasEvent</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span>!eventQueue.empty();</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">doGameTick</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sendAtoms</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> der,<span class="keyword">int</span> tick,<span class="keyword">int</span> owner,<span class="keyword">int</span> count)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateGrid</span><span class="params">(Event e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setPalace</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setTower</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> id,<span class="keyword">int</span> count,<span class="keyword">int</span> speed)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setBridge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n,<span class="keyword">int</span> w,<span class="keyword">int</span> s,<span class="keyword">int</span> e)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">towersProduce</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buildMap</span><span class="params">(MAP_STYLE_TYPE style,<span class="keyword">int</span> players)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gameCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(landCount,<span class="number">0</span>,<span class="keyword">sizeof</span>(landCount));</span><br><span class="line"><span class="built_in">memset</span>(atomsCount,<span class="number">0</span>,<span class="keyword">sizeof</span>(atomsCount));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size; i++)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;size; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> to=owner[i][j];</span><br><span class="line"><span class="keyword">if</span>(to&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">landCount[to]++;</span><br><span class="line">atomsCount[to]+=atoms[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">resetEvent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">tick=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(hasEvent())eventQueue.pop();</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">inBound</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> x&gt;=<span class="number">0</span>&amp;&amp;x&lt;size&amp;&amp;y&gt;=<span class="number">0</span>&amp;&amp;y&lt;size;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">p-&gt;clear();</span><br><span class="line">gameCount();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=-SCREEN_SIZE; i&lt;=SCREEN_SIZE; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=-SCREEN_SIZE; j&lt;=SCREEN_SIZE; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> x=cx+i;</span><br><span class="line"><span class="keyword">int</span> y=cy+j;</span><br><span class="line"><span class="keyword">if</span>(!inBound(x,y)) &#123;</span><br><span class="line">p-&gt;setColor(COLOR_BLACK,COLOR_BLACK);</span><br><span class="line">p-&gt;write(SPACE);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;setColor(getForeColor(x,y),getBackColor(x,y),isUnderline(x,y));</span><br><span class="line">bigChar ch=getTerChars(x,y);</span><br><span class="line">ch.cover(getBuildingChars(x,y));</span><br><span class="line">p-&gt;write(ch.s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> line=i+SCREEN_SIZE;</span><br><span class="line"><span class="keyword">if</span>(line==<span class="number">0</span>) &#123;</span><br><span class="line">p-&gt;setColor(COLOR_BLACK,COLOR_WHITE);</span><br><span class="line">p-&gt;write(LABEL_TITLE);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span>(line<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;line<span class="number">-1</span>&lt;playerCount) &#123;</span><br><span class="line">p-&gt;setColor(alive[line<span class="number">-1</span>]?playerColors[line<span class="number">-1</span>]:COLOR_BLACK,COLOR_WHITE);</span><br><span class="line"><span class="keyword">char</span> rw[<span class="number">60</span>]=<span class="string">""</span>;</span><br><span class="line"><span class="built_in">sprintf</span>(rw,<span class="string">"%-6s %-6d"</span>,playerNames[line<span class="number">-1</span>],atomsCount[line<span class="number">-1</span>]);</span><br><span class="line">p-&gt;write(rw);</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;setColor(COLOR_BLACK,COLOR_BLACK);</span><br><span class="line"><span class="keyword">if</span>(i&lt;SCREEN_SIZE)p-&gt;writeln();</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;fresh();</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">moveCursor</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!inBound(x,y))<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> hx=(y-cy+SCREEN_SIZE)*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> hy=x-cx+SCREEN_SIZE;</span><br><span class="line">p-&gt;gotoxy(hx,hy);</span><br><span class="line">p-&gt;fresh();</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">isEnded</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ali=<span class="number">0</span>;</span><br><span class="line">gameCount();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;playerCount; i++)<span class="keyword">if</span>(alive[i]||landCount[i]&gt;<span class="number">0</span>) &#123;</span><br><span class="line">ali++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ali&lt;=<span class="number">1</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">int</span> <span class="title">getWinner</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!isEnded())<span class="keyword">return</span><span class="number">-2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;playerCount; i++)<span class="keyword">if</span>(alive[i]) &#123;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span><span class="number">-1</span>;</span><br><span class="line">&#125; <span class="function"><span class="keyword">void</span> <span class="title">progress</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(kbhit())getch();</span><br><span class="line"><span class="keyword">while</span>(hasEvent()) &#123;</span><br><span class="line"><span class="keyword">if</span>((speed&amp;SPEED_NOTICKDELAY)==<span class="number">0</span>)wait(<span class="number">1</span>);</span><br><span class="line">doGameTick();</span><br><span class="line"><span class="keyword">if</span>((speed&amp;SPEED_NOTICKPRINT)==<span class="number">0</span>)print();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((speed&amp;SPEED_NOROUNDPRINT)==<span class="number">0</span>)print();</span><br><span class="line"><span class="keyword">if</span>((speed&amp;SPEED_NOROUNDDELAY)==<span class="number">0</span>)wait(<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(isEnded()) &#123;</span><br><span class="line"><span class="keyword">char</span> cmd[<span class="number">200</span>]=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> winner=getWinner();</span><br><span class="line"><span class="keyword">if</span>(winner!=<span class="number">-1</span>) &#123;</span><br><span class="line"><span class="built_in">sprintf</span>(cmd,GAME_END_FORMAT[<span class="number">0</span>],GAME_VERSION,playerNames[winner]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">sprintf</span>(cmd,GAME_END_FORMAT[<span class="number">1</span>],GAME_VERSION);</span><br><span class="line">&#125;</span><br><span class="line">system(cmd);</span><br><span class="line">print();</span><br><span class="line">closeKeyBoard();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="function"><span class="keyword">bool</span> <span class="title">choiceVaild</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> inBound(x,y)&amp;&amp;owner[x][y]==id&amp;&amp;(building[x][y]==BUILDING_NONE||building[x][y]==BUILDING_PALACE);</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">const</span> bigChar Map::getTerChars(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">int</span> k=atoms[x][y];</span><br><span class="line"><span class="keyword">if</span>(k&lt;=<span class="number">20</span>)<span class="keyword">return</span> bigChar(ATOMS_CHAR[k]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> bigChar(SPECIAL_CHARS[<span class="number">0</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA: &#123;</span><br><span class="line"><span class="keyword">return</span> bigChar((x+y)%<span class="number">2</span>?SPACE:SPECIAL_CHARS[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN: &#123;</span><br><span class="line"><span class="keyword">return</span> bigChar(SPECIAL_CHARS[<span class="number">2</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bigChar(SPACE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> bigChar Map::getBuildingChars(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">return</span> bigChar(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">return</span> bigChar((atoms[x][y]==<span class="number">0</span>?BRIDGE_EMPTY:BRIDGE_FULL)[data[x][y]&amp;<span class="number">15</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE: &#123;</span><br><span class="line"><span class="keyword">if</span>(atoms[x][y]&gt;<span class="number">0</span>)<span class="keyword">return</span> bigChar(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> bigChar(SPECIAL_CHARS[<span class="number">3</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER: &#123;</span><br><span class="line"><span class="keyword">if</span>(atoms[x][y]&gt;<span class="number">0</span>)<span class="keyword">return</span> bigChar(<span class="string">""</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> bigChar(SPECIAL_CHARS[<span class="number">4</span>]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> bigChar(SPACE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> Map::isUnderline(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">return</span> building[x][y]==BUILDING_PALACE;</span><br><span class="line">&#125;</span><br><span class="line">COLOR Map::getForeColor(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">if</span>(owner[x][y]==<span class="number">-1</span>)<span class="keyword">if</span>(ter[x][y]==TERRAIN_MOUNTAIN)<span class="keyword">return</span> COLOR_BLACK;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> COLOR_GRAY;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> playerColors[owner[x][y]];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_YELLOW;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_PURPLE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_WHITE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_BLACK;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_DARK_BG;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> COLOR_BLACK;</span><br><span class="line">&#125;</span><br><span class="line">COLOR Map::getBackColor(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE:</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER: &#123;</span><br><span class="line"><span class="keyword">if</span>(owner[x][y]==<span class="number">-1</span>)<span class="keyword">return</span> COLOR_GRAY;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(owner[x][y]==<span class="number">-2</span>)<span class="keyword">return</span> COLOR_BLACK;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> playerColors[owner[x][y]];</span><br><span class="line"><span class="keyword">return</span> COLOR_WHITE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">if</span>(ter[x][y]==TERRAIN_EMPTY)<span class="keyword">return</span> COLOR_WHITE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">if</span>(owner[x][y]==<span class="number">-1</span>)<span class="keyword">return</span> atoms[x][y]&gt;<span class="number">0</span>?COLOR_GRAY:COLOR_WHITE;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(owner[x][y]==<span class="number">-2</span>)<span class="keyword">return</span> atoms[x][y]&gt;<span class="number">0</span>?COLOR_BLACK:COLOR_WHITE;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> playerColors[owner[x][y]];</span><br><span class="line"><span class="keyword">return</span> COLOR_WHITE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_DARK_WHITE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA: &#123;</span><br><span class="line"><span class="keyword">return</span> COLOR_DARK_BLUE;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> COLOR_BLACK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> Map::atomAccessable(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> der) &#123;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">return</span>(data[x][y]&amp;(<span class="number">1</span>&lt;&lt;der))!=<span class="number">0</span>?<span class="number">1</span>:<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER:</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE: &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA:</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN: &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> Map::atomLimit(<span class="keyword">int</span> x,<span class="keyword">int</span> y) &#123;</span><br><span class="line"><span class="keyword">int</span> res=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> der=<span class="number">0</span>; der&lt;<span class="number">4</span>; der++) &#123;</span><br><span class="line"><span class="keyword">if</span>(atomAccessable(x+dx[der],y+dy[der],der)) &#123;</span><br><span class="line">res++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::doGameTick() &#123;</span><br><span class="line"><span class="keyword">while</span>(hasEvent()&amp;&amp;(eventQueue.top().t&lt;=tick||eventQueue.top().type==EVENT_GAMEOVER)) &#123;</span><br><span class="line">Event e=eventQueue.top();</span><br><span class="line">eventQueue.pop();</span><br><span class="line"><span class="keyword">switch</span>(e.type) &#123;</span><br><span class="line"><span class="keyword">case</span> EVENT_UPDATE: &#123;</span><br><span class="line">updateGrid(e);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> EVENT_CAPETURE: &#123;</span><br><span class="line">owner[e.x][e.y]=e.data;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> EVENT_GAMEOVER: &#123;</span><br><span class="line">resetEvent();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tick++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::sendAtoms(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> der,<span class="keyword">int</span> tick,<span class="keyword">int</span> aOwner,<span class="keyword">int</span> count) &#123;</span><br><span class="line"><span class="keyword">if</span>(der!=<span class="number">-1</span>)atomFlags[x][y][der]+=count;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER:</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">goto</span> ok;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE: &#123;</span><br><span class="line"><span class="keyword">if</span>(aOwner!=owner[x][y]&amp;&amp;owner[x][y]==data[x][y]) &#123;</span><br><span class="line">alive[data[x][y]]=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size; i++)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;size; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(owner[i][j]==data[x][y]) &#123;</span><br><span class="line">eventQueue.push(Event(i,j,tick+(<span class="built_in">abs</span>(i-x)+<span class="built_in">abs</span>(j-y))*<span class="number">2</span>,EVENT_CAPETURE,aOwner));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">building[x][y]=BUILDING_NONE;</span><br><span class="line">data[x][y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(isEnded()) &#123;</span><br><span class="line">eventQueue.push(Event(<span class="number">-1</span>,<span class="number">-1</span>,tick+<span class="number">256</span>,EVENT_GAMEOVER,<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN:</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA: &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ok:</span><br><span class="line">;</span><br><span class="line"><span class="keyword">if</span>(owner[x][y]!=<span class="number">-2</span>) &#123;</span><br><span class="line">owner[x][y]=aOwner;</span><br><span class="line">atoms[x][y]+=count;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(count&gt;atoms[x][y]) &#123;</span><br><span class="line">owner[x][y]=aOwner;</span><br><span class="line">atoms[x][y]=count-atoms[x][y];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">atoms[x][y]-=count;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">eventQueue.push(Event(x,y,tick+<span class="number">2</span>,EVENT_UPDATE,<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::updateGrid(Event e) &#123;</span><br><span class="line"><span class="keyword">int</span> x=e.x;</span><br><span class="line"><span class="keyword">int</span> y=e.y;</span><br><span class="line"><span class="keyword">switch</span>(building[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> BUILDING_PALACE:</span><br><span class="line"><span class="keyword">case</span> BUILDING_TOWER:</span><br><span class="line"><span class="keyword">case</span> BUILDING_NONE: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> BUILDING_BRIDGE: &#123;</span><br><span class="line"><span class="keyword">if</span>(atoms[x][y]&lt;=<span class="number">0</span>)<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">int</span> d=data[x][y];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> der=<span class="number">0</span>; der&lt;<span class="number">4</span>; der++) &#123;</span><br><span class="line"><span class="keyword">if</span>(atomFlags[x][y][der]) &#123;</span><br><span class="line"><span class="keyword">int</span> newDer=der;</span><br><span class="line"><span class="keyword">if</span>(BRIDGE_IS_CORNER[d])newDer=<span class="number">2</span>^LOG[d^(<span class="number">1</span>&lt;&lt;der)];</span><br><span class="line">atoms[x][y]-=atomFlags[x][y][der];</span><br><span class="line">sendAtoms(x+dx[newDer],y+dy[newDer],newDer,e.t+<span class="number">1</span>,owner[x][y],atomFlags[x][y][der]);</span><br><span class="line">&#125;</span><br><span class="line">atomFlags[x][y][der]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(ter[x][y]) &#123;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_EMPTY: &#123;</span><br><span class="line"><span class="keyword">int</span> oks=atomLimit(x,y);</span><br><span class="line"><span class="keyword">if</span>(owner[x][y]!=<span class="number">-2</span>&amp;&amp;oks&gt;=<span class="number">1</span>&amp;&amp;atoms[x][y]&gt;=oks) &#123;</span><br><span class="line"><span class="keyword">int</span> splited=atoms[x][y]/oks;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> der=<span class="number">0</span>; der&lt;<span class="number">4</span>; der++) &#123;</span><br><span class="line"><span class="keyword">if</span>(atomAccessable(x+dx[der],y+dy[der],der)) &#123;</span><br><span class="line">atoms[x][y]-=splited;</span><br><span class="line">sendAtoms(x+dx[der],y+dy[der],der,e.t+<span class="number">2</span>,owner[x][y],splited);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> TERRAIN_SEA:</span><br><span class="line"><span class="keyword">case</span> TERRAIN_MOUNTAIN: &#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::towersProduce(<span class="keyword">int</span> id) &#123;</span><br><span class="line"><span class="keyword">int</span> l=towersx.size();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;l; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tx=towersx[i];</span><br><span class="line"><span class="keyword">int</span> ty=towersy[i];</span><br><span class="line"><span class="keyword">if</span>(building[tx][ty]==BUILDING_TOWER&amp;&amp;owner[tx][ty]==id)sendAtoms(tx,ty,<span class="number">-1</span>,<span class="number">0</span>,id,data[tx][ty]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::setPalace(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> id) &#123;</span><br><span class="line">ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">owner[x][y]=id;</span><br><span class="line">building[x][y]=BUILDING_PALACE;</span><br><span class="line">data[x][y]=id;</span><br><span class="line">palacesx[id]=x;</span><br><span class="line">palacesy[id]=y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::setTower(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> id,<span class="keyword">int</span> count,<span class="keyword">int</span> speed=<span class="number">1</span>) &#123;</span><br><span class="line">owner[x][y]=id;</span><br><span class="line">atoms[x][y]=count;</span><br><span class="line">building[x][y]=BUILDING_TOWER;</span><br><span class="line">data[x][y]=speed;</span><br><span class="line">towersx.push_back(x);</span><br><span class="line">towersy.push_back(y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::setBridge(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> n,<span class="keyword">int</span> w,<span class="keyword">int</span> s,<span class="keyword">int</span> e) &#123;</span><br><span class="line">building[x][y]=BUILDING_BRIDGE;</span><br><span class="line">data[x][y]=(n&lt;&lt;<span class="number">0</span>)|(w&lt;&lt;<span class="number">1</span>)|(s&lt;&lt;<span class="number">2</span>)|(e&lt;&lt;<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> Map::buildMap(MAP_STYLE_TYPE style,<span class="keyword">int</span> players) &#123;</span><br><span class="line">towersx.clear();</span><br><span class="line">towersy.clear();</span><br><span class="line">playerCount=players;</span><br><span class="line"><span class="keyword">switch</span>(style) &#123;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_DEBUG: &#123;</span><br><span class="line"><span class="keyword">int</span> posesx[]= &#123;<span class="number">2</span>,<span class="number">2</span>,size<span class="number">-3</span>,size<span class="number">-3</span>,<span class="number">2</span>,size/<span class="number">2</span>,size/<span class="number">2</span>,size<span class="number">-3</span>,size/<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> posesy[]= &#123;<span class="number">2</span>,size<span class="number">-3</span>,<span class="number">2</span>,size<span class="number">-3</span>,size/<span class="number">2</span>,<span class="number">2</span>,size<span class="number">-3</span>,size/<span class="number">2</span>,size/<span class="number">2</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line">ter[x][y]=(x==<span class="number">0</span>||x==size<span class="number">-1</span>||y==<span class="number">0</span>||y==size<span class="number">-1</span>)?TERRAIN_MOUNTAIN:TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(ter[x][y]==TERRAIN_EMPTY) &#123;</span><br><span class="line">setTower(x,y,<span class="number">-2</span>,rand()%<span class="number">3</span>+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line">setPalace(posesx[id],posesy[id],id);</span><br><span class="line">atoms[posesx[id]][posesy[id]]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_ARENA: &#123;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))+PerlinNoise(x+mx,y+my)&lt;=<span class="number">1</span>)ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">4</span>; x&lt;=size<span class="number">-5</span>; x++) &#123;</span><br><span class="line">building[x][size/<span class="number">2</span>]=BUILDING_BRIDGE;</span><br><span class="line">data[x][size/<span class="number">2</span>]|=((<span class="number">1</span>&lt;&lt;<span class="number">0</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">4</span>; y&lt;=size<span class="number">-5</span>; y++) &#123;</span><br><span class="line">building[size/<span class="number">2</span>][y]=BUILDING_BRIDGE;</span><br><span class="line">data[size/<span class="number">2</span>][y]|=((<span class="number">1</span>&lt;&lt;<span class="number">1</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=size/<span class="number">2</span><span class="number">-1</span>; x&lt;=size/<span class="number">2</span>+<span class="number">1</span>; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=size/<span class="number">2</span><span class="number">-1</span>; y&lt;=size/<span class="number">2</span>+<span class="number">1</span>; y++) &#123;</span><br><span class="line">building[x][y]=BUILDING_NONE;</span><br><span class="line">data[x][y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">setTower(size/<span class="number">2</span>,size/<span class="number">2</span>,<span class="number">-2</span>,(players)/<span class="number">2</span>-rand()%<span class="number">2</span>);</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-5</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>)setPalace(<span class="number">2</span>,dpos+<span class="number">2</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)setPalace(dpos+<span class="number">2</span>,size<span class="number">-3</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>)setPalace(size<span class="number">-3</span>,size<span class="number">-3</span>-dpos,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c)setPalace(size<span class="number">-3</span>-dpos,<span class="number">2</span>,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_RIVER: &#123;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))+PerlinNoise(x+mx,y+my)&lt;=<span class="number">1</span>)ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=size/<span class="number">2</span><span class="number">-1</span>; x&lt;=size/<span class="number">2</span>+<span class="number">1</span>; x++)<span class="keyword">if</span>(ter[x][y]==TERRAIN_EMPTY&amp;&amp;<span class="built_in">abs</span>(size/<span class="number">2</span>-x)+PerlinNoise(x+mx,y+my)&lt;<span class="number">1.2</span>) &#123;</span><br><span class="line">ter[x][y]=TERRAIN_SEA;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mustBuild=rand()%(size<span class="number">-6</span>)+<span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> setWait=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">3</span>; y&lt;=size<span class="number">-4</span>; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(setWait&lt;=<span class="number">0</span>&amp;&amp;(y==mustBuild||rand()%<span class="number">4</span>==<span class="number">0</span>)) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=size/<span class="number">2</span><span class="number">-2</span>; x&lt;=size/<span class="number">2</span>+<span class="number">2</span>; x++) &#123;</span><br><span class="line">building[x][y]=BUILDING_BRIDGE;</span><br><span class="line">data[x][y]|=((<span class="number">1</span>&lt;&lt;<span class="number">0</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">setWait=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line">setWait--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-6</span>)*<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)setPalace(<span class="number">3</span>,dpos+<span class="number">3</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c)setPalace(size<span class="number">-4</span>,size<span class="number">-4</span>-dpos,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_HILL: &#123;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))+PerlinNoise(x+mx,y+my)&lt;=<span class="number">2</span>)ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">4</span>; x&lt;=size<span class="number">-5</span>; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">4</span>; y&lt;=size<span class="number">-5</span>; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(PerlinNoise(x+mx,y+my)&lt;=<span class="number">0</span>) &#123;</span><br><span class="line">ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> tb=(size+<span class="number">1</span>)*<span class="number">3</span>/<span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;tb; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> bx=rand()%(size<span class="number">-10</span>)+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> by=rand()%(size<span class="number">-10</span>)+<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> d[<span class="number">2</span>];</span><br><span class="line">d[<span class="number">0</span>]=i%<span class="number">4</span>;</span><br><span class="line">d[<span class="number">1</span>]=d[<span class="number">0</span>]^<span class="number">2</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> di=<span class="number">0</span>; di&lt;<span class="number">2</span>; di++) &#123;</span><br><span class="line"><span class="keyword">int</span> nx=bx;</span><br><span class="line"><span class="keyword">int</span> ny=by;</span><br><span class="line"><span class="keyword">while</span>(inBound(nx,ny)&amp;&amp;ter[nx][ny]==TERRAIN_MOUNTAIN) &#123;</span><br><span class="line">building[nx][ny]=BUILDING_BRIDGE;</span><br><span class="line">data[nx][ny]|=(<span class="number">1</span>&lt;&lt;(d[<span class="number">0</span>]))|(<span class="number">1</span>&lt;&lt;(d[<span class="number">1</span>]));</span><br><span class="line">nx+=dx[d[di]];</span><br><span class="line">ny+=dy[d[di]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-5</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(dpos%(size<span class="number">-5</span>)==<span class="number">0</span>)dpos++;</span><br><span class="line">dpos%=c;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>)setPalace(<span class="number">2</span>,dpos+<span class="number">2</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)setPalace(dpos+<span class="number">2</span>,size<span class="number">-3</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>)setPalace(size<span class="number">-3</span>,size<span class="number">-3</span>-dpos,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c)setPalace(size<span class="number">-3</span>-dpos,<span class="number">2</span>,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_BOB: &#123;</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-5</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(dpos%(size<span class="number">-5</span>)==<span class="number">0</span>)dpos++;</span><br><span class="line">dpos%=c;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">setPalace(<span class="number">2</span>,dpos+<span class="number">2</span>,id);</span><br><span class="line">setTower(<span class="number">2</span>,dpos+<span class="number">1</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(<span class="number">2</span>,dpos+<span class="number">3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(<span class="number">3</span>,dpos+<span class="number">1</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(<span class="number">3</span>,dpos+<span class="number">2</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(<span class="number">3</span>,dpos+<span class="number">3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">setPalace(dpos+<span class="number">2</span>,size<span class="number">-3</span>,id);</span><br><span class="line">setTower(dpos+<span class="number">1</span>,size<span class="number">-4</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(dpos+<span class="number">1</span>,size<span class="number">-3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(dpos+<span class="number">2</span>,size<span class="number">-4</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(dpos+<span class="number">3</span>,size<span class="number">-4</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(dpos+<span class="number">3</span>,size<span class="number">-3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">setPalace(size<span class="number">-3</span>,size<span class="number">-3</span>-dpos,id);</span><br><span class="line">setTower(size<span class="number">-4</span>,size<span class="number">-4</span>-dpos,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-4</span>,size<span class="number">-3</span>-dpos,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-4</span>,size<span class="number">-2</span>-dpos,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-3</span>,size<span class="number">-4</span>-dpos,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-3</span>,size<span class="number">-2</span>-dpos,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c)</span><br><span class="line">&#123;</span><br><span class="line">setPalace(size<span class="number">-3</span>-dpos,<span class="number">2</span>,id);</span><br><span class="line">setTower(size<span class="number">-4</span>-dpos,<span class="number">2</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-4</span>-dpos,<span class="number">3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-3</span>-dpos,<span class="number">3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-2</span>-dpos,<span class="number">2</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">setTower(size<span class="number">-2</span>-dpos,<span class="number">3</span>,<span class="number">-2</span>,rand()%<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))+PerlinNoise(x+mx,y+my)&lt;=<span class="number">1</span>&amp;&amp;building[x][y]!=BUILDING_TOWER&amp;&amp;building[x][y]!=BUILDING_PALACE)ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">4</span>; x&lt;=size<span class="number">-5</span>; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">4</span>; y&lt;=size<span class="number">-5</span>; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(PerlinNoise(x+mx,y+my)&lt;=<span class="number">0</span>&amp;&amp;building[x][y]!=BUILDING_TOWER&amp;&amp;building[x][y]!=BUILDING_PALACE) &#123;</span><br><span class="line">ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_CLEAN: &#123;</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-5</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))&lt;=<span class="number">0</span>)ter[x][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">3</span>; x&lt;=size/<span class="number">2</span><span class="number">-2</span>; x++) &#123;</span><br><span class="line">building[x][size/<span class="number">2</span>]=BUILDING_BRIDGE;</span><br><span class="line">data[x][size/<span class="number">2</span>]|=((<span class="number">1</span>&lt;&lt;<span class="number">0</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=size/<span class="number">2</span>+<span class="number">2</span>; x&lt;=size<span class="number">-4</span>; x++) &#123;</span><br><span class="line">building[x][size/<span class="number">2</span>]=BUILDING_BRIDGE;</span><br><span class="line">data[x][size/<span class="number">2</span>]|=((<span class="number">1</span>&lt;&lt;<span class="number">0</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">3</span>; y&lt;=size/<span class="number">2</span><span class="number">-2</span>; y++) &#123;</span><br><span class="line">building[size/<span class="number">2</span>][y]=BUILDING_BRIDGE;</span><br><span class="line">data[size/<span class="number">2</span>][y]|=((<span class="number">1</span>&lt;&lt;<span class="number">1</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=size/<span class="number">2</span>+<span class="number">2</span>; y&lt;=size<span class="number">-4</span>; y++) &#123;</span><br><span class="line">building[size/<span class="number">2</span>][y]=BUILDING_BRIDGE;</span><br><span class="line">data[size/<span class="number">2</span>][y]|=((<span class="number">1</span>&lt;&lt;<span class="number">1</span>)|(<span class="number">1</span>&lt;&lt;<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line">setTower(size/<span class="number">2</span>,size/<span class="number">2</span>,<span class="number">-1</span>,<span class="number">0</span>);</span><br><span class="line">setTower(size/<span class="number">2</span><span class="number">-1</span>,size/<span class="number">2</span>,<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line">setTower(size/<span class="number">2</span>+<span class="number">1</span>,size/<span class="number">2</span>,<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line">setTower(size/<span class="number">2</span>,size/<span class="number">2</span><span class="number">-1</span>,<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line">setTower(size/<span class="number">2</span>,size/<span class="number">2</span>+<span class="number">1</span>,<span class="number">-2</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">3</span>;x&lt;=size<span class="number">-4</span>;x++) <span class="keyword">if</span>(building[x][<span class="number">3</span>]!=BUILDING_BRIDGE&amp;&amp;building[x][<span class="number">3</span>]!=BUILDING_TOWER) ter[x][<span class="number">3</span>]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">3</span>;x&lt;=size<span class="number">-4</span>;x++) <span class="keyword">if</span>(building[x][size<span class="number">-4</span>]!=BUILDING_BRIDGE&amp;&amp;building[x][size<span class="number">-4</span>]!=BUILDING_TOWER) ter[x][size<span class="number">-4</span>]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">3</span>;y&lt;=size<span class="number">-4</span>;y++) <span class="keyword">if</span>(building[<span class="number">3</span>][y]!=BUILDING_BRIDGE&amp;&amp;building[<span class="number">3</span>][y]!=BUILDING_TOWER) ter[<span class="number">3</span>][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">3</span>;y&lt;=size<span class="number">-4</span>;y++) <span class="keyword">if</span>(building[size<span class="number">-4</span>][y]!=BUILDING_BRIDGE&amp;&amp;building[size<span class="number">-4</span>][y]!=BUILDING_TOWER) ter[size<span class="number">-4</span>][y]=TERRAIN_MOUNTAIN;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(dpos%(size<span class="number">-5</span>)==<span class="number">0</span>)dpos++;</span><br><span class="line">dpos%=c;</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>) setPalace(<span class="number">1</span>,dpos+<span class="number">1</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>) setPalace(dpos+<span class="number">1</span>,size<span class="number">-2</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>) setPalace(size<span class="number">-2</span>,size<span class="number">-2</span>-dpos,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c) setPalace(size<span class="number">-2</span>-dpos,<span class="number">1</span>,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// for(int x=3; x&lt;=size-4; x++) &#123;</span></span><br><span class="line"><span class="comment">// for(int y=3; y&lt;=size-4; y++) &#123;</span></span><br><span class="line"><span class="comment">// if(building[x][y]!=BUILDING_PALACE) &#123;</span></span><br><span class="line"><span class="comment">// ter[x][y]=TERRAIN_MOUNTAIN;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_ISLAND: &#123;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> x=<span class="number">0</span>; x&lt;size; x++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> y=<span class="number">0</span>; y&lt;size; y++) &#123;</span><br><span class="line"><span class="keyword">if</span>(min(min(x,y),min(size<span class="number">-1</span>-x,size<span class="number">-1</span>-y))+PerlinNoise(x+mx,y+my)&lt;=<span class="number">1</span>)ter[x][y]=TERRAIN_SEA;</span><br><span class="line"><span class="keyword">else</span> ter[x][y]=TERRAIN_EMPTY;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">setTower(size/<span class="number">2</span>,size/<span class="number">2</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">2</span>);</span><br><span class="line">setBridge(size/<span class="number">2</span>+<span class="number">1</span>,size/<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">setBridge(size/<span class="number">2</span><span class="number">-1</span>,size/<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">setBridge(size/<span class="number">2</span>,size/<span class="number">2</span>+<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line">setBridge(size/<span class="number">2</span>,size/<span class="number">2</span><span class="number">-1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">setTower(size/<span class="number">2</span><span class="number">-5</span>,size/<span class="number">2</span><span class="number">-5</span>,<span class="number">-2</span>,<span class="number">4</span>);</span><br><span class="line">setTower(size/<span class="number">2</span><span class="number">-5</span>,size/<span class="number">2</span>+<span class="number">5</span>,<span class="number">-2</span>,<span class="number">4</span>);</span><br><span class="line">setTower(size/<span class="number">2</span>+<span class="number">5</span>,size/<span class="number">2</span><span class="number">-5</span>,<span class="number">-2</span>,<span class="number">4</span>);</span><br><span class="line">setTower(size/<span class="number">2</span>+<span class="number">5</span>,size/<span class="number">2</span>+<span class="number">5</span>,<span class="number">-2</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-7</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>)setPalace(<span class="number">3</span>,dpos+<span class="number">3</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)setPalace(dpos+<span class="number">3</span>,size<span class="number">-4</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>)setPalace(size<span class="number">-4</span>,size<span class="number">-4</span>-dpos,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c)setPalace(size<span class="number">-4</span>-dpos,<span class="number">3</span>,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> MAP_STYLE_RING: &#123;</span><br><span class="line"><span class="keyword">int</span> mx=rand();</span><br><span class="line"><span class="keyword">int</span> my=rand();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> tryBridge(x,y,n,w,s,e,r) do&#123;<span class="meta-keyword">if</span>(PerlinNoise(x+mx,y+my)&lt;=r)setBridge(x,y,n,w,s,e);&#125;while(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> genRing(_x,_r) do&#123;int x(_x);double r(_r);tryBridge(x,x,1,1,0,0,r);tryBridge(x,size-1-x,1,0,0,1,r);tryBridge(size-1-x,x,0,1,1,0,r);tryBridge(size-1-x,size-1-x,0,0,1,1,r);for(int i=x+1;i&lt;size-1-x;i++)&#123;<span class="meta-keyword">if</span>(i==size/2&amp;&amp;r&lt;1)continue;tryBridge(x,i,0,1,0,1,r);tryBridge(size-1-x,i,0,1,0,1,r);tryBridge(i,x,1,0,1,0,r);tryBridge(i,size-1-x,1,0,1,0,r);&#125;&#125;while(0)</span></span><br><span class="line">genRing(<span class="number">0</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>; i+<span class="number">2</span>&lt;=size/<span class="number">2</span>; i+=<span class="number">5</span>) &#123;</span><br><span class="line">genRing(i,(<span class="keyword">double</span>)i*<span class="number">0.5</span>/size);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size/<span class="number">2</span><span class="number">-1</span>; i&lt;=size/<span class="number">2</span>+<span class="number">1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=size/<span class="number">2</span><span class="number">-1</span>; j&lt;=size/<span class="number">2</span>+<span class="number">1</span>; j++) &#123;</span><br><span class="line"><span class="keyword">bool</span> isE=i==size/<span class="number">2</span>&amp;&amp;j==size/<span class="number">2</span>;</span><br><span class="line">setTower(i,j,isE?<span class="number">-1</span>:<span class="number">-2</span>,isE?<span class="number">0</span>:<span class="number">4</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> c=(size<span class="number">-5</span>)*<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> start=rand()%c;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> id=<span class="number">0</span>; id&lt;players; id++) &#123;</span><br><span class="line"><span class="keyword">int</span> pos=(start+id*c/players)%c;</span><br><span class="line"><span class="keyword">int</span> dpos=pos%(c/<span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="number">0</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>)setPalace(<span class="number">2</span>,dpos+<span class="number">2</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">2</span>)setPalace(dpos+<span class="number">2</span>,size<span class="number">-3</span>,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">2</span>&lt;=pos&amp;&amp;pos&lt;c/<span class="number">4</span>*<span class="number">3</span>)setPalace(size<span class="number">-3</span>,size<span class="number">-3</span>-dpos,id);</span><br><span class="line"><span class="keyword">if</span>(c/<span class="number">4</span>*<span class="number">3</span>&lt;=pos&amp;&amp;pos&lt;c)setPalace(size<span class="number">-3</span>-dpos,<span class="number">2</span>,id);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">undef</span> genRing</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;players; i++) &#123;</span><br><span class="line">alive[i]=<span class="literal">true</span>;</span><br><span class="line">playerType[i]=PLAYER_UNKNOWN;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dfs</span><span class="params">(Map*<span class="built_in">map</span>,<span class="keyword">int</span> id,<span class="keyword">int</span>&amp;x,<span class="keyword">int</span>&amp;y,<span class="keyword">bool</span> help,<span class="keyword">int</span> dep,<span class="keyword">double</span> alpha,<span class="keyword">double</span> beta)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(dep&lt;=<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>-&gt;isEnded()) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">map</span>-&gt;getWinner()==id?(<span class="number">1</span>&lt;&lt;<span class="number">30</span>):-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>-&gt;gameCount();</span><br><span class="line"><span class="keyword">double</span> score=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">map</span>-&gt;playerCount; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> s=i==id?<span class="number">1</span>:<span class="number">-1</span>;</span><br><span class="line">score+=s*(<span class="number">1.0</span>*<span class="built_in">map</span>-&gt;atomsCount[i]+<span class="number">1.0</span>*<span class="built_in">map</span>-&gt;landCount[i]);</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>-&gt;alive[i]) &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> dx=<span class="number">-3</span>; dx&lt;=<span class="number">3</span>; dx++) &#123;</span><br><span class="line"><span class="keyword">int</span> ry=<span class="number">3</span>-<span class="built_in">abs</span>(dx);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> dy=-ry; dy&lt;=ry; dy++) &#123;</span><br><span class="line"><span class="keyword">int</span> tx=<span class="built_in">map</span>-&gt;palacesx[i]+dx;</span><br><span class="line"><span class="keyword">int</span> ty=<span class="built_in">map</span>-&gt;palacesy[i]+dy;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>-&gt;inBound(tx,ty)) &#123;</span><br><span class="line"><span class="keyword">int</span> o=<span class="built_in">map</span>-&gt;owner[tx][ty];</span><br><span class="line"><span class="keyword">if</span>(o&gt;=<span class="number">0</span>) &#123;</span><br><span class="line">score+=(o==id?<span class="number">1e4</span>:<span class="number">-1e4</span>)/(<span class="built_in">abs</span>(dx)+<span class="built_in">abs</span>(dy)+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> score;</span><br><span class="line">&#125;</span><br><span class="line">x=<span class="number">-1</span>;</span><br><span class="line">y=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">double</span> score;</span><br><span class="line"><span class="keyword">double</span> score1d=-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line"><span class="keyword">double</span> rnd=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">if</span>(help)score=-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line"><span class="keyword">else</span> score=(<span class="number">1</span>&lt;&lt;<span class="number">30</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="built_in">map</span>-&gt;size; i++)<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;<span class="built_in">map</span>-&gt;size; j++) &#123;</span><br><span class="line"><span class="keyword">bool</span> ok=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(help)ok=<span class="built_in">map</span>-&gt;choiceVaild(i,j,id);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> tid=<span class="number">0</span>; tid&lt;MAX_PLAYERS; tid++) &#123;</span><br><span class="line"><span class="keyword">if</span>(tid!=id&amp;&amp;<span class="built_in">map</span>-&gt;choiceVaild(i,j,tid))ok=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!ok)<span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">int</span> pl=<span class="built_in">map</span>-&gt;owner[i][j];</span><br><span class="line"><span class="function">Map <span class="title">tmap</span><span class="params">(*<span class="built_in">map</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(!help) &#123;</span><br><span class="line"><span class="keyword">int</span> npl=(id+<span class="number">1</span>)%tmap.playerCount;</span><br><span class="line"><span class="keyword">while</span>(npl!=pl) &#123;</span><br><span class="line"><span class="keyword">if</span>(npl==<span class="number">0</span>) &#123;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line">&#125;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(npl);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line">npl=(npl+<span class="number">1</span>)%tmap.playerCount;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(pl);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.sendAtoms(i,j,<span class="number">-1</span>,<span class="number">0</span>,pl,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line"><span class="keyword">if</span>(!help) &#123;</span><br><span class="line"><span class="keyword">int</span> npl=(pl+<span class="number">1</span>)%tmap.playerCount;</span><br><span class="line"><span class="keyword">while</span>(npl!=id) &#123;</span><br><span class="line"><span class="keyword">if</span>(npl==<span class="number">0</span>) &#123;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line">&#125;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(npl);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line">npl=(npl+<span class="number">1</span>)%tmap.playerCount;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">tmap.resetEvent();</span><br><span class="line">tmap.towersProduce(id);</span><br><span class="line"><span class="keyword">while</span>(tmap.hasEvent())tmap.doGameTick();</span><br><span class="line"><span class="keyword">int</span> tx,ty;</span><br><span class="line"><span class="keyword">double</span> newScore=dfs(&amp;tmap,id,tx,ty,!help,dep<span class="number">-1</span>,alpha,beta);</span><br><span class="line"><span class="keyword">double</span> new1d;</span><br><span class="line"><span class="keyword">double</span> trnd=rand01();</span><br><span class="line"><span class="keyword">bool</span> cha=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(help) &#123;</span><br><span class="line">cha=newScore&gt;score;</span><br><span class="line"><span class="keyword">if</span>(newScore==score) &#123;</span><br><span class="line"><span class="function">Map <span class="title">dmap</span><span class="params">(*<span class="built_in">map</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> less=dmap.atomLimit(i,j)-dmap.atoms[i][j];</span><br><span class="line">dmap.resetEvent();</span><br><span class="line">dmap.sendAtoms(i,j,<span class="number">-1</span>,<span class="number">0</span>,id,less);</span><br><span class="line"><span class="keyword">while</span>(dmap.hasEvent())dmap.doGameTick();</span><br><span class="line"><span class="keyword">int</span> tx,ty;</span><br><span class="line">new1d=(dfs(&amp;dmap,id,tx,ty,<span class="literal">true</span>,<span class="number">0</span>,alpha,beta)-dfs(<span class="built_in">map</span>,id,tx,ty,<span class="literal">true</span>,<span class="number">0</span>,alpha,beta))/less;</span><br><span class="line"><span class="keyword">if</span>(new1d&gt;score1d)cha=<span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(new1d==score1d) &#123;</span><br><span class="line">cha=trnd&gt;rnd;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> cha=newScore&lt;score||(newScore==score&amp;&amp;trnd&gt;rnd);</span><br><span class="line"><span class="keyword">if</span>(cha) &#123;</span><br><span class="line">x=i;</span><br><span class="line">y=j;</span><br><span class="line">score=newScore;</span><br><span class="line"><span class="keyword">if</span>(help)score1d=new1d;</span><br><span class="line">rnd=trnd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(help) &#123;</span><br><span class="line"><span class="keyword">if</span>(score&gt;alpha) &#123;</span><br><span class="line">alpha=score;</span><br><span class="line"><span class="keyword">if</span>(alpha&gt;=beta)<span class="keyword">goto</span> end;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(score&lt;beta) &#123;</span><br><span class="line">beta=score;</span><br><span class="line"><span class="keyword">if</span>(beta&lt;=alpha)<span class="keyword">goto</span> end;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">end:</span><br><span class="line">;</span><br><span class="line"><span class="keyword">return</span> score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span> AILV[MAX_PLAYERS];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">AI</span><span class="params">(Map*<span class="built_in">map</span>,<span class="keyword">int</span> id,<span class="keyword">int</span>&amp;x,<span class="keyword">int</span>&amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">bool</span> mistake=rand01()&gt;AILV[id];</span><br><span class="line">dfs(<span class="built_in">map</span>,id,x,y,<span class="literal">true</span>,mistake?<span class="number">1</span>:<span class="number">2</span>,-(<span class="number">1</span>&lt;&lt;<span class="number">30</span>),(<span class="number">1</span>&lt;&lt;<span class="number">30</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cursorx[MAX_PLAYERS];</span><br><span class="line"><span class="keyword">int</span> cursory[MAX_PLAYERS];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decide</span><span class="params">(Map*<span class="built_in">map</span>,<span class="keyword">int</span> id,<span class="keyword">int</span>&amp;x,<span class="keyword">int</span>&amp;y)</span> </span>&#123;</span><br><span class="line"><span class="keyword">switch</span>(<span class="built_in">map</span>-&gt;playerType[id]) &#123;</span><br><span class="line"><span class="keyword">case</span> PLAYER_UNKNOWN: &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> PLAYER_AI: &#123;</span><br><span class="line">AI(<span class="built_in">map</span>,id,x,y);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> PLAYER_HUMAN: &#123;</span><br><span class="line"><span class="keyword">int</span> ux=cursorx[id];</span><br><span class="line"><span class="keyword">int</span> uy=cursory[id];</span><br><span class="line"><span class="built_in">map</span>-&gt;p-&gt;setCursor(<span class="literal">true</span>,<span class="number">100</span>);</span><br><span class="line"><span class="built_in">map</span>-&gt;moveCursor(ux,uy);</span><br><span class="line"><span class="keyword">while</span>(kbhit())getch();</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">int</span> key=getch();</span><br><span class="line"><span class="keyword">if</span>(key==ARROW)key=key*<span class="number">256</span>+getch();</span><br><span class="line"><span class="keyword">int</span> tx=ux,ty=uy;</span><br><span class="line"><span class="keyword">switch</span>(key) &#123;</span><br><span class="line"><span class="keyword">case</span> ESCAPE: &#123;</span><br><span class="line">closeKeyBoard();</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>'P':</span><br><span class="line"><span class="keyword">case</span>'p': &#123;</span><br><span class="line">x=y=<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">map</span>-&gt;p-&gt;setCursor(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>' <span class="string">':</span></span><br><span class="line">case'\n': &#123;</span><br><span class="line">x=ux;</span><br><span class="line">y=uy;</span><br><span class="line"><span class="built_in">map</span>-&gt;p-&gt;setCursor(<span class="literal">false</span>);</span><br><span class="line">cursorx[id]=x;</span><br><span class="line">cursory[id]=y;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">256</span>*ARROW+UP:</span><br><span class="line"><span class="keyword">case</span>'W':</span><br><span class="line"><span class="keyword">case</span>'w': &#123;</span><br><span class="line">tx--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">256</span>*ARROW+LEFT:</span><br><span class="line"><span class="keyword">case</span>'A':</span><br><span class="line"><span class="keyword">case</span>'a': &#123;</span><br><span class="line">ty--;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">256</span>*ARROW+DOWN:</span><br><span class="line"><span class="keyword">case</span>'S':</span><br><span class="line"><span class="keyword">case</span>'s': &#123;</span><br><span class="line">tx++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> <span class="number">256</span>*ARROW+RIGHT:</span><br><span class="line"><span class="keyword">case</span>'D':</span><br><span class="line"><span class="keyword">case</span>'d': &#123;</span><br><span class="line">ty++;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>'R':</span><br><span class="line"><span class="keyword">case</span>'r': &#123;</span><br><span class="line">tx=<span class="built_in">map</span>-&gt;palacesx[id];</span><br><span class="line">ty=<span class="built_in">map</span>-&gt;palacesy[id];</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span>'G':</span><br><span class="line"><span class="keyword">case</span>'g': &#123;</span><br><span class="line"><span class="built_in">map</span>-&gt;alive[id]=<span class="literal">false</span>;</span><br><span class="line"><span class="built_in">map</span>-&gt;p-&gt;setCursor(<span class="literal">false</span>);</span><br><span class="line">cursorx[id]=<span class="number">-1</span>;</span><br><span class="line">cursory[id]=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((tx!=ux||ty!=uy)&amp;&amp;<span class="built_in">map</span>-&gt;inBound(tx,ty)) &#123;</span><br><span class="line">ux=tx;</span><br><span class="line">uy=ty;</span><br><span class="line"><span class="built_in">map</span>-&gt;moveCursor(ux,uy);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>-&gt;p-&gt;setCursor(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> title[<span class="number">200</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">initKeyBoard();</span><br><span class="line"><span class="built_in">sprintf</span>(title,<span class="string">"原子战役%s (加载中……)"</span>,GAME_VERSION);</span><br><span class="line">setTitle(title);</span><br><span class="line">Printer p;</span><br><span class="line"><span class="function">Map <span class="title">map</span><span class="params">(MAP_SIZE)</span></span>;</span><br><span class="line"><span class="built_in">map</span>.p=&amp;p;</span><br><span class="line"><span class="keyword">int</span> PLAYERS=PEOPLE_NUMBER;</span><br><span class="line"><span class="keyword">int</span> HUMAN_PLAYERS=HUMAN_NUMBER;</span><br><span class="line">srand(time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAPS=<span class="number">7</span>;</span><br><span class="line">MAP_STYLE_TYPE Maps[MAPS]=&#123;MAP_STYLE_ARENA,MAP_STYLE_RIVER,MAP_STYLE_HILL,MAP_STYLE_ISLAND,MAP_STYLE_RING,MAP_STYLE_BOB,MAP_STYLE_CLEAN&#125;;<span class="comment">//分别为 中抢塔、过河、山地、中小塔、中大塔、没人小塔</span></span><br><span class="line"><span class="keyword">int</span> NUMBER=rand()%MAPS;</span><br><span class="line"><span class="keyword">if</span>(MAP_SIZE&lt;=<span class="number">19</span>) <span class="keyword">while</span>(NUMBER==<span class="number">4</span>) NUMBER=rand()%MAPS;</span><br><span class="line"><span class="keyword">if</span>(MAP_SIZE&lt;=<span class="number">9</span>) <span class="keyword">while</span>(NUMBER==<span class="number">1</span>||NUMBER==<span class="number">3</span>||NUMBER==<span class="number">4</span>||NUMBER==<span class="number">5</span>) NUMBER=rand()%MAPS;</span><br><span class="line">NUMBER=<span class="number">2</span>;</span><br><span class="line"><span class="built_in">map</span>.buildMap(Maps[NUMBER],PLAYERS);</span><br><span class="line"><span class="built_in">map</span>.p-&gt;setCursor(<span class="literal">false</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;PLAYERS; i++) &#123;</span><br><span class="line"><span class="built_in">map</span>.playerType[i]=i&lt;HUMAN_PLAYERS?PLAYER_HUMAN:PLAYER_AI;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>.speed=SPEED_NONE;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;PLAYERS; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>.playerType[i]==PLAYER_HUMAN) &#123;</span><br><span class="line">cursorx[i]=<span class="built_in">map</span>.palacesx[i];</span><br><span class="line">cursory[i]=<span class="built_in">map</span>.palacesy[i];</span><br><span class="line"><span class="built_in">map</span>.playerNames[i]=<span class="string">" 人类 "</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">double</span> AILVS[]= &#123;<span class="number">0.0</span>,<span class="number">0.3</span>,<span class="number">0.3</span>,<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.5</span>,<span class="number">0.9</span>,<span class="number">0.9</span>,<span class="number">0.9</span>,<span class="number">0.95</span>,<span class="number">0.95</span>,<span class="number">1.0</span>&#125;;</span><br><span class="line">AILV[i]=AILVS[rand()%(<span class="keyword">sizeof</span>(AILVS)/<span class="keyword">sizeof</span>(<span class="keyword">double</span>))];<span class="comment">//削弱AI难度</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>*name;</span><br><span class="line"><span class="keyword">if</span>(AILV[i]&lt;=<span class="number">0.050</span>)name=<span class="string">"菜鸡AI"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(AILV[i]&lt;=<span class="number">0.400</span>)name=<span class="string">"蒟蒻AI"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(AILV[i]&lt;=<span class="number">0.600</span>)name=<span class="string">"萌新AI"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(AILV[i]&lt;=<span class="number">0.900</span>)name=<span class="string">"普通AI"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(AILV[i]&lt;=<span class="number">0.950</span>)name=<span class="string">"高手AI"</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(AILV[i]&lt;=<span class="number">1.000</span>)name=<span class="string">"精英AI"</span>;</span><br><span class="line"><span class="keyword">else</span> name=<span class="string">"神-ZRQ"</span>;</span><br><span class="line"><span class="built_in">map</span>.playerNames[i]=name;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;; i++) &#123;</span><br><span class="line"><span class="built_in">map</span>.resetEvent();</span><br><span class="line"><span class="built_in">map</span>.towersProduce(<span class="number">-1</span>);</span><br><span class="line"><span class="built_in">map</span>.progress();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;PLAYERS; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>.alive[j]) &#123;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">map</span>.speed&amp;SPEED_NOROUNDPRINT)) &#123;</span><br><span class="line"><span class="built_in">sprintf</span>(title,TITLE_FORMAT,GAME_VERSION,i,<span class="built_in">map</span>.playerNames[j]);</span><br><span class="line">setTitle(title);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">map</span>.resetEvent();</span><br><span class="line"><span class="built_in">map</span>.towersProduce(j);</span><br><span class="line"><span class="built_in">map</span>.progress();</span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="built_in">map</span>.speed&amp;SPEED_NOROUNDPRINT))<span class="built_in">map</span>.print();</span><br><span class="line">decide(&amp;<span class="built_in">map</span>,j,x,y);</span><br><span class="line"><span class="built_in">map</span>.resetEvent();</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>.choiceVaild(x,y,j))<span class="built_in">map</span>.sendAtoms(x,y,<span class="number">-1</span>,<span class="number">0</span>,j,<span class="number">1</span>);</span><br><span class="line"><span class="built_in">map</span>.progress();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">closeKeyBoard();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有神仙的游戏&lt;br&gt;
    
    </summary>
    
    
    
      <category term="娱乐" scheme="http://xtwnirui.github.io/tags/%E5%A8%B1%E4%B9%90/"/>
    
      <category term="c++小游戏" scheme="http://xtwnirui.github.io/tags/c-%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>windows.h库小结</title>
    <link href="http://xtwnirui.github.io/2019/10/05/windows/"/>
    <id>http://xtwnirui.github.io/2019/10/05/windows/</id>
    <published>2019-10-05T04:21:10.000Z</published>
    <updated>2019-10-06T00:30:34.608Z</updated>
    
    <content type="html"><![CDATA[<p>这里讲述了一些关于windows.h库的内容。<br><a id="more"></a></p><h2 id="控制鼠标"><a href="#控制鼠标" class="headerlink" title="控制鼠标"></a>控制鼠标</h2><h3 id="控制鼠标移动"><a href="#控制鼠标移动" class="headerlink" title="控制鼠标移动"></a>控制鼠标移动</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">::SetCursorPos(x,y);<span class="comment">//让鼠标移动到(x,y)点。</span></span><br></pre></td></tr></table></figure><h3 id="控制鼠标点击"><a href="#控制鼠标点击" class="headerlink" title="控制鼠标点击"></a>控制鼠标点击</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mouse_event(MOUSEEVENTF_LEFTDOWN,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//鼠标按下</span></span><br><span class="line">mouse_event(MOUSEEVENTF_LEFTUP,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//鼠标松开</span></span><br></pre></td></tr></table></figure><h2 id="控制键盘"><a href="#控制键盘" class="headerlink" title="控制键盘"></a>控制键盘</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">keybd_event(x,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);<span class="comment">//按下这个键</span></span><br><span class="line">keybd_event(x,<span class="number">0</span>,KEYEVENTF_KEYUP,<span class="number">0</span>);<span class="comment">//松开这个键</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/masonlu/p/4631068.html" target="_blank" rel="noopener">键位表</a>  </p><h2 id="检测"><a href="#检测" class="headerlink" title="检测"></a>检测</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_DOWN(VK_NONAME) ((GetAsyncKeyState(VK_NONAME)&amp;0x8000)?1:0)</span></span><br></pre></td></tr></table></figure><h3 id="检测鼠标"><a href="#检测鼠标" class="headerlink" title="检测鼠标"></a>检测鼠标</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">KEY_DOWN(VK_LBUTTON)<span class="comment">//左键</span></span><br><span class="line">KEY_DOWN(VK_RBUTTON)<span class="comment">//右键</span></span><br><span class="line">KEY_DOWN(VK_MBUTTON)<span class="comment">//中键</span></span><br></pre></td></tr></table></figure><h3 id="检测键盘"><a href="#检测键盘" class="headerlink" title="检测键盘"></a>检测键盘</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">KEY_DOWN(x)<span class="comment">//是否按下这个键</span></span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/masonlu/p/4631068.html" target="_blank" rel="noopener">键位表</a></p><h2 id="控制光标位置"><a href="#控制光标位置" class="headerlink" title="控制光标位置"></a>控制光标位置</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hOut;COORD pos;</span><br><span class="line">hOut=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">pos.X=y;pos.Y=x;</span><br><span class="line">SetConsoleCursorPosition(hOut,pos);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,c);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在(x,y)这个位置输出一个字符c</p><h2 id="使光标消失"><a href="#使光标消失" class="headerlink" title="使光标消失"></a>使光标消失</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">dis_mouse</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ShowCursor(<span class="literal">false</span>);</span><br><span class="line">HANDLE hOut = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">CONSOLE_CURSOR_INFO cci;</span><br><span class="line">GetConsoleCursorInfo(hOut,&amp;cci);</span><br><span class="line">cci.bVisible=<span class="literal">false</span>;</span><br><span class="line">SetConsoleCursorInfo(hOut,&amp;cci);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="控制台大小设定"><a href="#控制台大小设定" class="headerlink" title="控制台大小设定"></a>控制台大小设定</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">set_windows</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">HANDLE hOut=GetStdHandle(STD_OUTPUT_HANDLE);SMALL_RECT rc;</span><br><span class="line">rc.Left=x1,rc.Top=y1,rc.Right=x2,rc.Bottom=y2;</span><br><span class="line">SetConsoleWindowInfo(hOut, TRUE, &amp;rc);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="改变颜色"><a href="#改变颜色" class="headerlink" title="改变颜色"></a>改变颜色</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">color</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE),a);&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/everlasting_20141622/article/details/52222006" target="_blank" rel="noopener">颜色表</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里讲述了一些关于windows.h库的内容。&lt;br&gt;
    
    </summary>
    
    
    
      <category term="电脑" scheme="http://xtwnirui.github.io/tags/%E7%94%B5%E8%84%91/"/>
    
  </entry>
  
  <entry>
    <title>数学题2</title>
    <link href="http://xtwnirui.github.io/2019/10/05/math1/"/>
    <id>http://xtwnirui.github.io/2019/10/05/math1/</id>
    <published>2019-10-05T03:36:40.000Z</published>
    <updated>2019-10-15T02:19:24.546Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一道毒瘤数学题<br><a id="more"></a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/t2yg231i.png" alt="404啦"><br>已知：$BD$与$EC$交于$O$，$AE=AD$，$BO=CO$<br>求证：$AB=AC$  </p><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><ol><li><a href="http://iwo.im/?q=%E5%88%9D%E4%B8%AD%E5%B9%B3%E9%9D%A2%E5%87%A0%E4%BD%95" target="_blank" rel="noopener">初中平面几何</a></li><li><a href="http://iwo.im/?q=%E4%B8%89%E8%A7%92%E5%BD%A2%E5%86%85%E5%A4%A7%E8%A7%92%E5%AF%B9%E5%A4%A7%E8%BE%B9" target="_blank" rel="noopener">三角形内大角对大边</a></li><li><a href="http://iwo.im/?q=%E6%AD%A3%E5%BC%A6%E5%87%BD%E6%95%B0%E7%9A%84%E5%8D%95%E8%B0%83%E6%80%A7" target="_blank" rel="noopener">正弦函数的单调性</a></li><li><a href="http://iwo.im/?q=%E6%AD%A3%E5%BC%A6%E5%AE%9A%E7%90%86" target="_blank" rel="noopener">正弦定理</a><h2 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h2>$\color{red}{\texttt{我的辅助线就不用虚线了}}$<br>$\color{red}\texttt{不要小看这道题！！！}$  <h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><img src="https://cdn.luogu.com.cn/upload/image_hosting/od6odfsd.png" alt="404啦"><br><strong>证（用反证法）：</strong><br>连接$ED$<br>假设$\angle OED&gt;\angle ODE$<br>$\because \angle OED&gt;\angle ODE$<br>$\therefore OD&gt;OE\Rightarrow -OE&gt;-OD\qquad\qquad(1)$<br>$\because AE=AD$<br>$\therefore \angle AED=\angle ADE$<br>$\therefore \angle BED=\angle CDE$<br>$\because \angle OED&gt;\angle ODE$<br>$\therefore \angle C&lt;\angle B$<br>$\because \angle C,\angle B<90^\circ$ $\therefore \sin c<\sin b$ $\because \frac{ec}{\sin a}="\frac{AE}{\sin" c},\frac{db}{\sin b}$ ad="AE,\sin" a="\sin" a$ ec>AD\qquad\qquad\qquad\qquad\qquad\qquad(2)$<br>$(2)+(1)\Rightarrow OC&gt;OD$，与题设不符。<br>$\therefore $原命题成立<br><a href="https://www.luogu.org/space/show?uid=44805" target="_blank" rel="noopener"><strong>证毕</strong></a></90^\circ$></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一道毒瘤数学题&lt;br&gt;
    
    </summary>
    
    
    
      <category term="平面几何" scheme="http://xtwnirui.github.io/tags/%E5%B9%B3%E9%9D%A2%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>数学题1</title>
    <link href="http://xtwnirui.github.io/2019/10/05/math2/"/>
    <id>http://xtwnirui.github.io/2019/10/05/math2/</id>
    <published>2019-10-05T03:36:29.000Z</published>
    <updated>2019-10-15T02:19:33.754Z</updated>
    
    <content type="html"><![CDATA[<p>这里有一道毒瘤数学题<br><a id="more"></a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><img src="https://cdn.luogu.com.cn/upload/image_hosting/egxwkz8u.png" alt="404啦"><br>已知：$D$是$BC$的中点，$\angle ADB=60^\circ$，$2\angle ACB=\angle ABC$<br>求证：$\angle CAB=90^\circ$  </p><h2 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h2><ol><li><a href="http://iwo.im/?q=%E5%88%9D%E4%B8%AD%E5%B9%B3%E9%9D%A2%E5%87%A0%E4%BD%95" target="_blank" rel="noopener">初中平面几何</a><h2 id="P-S"><a href="#P-S" class="headerlink" title="P.S."></a>P.S.</h2>$\color{red}{\texttt{我的辅助线就不用虚线了}}$<br>$\color{red}{\texttt{不要小看这道题！！！}}$  <h2 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h2><img src="https://cdn.luogu.com.cn/upload/image_hosting/rl8550m4.png" alt="404啦"><br><strong>证：</strong><br>把$\triangle ADB$沿$AD$对折得到$\triangle AED$，连接$EC，ED$<br>设$\angle ACB=\alpha$，则$\angle ABC=2\alpha$<br>$\because \angle ADB=90^\circ,\triangle AED \cong \triangle ABD$<br>$\therefore \angle ADE=\angle ADB=60^\circ$<br>$\therefore \angle EDC=180^\circ-\angle ADB-\angle ADE=60^\circ$<br>$\because DE=DB，D$是$BC$的中点<br>$\therefore ED=DB=DC$<br>$\therefore \triangle ECD$是正$\triangle$<br>$\therefore \angle DCE=\angle DEC=60^\circ$<br>$\therefore \angle ECA=60-\alpha$<br>$\because \triangle AED \cong \triangle ABD$<br>$\therefore \angle AED=\angle ABD=2\alpha$<br>$\therefore \angle EAC=180^\circ-\angle ECA-\angle CED-\angle DEA$<br>$\qquad\qquad\;=180^\circ-(60^\circ-\alpha)-60^\circ-2\alpha=60^\circ-\alpha$<br>$\therefore \angle ECA=\angle EAC$<br>$\therefore EC=EA$<br>$\therefore AB=EA=EC=CD=DB$<br>$\therefore \triangle ADB$是正$\triangle$<br>$\therefore \angle ABD=60^\circ$<br>$\because \angle ABD=2\alpha$<br>$\therefore \alpha=30^\circ$<br>$\therefore \alpha=180^\circ-\angle ACB-\angle ABC$<br>$\qquad=180^\circ-30^\circ-60^\circ=90^\circ$  </li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一道毒瘤数学题&lt;br&gt;
    
    </summary>
    
    
    
      <category term="平面几何" scheme="http://xtwnirui.github.io/tags/%E5%B9%B3%E9%9D%A2%E5%87%A0%E4%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>离散化</title>
    <link href="http://xtwnirui.github.io/2019/10/05/lisnahua/"/>
    <id>http://xtwnirui.github.io/2019/10/05/lisnahua/</id>
    <published>2019-10-05T03:32:46.000Z</published>
    <updated>2019-10-05T03:37:02.600Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码<br><a id="more"></a><br><div><div class="fold_hider"><div class="close hider_title">点击显/隐代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">shu</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> xuhao,shuzi,ans;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">shu a[<span class="number">100005</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp1</span><span class="params">(shu a,shu b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.shuzi&lt;b.shuzi;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp2</span><span class="params">(shu a,shu b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a.xuhao&lt;b.xuhao;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i].shuzi;</span><br><span class="line">        a[i].xuhao=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp1);</span><br><span class="line">    a[<span class="number">1</span>].ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i].shuzi==a[i<span class="number">-1</span>].shuzi) a[i].ans=a[i<span class="number">-1</span>].ans;</span><br><span class="line">        <span class="keyword">else</span> a[i].ans=i;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+<span class="number">1</span>,a+n+<span class="number">1</span>,cmp2);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) <span class="built_in">cout</span>&lt;&lt;a[i].ans&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接上代码&lt;br&gt;
    
    </summary>
    
    
    
      <category term="离散化" scheme="http://xtwnirui.github.io/tags/%E7%A6%BB%E6%95%A3%E5%8C%96/"/>
    
      <category term="模板" scheme="http://xtwnirui.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>高精度模板</title>
    <link href="http://xtwnirui.github.io/2019/10/05/integer/"/>
    <id>http://xtwnirui.github.io/2019/10/05/integer/</id>
    <published>2019-10-05T02:39:06.000Z</published>
    <updated>2019-10-05T03:34:24.683Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码<br><a id="more"></a><br><div><div class="fold_hider"><div class="close hider_title">点击显/隐代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">number</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> size,num[<span class="number">1005</span>];</span><br><span class="line">number()</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memset</span>(num,<span class="number">0</span>,<span class="keyword">sizeof</span>(num));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> c[<span class="number">1005</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,c+<span class="number">1</span>);</span><br><span class="line">size=<span class="built_in">strlen</span>(c+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=size;i++) num[i]=c[size-i+<span class="number">1</span>]-<span class="string">'0'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">size=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a)</span><br><span class="line">&#123;</span><br><span class="line">size++;</span><br><span class="line">num[size]=a%<span class="number">10</span>;</span><br><span class="line">a/=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">write</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size;i&gt;=<span class="number">1</span>;i--) <span class="built_in">printf</span>(<span class="string">"%d"</span>,num[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>!=(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(size!=a.size) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(num[i]!=a.num[i])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*<span class="keyword">this</span>!=a) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(size!=a.size) <span class="keyword">return</span> size&lt;a.size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=size;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line"><span class="keyword">if</span>(num[i]!=a.num[i])</span><br><span class="line"><span class="keyword">return</span> num[i]&lt;a.num[i];</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;=(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*<span class="keyword">this</span>&lt;a||*<span class="keyword">this</span>==a) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*<span class="keyword">this</span>&lt;=a) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="keyword">operator</span>&gt;=(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(*<span class="keyword">this</span>&lt;a) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> number <span class="keyword">operator</span>+(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">number ans;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">ans.size=max(size,a.size);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans.size;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[i]=num[i]+a.num[i]+t;</span><br><span class="line">t=ans.num[i]/<span class="number">10</span>;</span><br><span class="line">ans.num[i]%=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(t)</span><br><span class="line">&#123;</span><br><span class="line">ans.size++;</span><br><span class="line">ans.num[ans.size]+=t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ans.num[ans.size]&gt;=<span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[ans.size+<span class="number">1</span>]+=ans.num[ans.size]/<span class="number">10</span>;</span><br><span class="line">ans.num[ans.size]%=<span class="number">10</span>;</span><br><span class="line">ans.size++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> number <span class="keyword">operator</span>-(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">number ans;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">ans.size=max(size,a.size);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans.size;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[i]=num[i]-a.num[i]+t;</span><br><span class="line"><span class="keyword">int</span> x=(ans.num[i]+<span class="number">10</span>)%<span class="number">10</span>;</span><br><span class="line">t=(ans.num[i]-x)/<span class="number">10</span>;</span><br><span class="line">ans.num[i]=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!ans.num[ans.size]&amp;&amp;ans.size&gt;<span class="number">1</span>) ans.size--;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">inline</span> number <span class="keyword">operator</span>*(<span class="keyword">const</span> number &amp;a) <span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line">number ans;</span><br><span class="line">ans.size=size+a.size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=size;i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=a.size;j++)</span><br><span class="line">ans.num[i+j<span class="number">-1</span>]+=num[i]*a.num[j];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;ans.size;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[i+<span class="number">1</span>]+=ans.num[i]/<span class="number">10</span>;</span><br><span class="line">ans.num[i]%=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!ans.num[ans.size]&amp;&amp;ans.size&gt;<span class="number">1</span>) ans.size--;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> number <span class="title">times</span><span class="params">(<span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">number ans;</span><br><span class="line">ans.size=size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ans.size;i++) ans.num[i]=num[i]*b;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;ans.size;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[i+<span class="number">1</span>]+=ans.num[i]/<span class="number">10</span>;</span><br><span class="line">ans.num[i]%=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ans.num[ans.size]&gt;=<span class="number">10</span>&amp;&amp;ans.size&gt;<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans.num[ans.size+<span class="number">1</span>]+=ans.num[ans.size]/<span class="number">10</span>;</span><br><span class="line">ans.num[ans.size]%=<span class="number">10</span>;</span><br><span class="line">ans.size++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!ans.num[ans.size]&amp;&amp;ans.size&gt;<span class="number">1</span>) ans.size--;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> number <span class="title">divition</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!x) <span class="keyword">return</span> *<span class="keyword">this</span>;</span><br><span class="line">number ans;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">ans.size=size;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=ans.size;i&gt;=<span class="number">1</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">t=t*<span class="number">10</span>+num[i];</span><br><span class="line">ans.num[i]=t/x;</span><br><span class="line">t%=x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(!ans.num[ans.size]&amp;&amp;ans.size&gt;<span class="number">1</span>) ans.size--;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> number <span class="title">pow</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">number ans,res=*<span class="keyword">this</span>;</span><br><span class="line">ans.size=<span class="number">1</span>;</span><br><span class="line">ans.num[ans.size]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=x;i;i&gt;&gt;=<span class="number">1</span>,res=res*res)</span><br><span class="line"><span class="keyword">if</span>(i&amp;<span class="number">1</span>)</span><br><span class="line">ans=ans*res;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> number <span class="title">sqrt</span><span class="params">(<span class="keyword">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">number l,r=*<span class="keyword">this</span>,mid,x,t,one;</span><br><span class="line">one.size=<span class="number">1</span>;</span><br><span class="line">one.num[<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">l=one;</span><br><span class="line">one.num[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line">x=l+r;</span><br><span class="line">x=x.divition(<span class="number">2</span>);</span><br><span class="line">t=x.<span class="built_in">pow</span>(q);</span><br><span class="line"><span class="keyword">if</span>(t==*<span class="keyword">this</span>) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">if</span>(t&lt;*<span class="keyword">this</span>) l=x+one;</span><br><span class="line"><span class="keyword">else</span> r=x-one;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> r;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;&#125;</span><br></pre></td></tr></table></figure></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接上代码&lt;br&gt;
    
    </summary>
    
    
    
      <category term="模板" scheme="http://xtwnirui.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="高精" scheme="http://xtwnirui.github.io/tags/%E9%AB%98%E7%B2%BE/"/>
    
  </entry>
  
  <entry>
    <title>OI的知识</title>
    <link href="http://xtwnirui.github.io/2019/10/05/study/"/>
    <id>http://xtwnirui.github.io/2019/10/05/study/</id>
    <published>2019-10-05T02:39:06.000Z</published>
    <updated>2019-10-05T03:05:29.545Z</updated>
    
    <content type="html"><![CDATA[<script src=/js/crypto-js.js></script><script>function doDecrypt (pwd, onError) {console.log('in doDecrypt');const txt = document.getElementById('enc_content').innerHTML;let plantext;try {const bytes = CryptoJS.AES.decrypt(txt, pwd);var plaintext = bytes.toString(CryptoJS.enc.Utf8);} catch(err) {if(onError) {onError(err);}return;}document.getElementById('enc_content').innerHTML = plaintext;document.getElementById('enc_content').style.display = 'block';document.getElementById('enc_passwd').style.display = 'none';if(typeof MathJax !== 'undefined') {MathJax.Hub.Queue(['resetEquationNumbers', MathJax.InputJax.TeX],['PreProcess', MathJax.Hub],['Reprocess', MathJax.Hub]);}}</script><div id="enc_content" style="display:none">U2FsdGVkX1+y0sO81Q/fB5pEKj50vVbY4fijaZSmpiyTt2iuFgN+EY4FKm8Yost/d4Oh9y++6SCbxBwmTSMZ3zxwm7P4xllx3GhHLyd4bm4J+iGEa6hwiO7I+Ia1QJnxDr4di5s9hHv+6jpFKv+5lrEhhP/Awotg9CgEAZw60kHuV/b/nkuKMEFOEbAlRZCtC47AkY8Tjr5ZwEuVInkGKGPYI7rrjeMQmUiLb55tWcH8hjcYimTamqZBRlqHsRpfpAUEVc1Nj7F2oxHyL5hDX+A746QA6iHEQfS21QuJFem7K2d+kif2zHi7WmRhCSrbcRVob8nsjudGtOm5mIsiBZaCaW1eMIrOjMqMYbaVUBsiiJcJZitjSPuLXXpw1wJUOEsNXj7HTx4919H6kk6793O6XT3qJYrUJrvOSRVhBkodOj5UDsh4CVkwbNOLtalXLWD4iX34eN9xscuNj+dvsNXge706tEbRddQUaQuk1HW1Fi6NGDRwP4N4zdeBcixJKE6BgzalOqV0pRqkkMipdzNLYYHDP2RJWqEUFaE9JDbl3+WnmL+IKUxZvJDZfqcJorinK2+Accw2bsqBBU+HjCMgq0nq1f/EflwnYmap70QdH6j045wNDZCleopNPbfUqDwfRdNlzsBp1Y4Q0J1L9+o1f2tMjM/A55zBW8ffiui3Jyfrv+MiEv8nGbagwe5IfBpWnkqUoX8JO+dXrN/V/1F9KrCJBQJ6MVa/G34RrhPfkaj2be2azXL29uCSjMVQRVxSC8cKkImp6CyNWcbru3oRnYW/WnFf6u80+YMNBavvTvxr3gD/oDxV82tyqn0IPIj+JjPfTQyV/z7CKFQa3Pw2kgm+ccAeF+wJ6Bs5Km0/ZFKhi6MnSB7oHF1GNEOolfvX3eM4tCy+/LDIP6aHjvGfGOqWHhQtSATBnwWTmmqsAUHHmFoqUa6wb0Lfld5Tuy5l21380mkcj7dP3Ms0x3KUdzapOM/XfGS5UW3xEalpZfAQB73q6FXdw9AOIoV3+glvFgnqnPI6hVWRKcN0dWZET53hDOA7CbfHMpEGUe4g10xTsHUZCXMMD2uwOuMeisJOE9qqwcpz3Ch9RW/lKO0KBVVdlcMF+Ows1j23TTdEb4s5gCFOlBZ1/kNQwpb29kgZZDuuySnRETDBW93nTUBOW+k8v7rDVvpDKqluT00+m7nbP4pU6h9gy6sEetbRig2nDfQzF7RqBUfr/8SDtTAt+ZgBwqpdcGkcQdmz67WlUxcn9Ybe/xMvSFNEefVHjRyMmDVvXnnRl3R9SPL/8KzDSr3m7O8+gZkXNpvn9DYoDYxGQ2XX2hd3hIpykmFZoI5ifaFQTzKSBt5UlFU6wPDafQR+Qv62C2D8BWH1PCkDmVn5l+SqfckMsfvitxc8bDxL4lDj9ijKeoTPgCR25RTTdm8msPITwJNr7ZgeYpoZcuJB5xeue271WuY1RqxukiOuVy4OpBjt1nFiUky047gtrc7Y3M/rq0U2O7cVHrzUfcJT/PoiYAKKg4wWxWcByA/IIW26B1ulp85uQ+XeGgTbdaNMPiTwA0DAh9H7neHi8aoTydTkbvz86zPBR+7gToGY6ZnTjX7LduhuvOH/J1ZTYw+jYNV436apeMlrkrdxc42irShzW3pqwiy+OkW9nbDtxJYkykE9VE/bUKWKLYJYl7nUKe7OMxiQQ72hFVp93TXlvCgyfy3yW2tsTlg0LsGZfrz3Lx3WMyr+zwoCYLjBa114XoXgO4lZIwB+4wW1lTo4qbwONM6Aw3bjdelxjRRko/166A/zXj1SsgBz64BBqanQv1LXlqiC2H9oAvvireQ2oYCNrDNC5715apeX8EI5mK1G55zO6dvQq90gJJnG+ka0lgjyJRMImb6qKf3th8GZtd0RMmUai05KeQ+74I2iYY8BSyOaqxIOz0Mgel56dNXGGpPSuGA70AibBlhiwjIjmDWAoll6Q124wm2hBIs++QeXTU+GIJIUVA1+KZFnQ2wiXs4jWMxUaEziuidZZDxkUh5VQ5CjZLNqjiGREC382emvcMMXAFKSzCv0g470Yads165eISobd+/xGG24YaSRCucE0HYFpxPhgvE6nK908+w41K4ifLZO0hn4wAZ9F5tGru8DBboql8Yug0lUTMDKS/UyQZ/80NPAUB9DywsfbirOu901tUddH9OyseozC2w7g71QCXxf5/bA7LTUU7IPSqq7vI/fVrJN+2gYHF1leHFh4nI226mU+VkxdVT8lJCVBrDJ5DOkmmKK4kLUh+R5h3wYyFZbZbNFnaozyqLzUKEafNyXt2dhXF2EJIVqlL8ntGnKf23HpTgqAVtONdVCLPIP9H+v99tqrEwCbuEviTOKrcrczng45zL494hCqfU4rB6L8GlKSksFhNTsr8R2j9NRhFlCSCNKEH6oYQBrPMmW95V/mOASkE0DQWP9qdxQKPbDh/WutI89K9XombB2haEh8z3zT55C7tJlIEV3MyqXqmx/eyBN2jo9OAbjJztL3tI9ru1p/pXbiXLw/bZsyNXfO42jNzICaRbpkS/6yNcCXMq2Nv7z8XUt/qPXzHFFHhi4eamoqKi9vkDDslnxTMSUJTfSd3Se1BXRbhqWvcxVwkhXDkoRJQWliBrslQgezaaEd5jzQLb4hFM0Z6ONzqXiVUjjUmuhhN2MQUPQEULDM25hINzkx/p0VL0FSp+CN6izPyayMjzG84CpMnvRhYjiZHAlJj4hhyEAEdngwkGWUcjLAopRG3VS1tiZRTb9jNx8p+9jncwMiI8UAcn8skxWzvPS4RvpdP8eHSjdJsgHZfUVmNona+XtjkyL2qjGAJB6wxbnKv5MlYkLD4PZShU5GahfWmP2TvqU0fT7BvDsOLUq4zoX3GUgJJ4XbLchU4CNLqtXrPDu6Tn6QphqagKR/9uZWp7PyaURQLf/MX4H8SvMT5JLO8lB57GBFnqysxDtq/p4bEATxuRXcPGtPdDRA4FuBuCc//np29Bq4+JJxw2XoMsQfkSnm4DgGim2vuK6wq1EK6RwllITzcIv1cxWcfy/POMmMBk1KwxF3yPPSWf6Yhptpm/cbJvI8MOehPqFOabIMLCLcOA3lhDt0joFHwTbiICy1eqNIGJyIg9FrdDdAbstt+4qCtTE1SzL0vnqczNS0Gld9B/qwchsDBUrOEY8TnYak5rIoCQvE5QaSTRHqyqjjXm/3ldfAPuYwv9g3nGp4Gwr5QtdGanuEFfszhToI1S8zMpDqbki9/DA+UDuP8CBhHQnGvewIlVTDIIbTAcVWLEQVQ66bL1VZSeY9K0CgsQ++h6q02PNTvFTZOiumxLKOBtD3W9EcWAF/zAdz4EoV9j+jMoEnM2oUXmgLNwlgC1GfkFU6rTIIzlXNQA6oowakg+UCICgFSAh/ppuqTaB1e/3EJGjm6ezjWvPZAGFtRYsvSmafcBlhb4cuoKVIp9T4J8y+B3NV8dW9zsctslm9BuBgZM1Tlglf1XIQ0wDTz8ux3nlado7boLNEv9U1wiFf4xLO2kGESDej/mHUglN3Vr+ABbcSQ7LosE+zS83pjFmc0mLvH5o5AorXpdfTIXt8QBTKMim+DaYCb4RvQq/ermzr8LnNwfCkda8TWfNiTJwi4hEAOaKHX5rv8lxu3cUel/mE/JxciH7e7GctEt741NKmPTo4dAxPnw6QPq2sCxLThRnIjZPJipydzfKE/8VC+GL5zlK7/AlUYb9hT7PWMHh8b+2M2U8v74KP45xSnpMwPKjARa3pqBL2HNKg3oOvkO/dwWEGBKmC2MEzZlpGwN+5c46eH1e0zefhE/HxBNkuzFQOb32F0U15zu6c1qjODYhAYNodADxrnN25gwfk5nc9EUSmtjRqIsC1zqNsfpUPqYwA6Sk/tzA5xqdw6KzvbX62gHaCEN7+B9SDedyDMo4VLgnZ5Mm+tapHg57SdmZbQw0Tr5P5ufkjr9rg5k1EXsl7LZdldgGOp/05Bk7GfFOFiOEwUVY7rmxPfznm8QfYwWgHAQrnp6DMjS69MJMLM//q+ws6iBlBOkgfxv358dMYlhtujHammkhyHm/27lkzsNCqxdXk6kKY60dcJnA+UuIjAzWkS4F1Y3+F96hmLvGcFCldLju78avaS4Q6h3mCJotzWdP6frSl5aDdeMeLjKyMJtd0nKlnHFHrFokPDkPoeHCH7S06WJm/7PkUYW5HhEd35xPNr/QJrkA39cGvTl/vesQivnGOvrYPrKagJDp+Rla65l7OAoHJRtWH7NXsEuLTh1PwRtzv3XR2Te9wAekYD2NCslI5JQ3T5x65k0TXa7n87XqcPnw5o6D4SwqCBXNzcNveMyWELAYB+iFZqVyoGjWWpsKtI7DeGmQLYQ3ClOs8Bo94MUhlsezWRa9KrN3DuIaFmaBu9H+O2i0J23qktK80BAvNZ4j+mH/CMkb8KzSIg4KKdue1eRIIYvdknSBISuvY9bZ/6JLS9QndTQTTV8flY6quA3l095/WE1a58PIxfFLTR7onADbUvZ/gqRymtOovrTNQRqtAEDC9MkZ5PAQQ/ogyxgpfchyJUmYPKhLtbDMBOUilwXna4pKQUrCDzDwVZfqWtZZ4VVyt0cCCJ68x2ZIH1ZcZ+lOqB9Jr7jPbzWmAojBLdEtT3QSTz8WlGRMUySUarkjihLQeudzrF+27gWbikMQWXhhIdtnwswVIw4zAaiu7ZIM9g9eHDmZZSFg5pNsYODc5NoHVmRf5MhHT7BwS8Z4RHPNZUVbec2Ae2apv7cO6XL66q9wGeMz1M9f5oUmjoexeBQt4OqlmynXo/U3GChblHtQCEelBofRoqWneaVK+noGkOzhLRPuEaqKTc/VeqwZJV6AoU5OE+1VGuXjAcN9ZpBps1caRXzReovyXibukGH0dxhDHg9WoIX6Ky3XmmPPk2NegxeZQWtf0CPmADos10qfKOFlJLP0u7KDlu9asne5B2i7rPeI2HwQ2tblj7gb3CmiSNZUK/HyScU+gqKS2xKwsEDUFHdKstNIc7wqLv7K2oEKZWf7jFwb/7AXHiysD5Ck1XJv7r/+moA6EI2ns5KzbDGCR/QS5z4MmHPIN4pKLURBwXxKaZLn32E9U4Xp3qrpLuNdEhq0P7eeqEPaUmq8kGLZWVoOsJ87wyI59R9PR09wOHYlXQELGW0BPictPDojvkMDquwgTFY8avo7elxWIVvbdntov0seu5UIyhmVmdpe+APrDbBLND4B/8022Wha3xJZJDlSNe/CBojbZO41sMCzAoJtw3jdpdRZHaHjDd4bJL5w0hskQx9y6GBYEtiPnzxlRPVSCwaX9quN9hMuXGj7Y0U/7AWc//h8f+NyEoKzq6NDxrnpjE2YPr94vYtDBt3lyhH8RnT1mrjBbKBiiA7Ous5SOaOyFIE5PESYbQYrnQOUnU7SdjytjMoRanYxqyDSM4pQF8OtOWIvcA2/Oqv6/parxxMgNQIc3GQYdfbonqixC1rvP0IJXuIXDtGQvgyhaK9ecFoMB6TRMAKVy8f0p870gHND7jtnSrliih4naKg8KVkrTc6ijLPtRjJ21qsClEN+h+NpwKwEV9BKcyMkHyAlH+Na/SwhYvffO1/rTzoBTsLudZKy9aVtxsI6Pl4kALjUiTSdcWCeCrvtPf/xGPeR0+AhDgB769MQ/u5M3B0G+XQQM35WkekyXGb2FqG8v/0rlGEVcwxC0HdQo85WqrGBTntcjuBgqKDltmIhN/9ZrPox1UJqYtaxSlFVctoD/+2UWdMRDzreUEqTeURyrOJUjuEC/Bh66iMXUTwXlUJguSGq3UpfdaT+Lvd7jQQ0x0AfHQpEm8n3O5kOASKByWubXA4qF4BDkb0X1dsYJQbeQpihzfqW7hgsJ/HNIxx71s2HEVBxIG7UkUHiAPErx2174EvexgWg6bLhs2jGmVlFyv1k60eVCunu90LscD2v7zXNSp18/4NQOUpBrswUZBbJGAPLg/Ti5ZgnC/HM2hY8wAc1fK+9jnwSS2BO+R5W26GXtQfPXj2/s9qqGXp+00rbQoYXg7nkuarHatFZO22q38hV5FVnFfTxRkLVsI50LuLO9FGzBwJKsUNKr4VFxmop6xwsNLoqIuQO1nWNpfvPXEZfBKVW2Nff8Cp9FzLxdcl515dS1oajp/LP4x72vi0yyN2EM3CTR4jgtoJuOTFShTAYAe9aG2qd1h4gy8aqKNrTRP/MLsa8A7EGj8XfI4oRIHgNOHonTRfJHEKbaRArwxtrQiskyc6LVJzeXXqbXnQuz8dQz9cEffbyyTvqteTMqlrp7p6Jai5nin9W+MXrMdrMQMByw5qt8+xtBcl2dmBlheRWeNekyMUp6wtSR/Re1+8yZ9s/OJSqV8A6x4WfpZl0ipi3H6T0ZkWdHZS5J15uwCU1ra1Knzsp9+V6keARpPgU6rqbGmLQnX7NWi+OEPJtfvTEJbeuomWd/B3z1UuBQ3TnqgzR7qR4Fi7H9BTJjUr5S49eqMWcO2mJuBMCsBkJ62wmGXcCwqY8Cuv5vnQHdGGzWXyawE9nc7tDyNiFZGBSgOEs90//0L++WUH3Eb6UqY8Arf+IoLJTc1lOgOQvvUEg5e4kqRYFE9M2RqTQLjLQ0m20SOz7C+zYsLBdUmO7f/LIm4BtH4iq4jqYvMcXYDHgK6cAnzgVGN1uYQBgWhjXMu4QatiI/x7aVdgqpQ6cUivM6nU0F2M8tYpjgc/+iu/1vBBcHxJKz0L5x2JIh39em8M7F+W2n/qYnKgw+0do0WA9NOTkNLrca3lRIMnlklX+3wYQ29p0UBcA9l2MLCzNladIRXtJs/tLkFWjKkQEiBTbvbHfJ3RpNgmrRRVY3EDXaLbBjJCK6GaKj76DpkTj64e143+piVD827AqZD7MnKSW2tShoNBhJxVm8opwXopSE83n7q4u/u657rZt3emB1sM/M5niHfUXjAidMqzAtL7PF8W5HJdy9x8+KrmokWEtSP2T8GbKAoyEoScRj/35MR+Vg/D3Q9sidKbqMMGktgSvSAVYnnBRo8uKJjZNYjtiVnI3regg6kVNA0cXVxMZQ0Lison6pDhrv0XCCjswB0xCRhPzXnm5IFeTwXrZtuovPUXpFWHNLwH3nADcfabNbJEW0toRA2Je75lBDewDU0fz7GtBuOwjG5eT1peq/c0/lMhPYzsz/syRyKrLR0dcAqUKQLu1wES2iAv3URQ6tdJVeOBofxQ/YeeM9FgPJAFFjZehpcijXK3vuG7zjlNPHTtBmW8ekP0QJOlGS5or5fbgnlwQu/vzRsIownK6GQ+wt0ccMofijLgr0PQ41UNnAJFebIO8sKNGdb32A12sz8WgqVgz0I5pli84NNuTMx1TsJnNxvCddF3MG6RnMb3y0DzIVwyvleqSOkXOIY1Q+xTmt7Xq4Moul5KfOwq+vTnrXepqEIB+wtwbu9G+cVJCssS8xiqSD6pQdeWbm6oNi0V+k146HU0Ky2SEKtzJjOtDWjUzxPQTxxt4cYezKV4VMRkQKkNi3ywl5jA3HE/wOgAJQdvargmiS56moZeNljmbOuMVBoWyr/wRaiXmLLKxLmJ9T700NJNTwQZ257c0qgfoKozzTk6itAa4oyUB2RaPGEB66GTZd8CDNkK6EEs74nJPxVxRbBVcVlWKqm7wcqrkpW9yCgnFmrdyjNBHco77sjgOjLRaTIa1h+4uxBW2prnKHD9IEKqtXgHyfEOm4wSedh6Hf0ElPX3Oxqyf1HjAh3iil56njqKWCfx0caUFpEkrMfOtOkztP3ZzU4W6J9SGeAeomTWeAdZM0/Ghz48GuDzZwbHPmQDMm4Loryagq4basnFPEkgz8Q1byQL4NBzDkaypc0puFGH/vYFu7uORONPuHXfF1aoEw7Wnuxa+HogEsDQBUc3wanzG11RW+HZdZhL/CVZPc8+2Wk/1JkIasu/Y75ZOUKNozcv+NY+yf7U/EHryljPmYVZAUK3dqpdmb266tuL+NXin6+UoCqxjCj9PaCsL8T4IVuvx80kgPz58y7zc6UU3IJQ+627ubUDTBclKrcROW/ulCZKR494IvjrQjrJcmU+Rx9UhtGdw4udWvEtfJPZb7MuMeidTizHEZ9OPkrIx3FksDYsIOrMT+Fx9xVXM85Kp1rnr7ztFKoSv5YpQQcZgRtBI4U9lBKWAzhRIXVxJt7VOE0Zi9GMGmpDBhxu9TaqDTac8PlIOHBK0aC56xe2lUNs1wsiI5op/TQ6HIoetHBZdsUXIxaU6i41j1GOn5q+2aviJJ5PQji0PeTXlv+vu87nBv5bAUqNLPOndjRC/X35XVviHZWobQgCTVKfJXUXGqVcqcUHbBGejmaMPZGq1K0B7JE0FKedIDX8l9W2nfcc+wbzRqW11xdHfABTYKThWThXMPRRKvFuISyK73nqP9PTnLBohAuObrSgdUS+g+LtUTtrk7SCB05nWcIOxiIAJ5p45E/ESfcE8mBCOa6hjxJpnuJbkCToguiAECSjJ/hZxHGpeMSyHXi5qitUCfy/zgYC/MmyOHDQt6g9ZBSoZCPyidO0+2Np+JbY59mSafI10L77kgZIgByD3AZ/yOn9k3Ina5HMqk2EdF5mVbs2FwyJgO1VLhJlNAnzhKOvg+QKRGZvk9OV8It5r209izm28rYJHslUGETZwi3pDRROUdzVDdkQ6KrmEiHF/69iOkLXhCgB77KB2JcOTlCApIvHHYAJndPAfyI9GXCs6MbAPcqlPLnDJHpX4fnn8VobTqE+9x+Y3/bAmWol+gWCaPz5cyU8rFnJFutYFGIsUD4Z+9wgRqSWX/Of2wf92dm2PzP5ktC5Qb9CgsAAKRncGIGcL4xPGK5yC5fJ3Em2DJzN/mkURVluQmUdP7is9kWmwJkqCxa9No4gn45oN3nNweRBzSyf2+2cyoUr6eVLrTcSSn1iU3qQIF9WjrhxsRHaSEbMWh6TasnD7D6+n/znGkAalv/KQe2XeewRuHu/Ti4FUL24U/mj31E1KKO48HCltZAlHHsF1zwSnR+uBXos7VavPwN3DpmYXvpnqVW9BfCyxPXK+aS294nlnUOq3EwEn+DdLxaqVh6eb8VCTWDGEg2TCGX/2VMrAN+osTzLNjkxLxINh4dpC+Z8WI9ltQkVbB6kVEZ8/dLDCo133b3TR3XF+IToQc9Rsg6KeoXx1/K7ikoa2fD5OTdoAw7IvTCdoRTmqWfLGyfzl6bn0vR+9k55GP0L8SfCLiBd61iOnhcVUZ22o4a72nFlh3LGwjQMMmxMKhw==</div><div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div><script>var onError = function(error) {document.getElementById("enc_error").innerHTML = "password error!"};function decrypt() {var passwd = document.getElementById("enc_pwd_input").value;console.log(passwd);doDecrypt(passwd, onError);}</script></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里有一些关于OI知识的东西&lt;br&gt;
    
    </summary>
    
    
    
      <category term="学习" scheme="http://xtwnirui.github.io/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>fhq_tree模板</title>
    <link href="http://xtwnirui.github.io/2019/10/05/fhq-tree/"/>
    <id>http://xtwnirui.github.io/2019/10/05/fhq-tree/</id>
    <published>2019-10-05T02:38:59.000Z</published>
    <updated>2019-10-05T03:34:13.737Z</updated>
    
    <content type="html"><![CDATA[<p>直接上代码<br><a id="more"></a><br><div><div class="fold_hider"><div class="close hider_title">点击显/隐代码</div></div><div class="fold"><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">tree</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> val,siz,lson,rson;</span><br><span class="line">node(<span class="keyword">int</span> v=<span class="number">0</span>,<span class="keyword">int</span> s=<span class="number">1</span>,<span class="keyword">int</span> l=<span class="number">0</span>,<span class="keyword">int</span> r=<span class="number">0</span>):val(v),siz(s),lson(l),rson(r) &#123;&#125;</span><br><span class="line">&#125;t[<span class="number">500005</span>];</span><br><span class="line">tree() &#123;root=<span class="number">1</span>,srand(time(<span class="number">0</span>)),t[<span class="number">0</span>].siz=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="keyword">int</span> root;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">char</span> <span class="title">Rand</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;<span class="keyword">return</span> rand()%(a+b)&lt;a;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;t[x].siz=t[t[x].lson].siz+t[t[x].rson].siz+<span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">new_node</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> tot=<span class="number">0</span>;</span><br><span class="line">t[++tot]=node(x,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">lfind</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> t[x].lson?lfind(t[x].lson):t[x].val;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rfind</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;<span class="keyword">return</span> t[x].rson?rfind(t[x].rson):t[x].val;&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">sbyval</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k,<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>) a=b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(t[x].val&lt;=k) a=x,sbyval(t[x].rson,k,t[a].rson,b),update(a);</span><br><span class="line"><span class="keyword">else</span> b=x,sbyval(t[x].lson,k,a,t[b].lson),update(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">sbysiz</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> k,<span class="keyword">int</span> &amp;a,<span class="keyword">int</span> &amp;b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>) a=b=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(k&lt;=t[t[x].lson].siz) b=x,sbysiz(t[x].lson,k,a,t[x].lson),update(x);</span><br><span class="line"><span class="keyword">else</span> a=x,sbysiz(t[x].rson,k-t[t[x].lson].siz<span class="number">-1</span>,t[x].rson,b),update(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x==<span class="number">0</span>||y==<span class="number">0</span>) <span class="keyword">return</span> x+y;</span><br><span class="line"><span class="keyword">if</span>(x==y) <span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">if</span>(Rand(t[x].siz,t[y].siz)) <span class="keyword">return</span> t[x].rson=merge(t[x].rson,y),update(x),x;</span><br><span class="line"><span class="keyword">return</span> t[y].lson=merge(x,t[y].lson),update(y),y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">ins</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root;</span><br><span class="line">sbyval(root,k,r1,r2);</span><br><span class="line">root=merge(merge(r1,new_node(k)),r2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root,r3=root,r=root;</span><br><span class="line">sbyval(root,k,r,r3);</span><br><span class="line">sbyval(r,k<span class="number">-1</span>,r1,r2);</span><br><span class="line">r2=merge(t[r2].lson,t[r2].rson);</span><br><span class="line">root=merge(merge(r1,r2),r3);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rank</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root,ans;</span><br><span class="line">sbyval(root,k<span class="number">-1</span>,r1,r2);</span><br><span class="line">ans=t[r1].siz,root=merge(r1,r2);</span><br><span class="line"><span class="keyword">return</span> ans+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">data</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root,ans;</span><br><span class="line">sbysiz(root,k<span class="number">-1</span>,r1,r2);</span><br><span class="line">ans=lfind(r2),root=merge(r1,r2);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">last</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root,ans;</span><br><span class="line">sbyval(root,k<span class="number">-1</span>,r1,r2);</span><br><span class="line">ans=rfind(r1),root=merge(r1,r2);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">next</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> r1=root,r2=root,ans;</span><br><span class="line">sbyval(root,k,r1,r2);</span><br><span class="line">ans=lfind(r2),root=merge(r1,r2);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直接上代码&lt;br&gt;
    
    </summary>
    
    
    
      <category term="模板" scheme="http://xtwnirui.github.io/tags/%E6%A8%A1%E6%9D%BF/"/>
    
      <category term="平衡树" scheme="http://xtwnirui.github.io/tags/%E5%B9%B3%E8%A1%A1%E6%A0%91/"/>
    
      <category term="fhq_tree" scheme="http://xtwnirui.github.io/tags/fhq-tree/"/>
    
  </entry>
  
</feed>
